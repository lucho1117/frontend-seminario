{"version":3,"sources":["login/img/result.svg","ScrollToTop.js","AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/ServiceGlobal.js","components/Dashboard.js","ventas/categoria/Service.js","ventas/categoria/Categoria.js","ventas/producto/Service.js","user/proveedores/Service.js","ventas/producto/Producto.js","user/clientes/Service.js","user/clientes/Cliente.js","ventas/tipoAlquiler/Service.js","ventas/tipoAlquiler/TipoAlquiler.js","ventas/venta/Service.js","ventas/venta/Factura.js","user/empleado/Service.js","ventas/venta/ReportFactura.js","ventas/venta/Venta.js","ventas/alquiler/Service.js","ventas/alquiler/ReportAlquiler.js","ventas/alquiler/Alquiler.js","ventas/PrincipalVentas.js","transportes/tipoVehiculo/Service.js","transportes/tipoVehiculo/TipoVehiculo.js","transportes/vehiculo/Service.js","transportes/vehiculo/Vehiculo.js","transportes/viaje/Service.js","transportes/cargamento/Service.js","transportes/viaje/Viaje.js","transportes/clientes/Service.js","transportes/clientes/Cliente.js","transportes/asignacion/Service.js","transportes/asignacion/ReportAsignacion.js","transportes/asignacion/Asignacion.js","construccion/tipoObra/Service.js","construccion/tipoObra/TipoObra.js","construccion/tipoMaterial/Service.js","construccion/tipoMaterial/TipoMaterial.js","construccion/material/Service.js","construccion/material/Material.js","construccion/obra/Service.js","construccion/obra/fase/Service.js","construccion/obra/fase/Detalle.js","construccion/obra/fase/ReportFase.js","construccion/obra/fase/Fase.js","construccion/obra/Obra.js","plantas/tipoMateriaPrima/Service.js","plantas/tipoMateriaPrima/TipoMateriaPrima.js","plantas/tipoMaquinaria/Service.js","plantas/tipoMaquinaria/TipoMaquinaria.js","plantas/materiaPrima/Service.js","plantas/materiaPrima/MateriaPrima.js","plantas/maquinaria/Service.js","plantas/maquinaria/Maquinaria.js","plantas/proceso/Service.js","plantas/proceso/detalle/Service.js","plantas/proceso/detalle/DetalleProceso.js","plantas/proceso/ReportProceso.js","plantas/proceso/Proceso.js","user/empleado/Empleado.js","App.js","login/Login.js","Principal.js","index.js"],"names":["module","exports","withRouter","props","location","useLocation","useEffect","window","scrollTo","children","AppTopbar","className","to","src","layoutColorMode","alt","type","onClick","onToggleMenuClick","onMobileTopbarMenuClick","classNames","mobileTopbarMenuActive","setAutenticado","AppFooter","AppSubmenu","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","onKeyDown","code","target","click","renderLink","i","content","submenuIcon","items","badge","value","Fragment","icon","label","renderLinkContent","aria-label","role","activeClassName","e","exact","tabIndex","href","url","map","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","setScale","scales","theme","setTheme","config","useRef","outsideClickListener","unbindOutsideClickListener","useCallback","current","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","isSameNode","contains","documentElement","style","fontSize","configClassName","replaceLink","linkElement","callback","isIE","setAttribute","id","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","themeElement","getElementById","test","navigator","userAgent","changeTheme","scheme","onColorModeChange","ref","prevState","length","inputId","name","onChange","onInputStyleChange","checked","inputStyle","htmlFor","rippleEffect","onRippleEffect","onLayoutModeChange","layoutMode","URL","process","conteoEmpleados","a","axios","get","respuesta","data","productosMasVendidos","productosMasAlquilados","Dashboard","setConteoEmpleados","getConteoEmpleados","ServiceGlobal","resp","valid","borderRadius","background","numeroEmpleados","width","height","area","list","obj","post","save","update","deleteById","Categoria","formCategoria","nombre","descripcion","categorias","setCategorias","categoriaDialog","setCategoriaDialog","deleteCategoriaDialog","setDeleteCategoriaDialog","categoria","setCategoria","submitted","setSubmitted","globalFilter","setGlobalFilter","toast","dt","Service","show","severity","summary","detail","msg","life","openNew","hideDialog","hideDeleteCategoriaDialog","edit","deletecategoria","onInputChange","header","onInput","placeholder","categoriaDialogFooter","idCategoria","deleteCategoriaDialogFooter","right","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","emptyMessage","responsiveLayout","field","sortable","body","rowData","headerStyle","minWidth","editcategoria","confirmDeletecategoria","visible","modal","footer","onHide","required","autoFocus","cols","Producto","formProducto","idProveedor","precio","stock","fechaIngreso","venta","productos","setProductos","proveedores","setProveedores","productoDialog","setProductoDialog","deleteProductoDialog","setDeleteProductoDialog","producto","setProducto","listCategorias","listProveedores","ServiceCategoria","ServiceProveedor","hideDeleteProductoDialog","deleteproducto","formatCurrency","toLocaleString","currency","productoDialogFooter","idProducto","deleteProductoDialogFooter","editProducto","confirmDeleteproducto","Select","MenuItem","TextField","variant","fullWidth","listByNegocio","Cliente","formCliente","idNegocio","apellido","dpi","nit","direccion","email","telefono","clientes","setClientes","clienteDialog","setClienteDialog","deleteClienteDialog","setDeleteClienteDialog","cliente","setCliente","aux","hideDeleteClienteDialog","deleteCliente","clienteDialogFooter","idCliente","deleteClienteDialogFooter","editCliente","confirmDeleteCliente","TipoAlquiler","formTipoAlquiler","tasaAlquiler","tipoAlquileres","setTipoAlquileres","tipoAlquilerDialog","setTipoAlquilerDialog","deleteTipoAlquilerDialog","setDeleteTipoAlquilerDialog","tipoAlquiler","setTipoAlquiler","hideDeleteTipoAlquilerDialog","deleteTipoAlquiler","tipoAlquilerDialogFooter","idTipoAlquiler","deleteTipoAlquilerDialogFooter","editTipoAlquiler","confirmDeleteTipoAlquiler","listTipoPago","Factura","submittedDetalle","setSubmittedDetalle","setFormDetalle","formDetalle","saveFactura","formFactura","listFacturas","back","setFormFactura","onInputChangeDetalle","cantidad","total","deleteDetalle","detalle","idFactura","splice","conteoTotal","acumulado","forEach","clearDetalle","factura","setFlagFactura","idTipoPago","tipoPago","idEmpleado","empleados","fecha","scrollable","scrollHeight","scrollDirection","flexGrow","flexBasis","rowIndex","frozen","filter","push","listByRolByArea","listByArea","listRol","listSede","listPlantas","styles","StyleSheet","create","section","marginLeft","padding","marginTop","table","ReportFactura","size","display","flexDirection","justifyContent","alignItems","backgroundColor","color","moment","format","empleado","textAlign","weighting","getContent","r","idDetalleVenta","fontStyle","Venta","flagFactura","facturas","setFacturas","setEmpleados","setTipoPago","expandedRows","setExpandedRows","facturaDialog","setFacturaDialog","reporteFactura","setReporteFactura","deleteFacturaDialog","setDeleteFacturaDialog","facturaDelete","setFacturaDelete","listClientes","listEmpleados","listProductos","alquiler","ServiceCliente","idRol","idAreaNegocio","ServiceEmpleado","ServiceProducto","confirmDeleteFactura","hideDeleteFacturaDialog","deleteFacturaDialogFooter","setFlagVenta","onRowToggle","rowExpansionTemplate","expander","ReportAlquiler","nombreCliente","fechaProximaFacturacion","nombreEmpleado","Alquiler","formAlquiler","totalDetalle","fechaProxima","setalquiler","alquileres","setAlquileres","alquilerDialog","setAlquilerDialog","deleteAlquilerDialog","setDeleteAlquilerDialog","tipo","setTipo","listTipoAlquiler","sumarDias","Date","ServiceTipoAlquiler","hideDeleteAlquilerDialog","deletealquiler","alquilerDialogFooter","idalquiler","deleteAlquilerDialogFooter","dias","setDate","getDate","setFlagAlquiler","confirmDeletealquiler","PrincipalVentas","flagVenta","flagAlquiler","titulos","setTitulos","setTotal","titulosAlquiler","setTitulosAlquiler","totalAlquiler","setTotalAlquiler","pieData","labels","datasets","pieDataAlquiler","totales","TipoVehiculo","formTipoVehiculo","ejes","toneladas","tipoVehiculos","setTipoVehiculos","tipoVehiculoDialog","setTipoVehiculoDialog","deleteTipoVehiculoDialog","setDeleteTipoVehiculoDialog","tipoVehiculo","setTipoVehiculo","hideDeleteTipoVehiculoDialog","deletetipoVehiculo","tipoVehiculoDialogFooter","idTipoVehiculo","deleteTipoVehiculoDialogFooter","edittipoVehiculo","confirmDeletetipoVehiculo","Vehiculo","formVehiculo","placa","marca","modelo","vehiculos","setVehiculos","vehiculoDialog","setVehiculoDialog","deleteVehiculoDialog","setDeleteVehiculoDialog","vehiculo","setVehiculo","listTipoVehiculos","ServiceTipoVehiculo","hideDeleteVehiculoDialog","deleteVehiculo","vehiculoDialogFooter","idVehiculo","deleteVehiculoDialogFooter","left","disponible","editVehiculo","confirmDeleteVehiculo","Viaje","formViaje","idCargamento","origen","destino","fechaInicio","fechaFin","kilometros","viajes","setViajes","cargamentos","setCargamentos","viajeDialog","setViajeDialog","deleteViajeDialog","setDeleteViajeDialog","viaje","setViaje","listCargamento","listCliente","ServiceCargamento","hideDeleteViajeDialog","deleteViaje","viajeDialogFooter","idViaje","deleteViajeDialogFooter","cargamento","estado","editViaje","confirmDeleteViaje","listTrasnporte","ClienteTransporte","idPrimero","idSegundo","empezarRuta","terminarRuta","ReportAsignacion","asignaciones","idAsignacion","Asignacion","formAsignacion","setAsignaciones","asignacionDialog","setAsignacionDialog","deleteAsigncionDialog","setDeleteAsigncionDialog","asignacion","setAsignacion","asignacionReportDialog","setasignacionReportDialog","empezarDialog","setEmpezarDialog","terminarDialog","setTerminarDialog","listViajes","listVehiculos","ServiceViaje","capacidad","ServiceVehiculo","idArea","hideDeleteAsigncionDialog","deleteasignacion","empezarAsignacion","terminarAsignacion","hideEmpezarDialog","hideTerminarDialog","asignacionDialogFooter","deleteAsigncionDialogFooter","empezarRutaDialogFooter","terminarRutaDialogFooter","confirmFinalizarAsignacion","confirmEmpezarAsignacion","confirmDeleteasignacion","TipoObra","formTipoObra","tipoObras","setTipoObras","tipoObraDialog","setTipoObraDialog","deletetipoTipoObraDialog","setDeletetipoTipoObraDialog","tipoObra","setTipoObra","hideDeletetipoTipoObraDialog","deletetipoObra","tipoObraDialogFooter","idTipoObra","deletetipoTipoObraDialogFooter","edittipoObra","confirmDeletetipoObra","TipoMaterial","formTipoMaterial","tipoMateriales","setTipoMateriales","tipoMaterialDialog","setTipoMaterialDialog","deletetipoTipoMaterialDialog","setDeletetipoTipoMaterialDialog","tipoMaterial","setTipoMaterial","hideDeletetipoTipoMaterialDialog","deletetipoMaterial","tipoMaterialDialogFooter","idTipoMaterial","deletetipoTipoMaterialDialogFooter","edittipoMaterial","confirmDeletetipoMaterial","Material","formMaterial","materiales","setMateriales","materialDialog","setMaterialDialog","deleteMaterialDialog","setDeleteMaterialDialog","material","setMaterial","listTipoMateriales","ServiceTipoMaterial","hideDeleteMaterialDialog","deletematerial","materialDialogFooter","idMaterial","deleteMaterialDialogFooter","editmaterial","confirmDeletematerial","listByObra","Detalle","submittedMaterial","setSubmittedMaterial","submittedManoObra","setSubmittedManoObra","manoObra","setManoObra","setDetalleMaterial","detalleMaterial","clearMaterial","formDetalleMaterial","clearManoObra","formManoObra","setFase","formFase","setFlagDetalle","fase","onInputChangeMaterial","precioTotal","onInputChangeManoObra","deleteMaterial","conteoTotalMaterial","deleteManoObra","conteoTotalManoObra","costoMaterial","costoTotal","costoManoObra","costo","bodyTitulo","ReportFase","formSize","precioMaterial","idManoObra","apellidoEmpleado","Fase","idObra","obra","unidad","fases","setFases","flagDetalle","faseDialog","setFaseDialog","deleteFaseDialog","setDeleteFaseDialog","listMateriales","ServiceMaterial","confirmDeleteFase","hideDeleteFaseDialog","deleteFase","deleteFaseDialogFooter","setFlagObra","idFase","Obra","formObra","obras","setObras","obraDialog","setObraDialog","deleteObraDialog","setDeleteObraDialog","setObra","flagObra","listTipoObras","ServiceTipoObra","hideDeleteObraDialog","deleteobra","obraDialogFooter","deleteObraDialogFooter","editobra","faseObra","confirmDeleteobra","TipoMateriaPrima","formTipoMateriaPrima","tipoMateriaPrimas","setTipoMateriaPrimas","tipoMateriaPrimaDialog","setTipoMateriaPrimaDialog","deletetipoMateriaPrimaDialog","setDeletetipoMateriaPrimaDialog","tipoMateriaPrima","setTipoMateriaPrima","hideDeletetipoMateriaPrimaDialog","deletetipoMateriaPrima","tipoMateriaPrimaDialogFooter","idTipoMateriaPrima","deletetipoMateriaPrimaDialogFooter","edittipoMateriaPrima","confirmDeletetipoMateriaPrima","TipoMaquinaria","formTipoMaquinaria","tipoMaquinarias","setTipoMaquinarias","tipoMaquinariaDialog","setTipoMaquinariaDialog","deleteTipoMaquinariaDialog","setDeleteTipoMaquinariaDialog","tipoMaquinaria","setTipoMaquinaria","hideDeleteTipoMaquinariaDialog","deletetipoMaquinaria","tipoMaquinariaDialogFooter","idTipoMaquinaria","deleteTipoMaquinariaDialogFooter","edittipoMaquinaria","confirmDeletetipoMaquinaria","MateriaPrima","formMateriaPrima","materiaPrimas","setMateriaPrimas","materiaPrimaDialog","setMateriaPrimaDialog","deleteMateriaPrimaDialog","setDeleteMateriaPrimaDialog","materiaPrima","setMateriaPrima","tiposMateriasPrimas","setTiposMateriasPrimas","listTipoMateriaPrima","ServiceTipoMateriaPrima","hideDeleteMateriaPrimaDialog","deletemateriaPrima","materiaPrimaDialogFooter","idMateriaPrima","deleteMateriaPrimaDialogFooter","editmateriaPrima","confirmDeletemateriaPrima","Maquinaria","formMaquinaria","maquinarias","setMaquinarias","maquinariaDialog","setMaquinariaDialog","deleteMaquinariaDialog","setDeleteMaquinariaDialog","maquinaria","setMaquinaria","tiposMaquinarias","setTiposMaquinarias","listTipoMaquinaria","ServiceTipoMaquinaria","hideDeleteMaquinariaDialog","deletemaquinaria","maquinariaDialogFooter","idMaquinaria","deleteMaquinariaDialogFooter","editmaquinaria","confirmDeletemaquinaria","DetalleProceso","formDetalleProceso","idProceso","proceso","detalleProcesos","setDetalleProcesos","detalleProcesoDialog","setDetalleProcesoDialog","deleteDetalleProcesoDialog","setDeleteDetalleProcesoDialog","detalleProceso","setDetalleProceso","listMateriasPrimas","listMaquinarias","ServiceMateriaPrima","ServiceMaquinaria","hideDeleteDetalleProcesoDialog","deletedetalleProceso","detalleProcesoDialogFooter","idDetalleProceso","deleteDetalleProcesoDialogFooter","setFlagProceso","editdetalleProceso","confirmDeletedetalleProceso","ReportProceso","procesos","Proceso","formProceso","setProcesos","procesoDialog","setProcesoDialog","deleteProcesoDialog","setDeleteProcesoDialog","setProceso","flagproceso","hideDeleteProcesoDialog","deleteproceso","procesoDialogFooter","deleteProcesoDialogFooter","editproceso","Detalleproceso","confirmDeleteproceso","bcrypt","require","Empleado","flagCrud","setFlagCrud","setIdArea","formEmpleado","fechaNacimiento","sueldo","idSede","password","empleadosDialog","setEmpleadosDialog","deleteEmpleadosDialog","setDeleteEmpleadosDialog","setEmpleado","setListRol","setListSede","empresa","setEmpresa","getListRol","getListSede","hideDeleteEmpleadosDialog","criptPassword","hash","err","deleteempleado","empleadosDialogFooter","deleteEmpleadosDialogFooter","editempleado","confirmDeleteempleado","departamento","App","setLayoutMode","setLayoutColorMode","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","copyTooltipRef","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","updateTargetEvents","isDesktop","innerWidth","element","classList","add","replace","RegExp","split","join","wrapperClass","position","onMobileSubTopbarMenuClick","path","render","colorMode","component","mode","Login","user","pass","loginForm","setLoginForm","Img","Principal","autenticado","ReactDOM"],"mappings":"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","file":"static/js/main.36ee02bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/result.388b5da3.svg\";","import { useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\n\nconst ScrollToTop = (props) => {\n\n    let location = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [location]);\n\n    return props.children;\n}\n\nexport default withRouter(ScrollToTop);\n","import React  from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const AppTopbar = (props) => {\n\n    return (\n        <div className=\"layout-topbar\">\n            <Link to=\"/\" className=\"layout-topbar-logo\">\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/logo-dark.svg' : 'assets/layout/images/logo-white.svg'} alt=\"logo\"/>\n                <span>PROYECTO</span>\n            </Link>\n\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\n                <i className=\"pi pi-bars\"/>\n            </button>\n\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\n                <i className=\"pi pi-ellipsis-v\" />\n            </button>\n\n                <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\n                   \n                    <li>\n                        <button className=\"p-link layout-topbar-button\" onClick={() => {props.setAutenticado(false)}}>\n                            Salir\n                        </button>\n                    </li>\n                </ul>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const AppFooter = () => {\n\n    return (\n        <div className=\"layout-footer\">\n            by\n            <span className=\"font-medium ml-2\">Lucio Eduardo Chumil Gutiérrez</span>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\nimport {Ripple} from \"primereact/ripple\";\nimport { Badge } from 'primereact/badge';\n\nconst AppSubmenu = (props) => {\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    const onMenuItemClick = (event, item, index) => {\n        //avoid processing disabled items\n        if (item.disabled) {\n            event.preventDefault();\n            return true;\n        }\n\n        //execute command\n        if (item.command) {\n            item.command({ originalEvent: event, item: item });\n        }\n\n        if (index === activeIndex)\n            setActiveIndex(null);\n        else\n            setActiveIndex(index);\n\n        if (props.onMenuItemClick) {\n            props.onMenuItemClick({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n\n    const onKeyDown = (event) => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            event.preventDefault();\n            event.target.click();\n        }\n    }\n\n    const renderLinkContent = (item) => {\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\n        let badge = item.badge && <Badge value={item.badge} />\n\n        return (\n            <React.Fragment>\n                <i className={item.icon}></i>\n                <span>{item.label}</span>\n                {submenuIcon}\n                {badge}\n                <Ripple/>\n            </React.Fragment>\n        );\n    }\n\n    const renderLink = (item, i) => {\n        let content = renderLinkContent(item);\n\n        if (item.to) {\n            return (\n                <NavLink aria-label={item.label} onKeyDown={onKeyDown} role=\"menuitem\" className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\n                    {content}\n                </NavLink>\n            )\n        }\n        else {\n            return (\n                <a tabIndex=\"0\" aria-label={item.label} onKeyDown={onKeyDown} role=\"menuitem\" href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\n                    {content}\n                </a>\n            );\n        }\n    }\n\n    let items = props.items && props.items.map((item, i) => {\n        let active = activeIndex === i;\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\n\n        if(props.root) {\n            return (\n                <li className={styleClass} key={i} role=\"none\">\n                    {props.root === true && <React.Fragment>\n                        <div className=\"layout-menuitem-root-text\" aria-label={item.label}>{item.label}</div>\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\n                    </React.Fragment>}\n                </li>\n            );\n        }\n        else {\n            return (\n                <li className={styleClass} key={i} role=\"none\">\n                    {renderLink(item, i)}\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\n                    </CSSTransition>\n                </li>\n            );\n        }\n    });\n\n    return items ? <ul className={props.className} role=\"menu\">{items}</ul> : null;\n}\n\nexport const AppMenu = (props) => {\n\n    return (\n        <div className=\"layout-menu-container\">\n            <AppSubmenu items={props.model} className=\"layout-menu\"  onMenuItemClick={props.onMenuItemClick} root={true} role=\"menu\" />\n           {/*  <a href=\"https://www.primefaces.org/primeblocks-react\" className=\"block mt-3\">\n                <img alt=\"primeblocks\" className=\"w-full\"\n                     src={props.layoutColorMode === 'light' ? 'assets/layout/images/banner-primeblocks.png' : 'assets/layout/images/banner-primeblocks-dark.png'}/>\n            </a> */}\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { RadioButton } from 'primereact/radiobutton';\nimport { InputSwitch } from 'primereact/inputswitch';\nimport classNames from 'classnames';\nimport {Button} from \"primereact/button\";\n\nexport const AppConfig = (props) => {\n\n    const [active, setActive] = useState(false);\n    const [scale, setScale] = useState(14);\n    const [scales] = useState([12,13,14,15,16]);\n    const [theme, setTheme] = useState('lara-light-indigo');\n    const config = useRef(null);\n    let outsideClickListener = useRef(null);\n\n    const unbindOutsideClickListener = useCallback(() => {\n        if (outsideClickListener.current) {\n            document.removeEventListener('click', outsideClickListener.current);\n            outsideClickListener.current = null;\n        }\n    }, []);\n\n    const hideConfigurator = useCallback((event) => {\n        setActive(false);\n        unbindOutsideClickListener();\n        event.preventDefault();\n    }, [unbindOutsideClickListener]);\n\n    const bindOutsideClickListener = useCallback(() => {\n        if (!outsideClickListener.current) {\n            outsideClickListener.current = (event) => {\n                if (active && isOutsideClicked(event)) {\n                    hideConfigurator(event);\n                }\n            };\n            document.addEventListener('click', outsideClickListener.current);\n        }\n    }, [active, hideConfigurator]);\n\n    useEffect(() => {\n        if (active) {\n            bindOutsideClickListener()\n        }\n        else {\n            unbindOutsideClickListener()\n        }\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\n\n    const isOutsideClicked = (event) => {\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\n    }\n\n    const decrementScale = () => {\n        setScale((prevState) => --prevState);\n    }\n\n    const incrementScale = () => {\n        setScale((prevState) => ++prevState);\n    }\n\n    useEffect(() => {\n        document.documentElement.style.fontSize = scale + 'px';\n    }, [scale])\n\n    const toggleConfigurator = (event) => {\n        setActive(prevState => !prevState);\n    }\n\n    const configClassName = classNames('layout-config', {\n        'layout-config-active': active\n    })\n\n    const replaceLink = useCallback((linkElement, href, callback) => {\n        if (isIE()) {\n            linkElement.setAttribute('href', href);\n\n            if (callback) {\n                callback();\n            }\n        }\n        else {\n            const id = linkElement.getAttribute('id');\n            const cloneLinkElement = linkElement.cloneNode(true);\n\n            cloneLinkElement.setAttribute('href', href);\n            cloneLinkElement.setAttribute('id', id + '-clone');\n\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n\n            cloneLinkElement.addEventListener('load', () => {\n                linkElement.remove();\n                cloneLinkElement.setAttribute('id', id);\n\n                if (callback) {\n                    callback();\n                }\n            });\n        }\n    },[])\n\n    useEffect(() => {\n        let themeElement = document.getElementById('theme-link');\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\n        replaceLink(themeElement, themeHref);\n\n    },[theme,replaceLink])\n\n    const isIE = () => {\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\n    }\n\n    const changeTheme = (e, theme, scheme) => {\n        props.onColorModeChange(scheme);\n        setTheme(theme);\n    }\n\n    return (\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\n            <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\n                <i className=\"pi pi-cog\"></i>\n            </button>\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\n\n            <div className=\"layout-config-content\">\n                <h5 className=\"mt-0\">Component Scale</h5>\n                <div className=\"config-scale\">\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\n                    {\n                        scales.map((item) => {\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\n                        })\n                    }\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\n                </div>\n\n                <h5>Input Style</h5>\n                <div className=\"p-formgroup-inline\">\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"input_outlined\" name=\"inputstyle\" value=\"outlined\" onChange={(e) => props.onInputStyleChange(e.value)} checked={props.inputStyle === 'outlined'} />\n                        <label htmlFor=\"input_outlined\">Outlined</label>\n                    </div>\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"input_filled\" name=\"inputstyle\" value=\"filled\" onChange={(e) => props.onInputStyleChange(e.value)} checked={props.inputStyle === 'filled'} />\n                        <label htmlFor=\"input_filled\">Filled</label>\n                    </div>\n                </div>\n\n                <h5>Ripple Effect</h5>\n                <InputSwitch checked={props.rippleEffect} onChange={props.onRippleEffect} />\n\n                <h5>Menu Type</h5>\n                <div className=\"p-formgroup-inline\">\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\n                        <label htmlFor=\"static\">Static</label>\n                    </div>\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\n                        <label htmlFor=\"overlay\">Overlay</label>\n                    </div>\n                </div>\n\n                <h5>Themes</h5>\n                <h6 className=\"mt-0\">Bootstrap</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-light-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-light-blue.svg\" alt=\"Bootstrap Light Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-light-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-light-purple.svg\" alt=\"Bootstrap Light Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-dark-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-dark-blue.svg\" alt=\"Bootstrap Dark Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-dark-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-dark-purple.svg\" alt=\"Bootstrap Dark Purple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Material Design</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-indigo.svg\" alt=\"Material Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-light-deeppurple', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" alt=\"Material Light DeepPurple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" alt=\"Material Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-dark-deeppurple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" alt=\"Material Dark DeepPurple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Material Design Compact</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-indigo.svg\" alt=\"Material Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-light-deeppurple', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" alt=\"Material Light DeepPurple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" alt=\"Material Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-dark-deeppurple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" alt=\"Material Dark DeepPurple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Tailwind</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'tailwind-light', 'light')}>\n                            <img src=\"assets/layout/images/themes/tailwind-light.png\" alt=\"Tailwind Light\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Fluent UI</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'fluent-light', 'light')}>\n                            <img src=\"assets/layout/images/themes/fluent-light.png\" alt=\"Fluent Light\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>PrimeOne Design - 2022</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-indigo.png\" alt=\"Lara Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-blue.png\" alt=\"Lara Light Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-purple.png\" alt=\"Lara Light Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-teal', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-teal.png\" alt=\"Lara Light Teal\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-indigo.png\" alt=\"Lara Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-blue.png\" alt=\"Lara Dark Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-purple.png\" alt=\"Lara Dark Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-teal', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-teal.png\" alt=\"Lara Dark Teal\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>PrimeOne Design - 2021</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-blue.png\" alt=\"Saga Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-green', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-green.png\" alt=\"Saga Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-orange', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-orange.png\" alt=\"Saga Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-purple.png\" alt=\"Saga Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-blue', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-blue.png\" alt=\"Vela Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-green', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-green.png\" alt=\"Vela Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-orange', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-orange.png\" alt=\"Vela Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-purple', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-purple.png\" alt=\"Vela Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-blue.png\" alt=\"Arya Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-green', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-green.png\" alt=\"Arya Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-orange', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-orange.png\" alt=\"Arya Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-purple.png\" alt=\"Arya Purple\"/>\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function conteoEmpleados() {\n    let respuesta = await axios.get(URL + `/global/conteoEmpleados` );\n\treturn respuesta.data;\n}\n\nexport async function productosMasVendidos() {\n    let respuesta = await axios.get(URL + `/global/productosMasVendidos` );\n\treturn respuesta.data;\n}\n\nexport async function productosMasAlquilados() {\n    let respuesta = await axios.get(URL + `/global/productosMasAlquilados` );\n\treturn respuesta.data;\n}","import React, { useState, useEffect } from 'react';\nimport * as ServiceGlobal from \"./ServiceGlobal\";\n\nconst Dashboard = (props) => {\n    const [conteoEmpleados, setConteoEmpleados] = useState([]);\n\n\n    useEffect(() => {\n        getConteoEmpleados();\n    }, []);\n\n\n    const getConteoEmpleados = async () => {\n        const resp = await ServiceGlobal.conteoEmpleados();\n        if (resp.valid) setConteoEmpleados(resp.data);\n    }\n\n\n\n    return (\n        <div className=\"grid\">\n             <div className=\"col-12\">\n                 <div className=\"px-4 py-5 shadow-2 flex flex-column md:flex-row md:align-items-center justify-content-between mb-3\"\n                     style={{borderRadius: '1rem', background: 'linear-gradient(0deg, rgba(0, 123, 255, 0.5), rgba(0, 123, 255, 0.5)), linear-gradient(92.54deg, #1C80CF 47.88%, #FFFFFF 100.01%)'}}>\n                    <div>\n                        <div className=\"text-blue-100 font-medium text-xl mt-2 mb-3\">Bienvenido!!!</div>\n                        <div className=\"text-white font-medium text-5xl\">TransPort S.A</div>\n                    </div>\n                    \n                </div>\n             </div>\n\n             {\n                conteoEmpleados.map((item, index) => {\n                    return (\n                        <div className=\"col-12 lg:col-6 xl:col-4\" key={index}>\n                            <div className=\"card mb-0\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Empleados</span>\n                                        <div className=\"text-900 font-medium text-xl\">{item.numeroEmpleados}</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style={{width: '2.5rem', height: '2.5rem'}}>\n                                        <i className=\"pi pi-users text-orange-500 text-xl\"/>\n                                    </div>\n                                </div>\n                                <span className=\"text-500\">{item.area} </span>\n                            </div>\n                        </div>\n\n                    )\n                })\n             }\n\n           \n\n          \n\n\n        </div>\n    );\n}\n\n\n\nexport default Dashboard;\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/categoria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/categoria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/categoria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/categoria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst Categoria = () => {\n\n    let formCategoria = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [categorias, setCategorias] = useState(null);\n    const [categoriaDialog, setCategoriaDialog] = useState(false);\n    const [deleteCategoriaDialog, setDeleteCategoriaDialog] = useState(false);\n    const [categoria, setCategoria] = useState(formCategoria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setCategorias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCategoria(formCategoria);\n        setSubmitted(false);\n        setCategoriaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setCategoriaDialog(false);\n    }\n\n    const hideDeleteCategoriaDialog = () => {\n        setDeleteCategoriaDialog(false);\n    }\n\n    const submit = () => {\n        if (categoria.nombre) {\n             if (categoria.idCategoria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(categoria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(categoria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editcategoria = (categoria) => {\n        setCategoria({ ...categoria });\n        setCategoriaDialog(true);\n    }\n\n    const confirmDeletecategoria = (categoria) => {\n        setCategoria(categoria);\n        setDeleteCategoriaDialog(true);\n    }\n\n    const deletecategoria = async () => {\n        let resp = await Service.deleteById(categoria);\n        if ( resp.valid ) {\n            list();\n            setDeleteCategoriaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCategoria({\n            ...categoria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCategoria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editcategoria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletecategoria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Categorias de Producto</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const categoriaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={categoria.idCategoria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteCategoriaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteCategoriaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletecategoria} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={categorias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} categorias\"\n                        globalFilter={globalFilter} emptyMessage=\"No categorias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCategoria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={categoriaDialog} style={{ width: '450px' }} header={categoria.idCategoria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={categoriaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={categoria.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !categoria.nombre })} \n                            />\n                            { submitted &&  !categoria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={categoria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteCategoriaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteCategoriaDialogFooter} onHide={hideDeleteCategoriaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {categoria && <span>Desea eliminar este item: <b>{categoria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Categoria","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/producto/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/producto/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/producto/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/producto/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceCategoria from \"../categoria/Service\";\nimport * as ServiceProveedor from \"../../user/proveedores/Service\"\nimport { Checkbox } from 'primereact/checkbox';\n\nconst Producto = () => {\n\n    let formProducto = {\n        idCategoria: \"\",\n        idProveedor: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        precio: \"\",\n        stock: \"\",\n        fechaIngreso:\"\",\n        venta:false,\n    };\n\n    const [productos, setProductos] = useState(null);\n    const [categorias, setCategorias] = useState([]);\n    const [proveedores, setProveedores] = useState([]);\n    const [productoDialog, setProductoDialog] = useState(false);\n    const [deleteProductoDialog, setDeleteProductoDialog] = useState(false);\n    const [producto, setProducto] = useState(formProducto);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n  \n    useEffect(() => {\n        list();\n        listCategorias();\n        listProveedores();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setProductos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCategorias = async()  => {\n        let resp = await ServiceCategoria.list();\n        if (resp.valid) {\n            setCategorias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listProveedores = async()  => {\n        let resp = await ServiceProveedor.list();\n        if (resp.valid) {\n            setProveedores(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setProducto(formProducto);\n        setSubmitted(false);\n        setProductoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProductoDialog(false);\n    }\n\n    const hideDeleteProductoDialog = () => {\n        setDeleteProductoDialog(false);\n    }\n\n    const submit = () => {\n        if (producto.nombre && producto.idCategoria && producto.nombre && producto.precio && producto.stock) {\n             if (producto.idProducto) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(producto);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(producto);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editProducto = (producto) => {\n        setProducto({ ...producto });\n        setProductoDialog(true);\n    }\n\n    const confirmDeleteproducto = (producto) => {\n        setProducto(producto);\n        setDeleteProductoDialog(true);\n    }\n\n    const deleteproducto = async () => {\n        let resp = await Service.deleteById(producto);\n        if ( resp.valid ) {\n            list();\n            setDeleteProductoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n\n        if ( name ==='venta') {\n            setProducto({\n                ...producto,\n                [name]: !value,\n            });\n        } else {\n            setProducto({\n                ...producto,\n                [name]: value,\n            });\n        }\n       \n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idProducto}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const categoriaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Categoria</span>\n                {rowData.categoria}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {formatCurrency(rowData.precio)}\n            </>\n        );\n    }\n\n    const stockBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Stock</span>\n                {rowData.stock}\n            </>\n        );\n    }\n\n    const ventaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Proposito</span>\n                {rowData.venta === 1 ? \"VENTA\": \"ALQUILER\"}\n            </>\n        );\n    }\n\n\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editProducto(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteproducto(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\"> Productos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const productoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={producto.idProducto ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteProductoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteproducto} />\n        </>\n    );\n\n    \n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={productos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} productos\"\n                        globalFilter={globalFilter} emptyMessage=\"No productos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idProducto\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"categoria\" header=\"Categoria\" sortable body={categoriaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"price\" header=\"Precio\" body={precioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"stock\" header=\"Stock\" body={stockBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"proposito\" header=\"Proposito\" body={ventaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={productoDialog} style={{ width: '600px' }} header={producto.idProducto ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={productoDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={producto.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !producto.nombre })} \n                            />\n                            { submitted &&  !producto.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={producto.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Categoria</label>\n                            <Select \n                                value={producto.idCategoria} \n                                className=\"w-full\"\n                                id=\"idCategoria\" \n                                name=\"idCategoria\" \n                                onChange={onInputChange}>\n                                {categorias.map((item, index) => (\n                                    <MenuItem value={item.idCategoria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !producto.idCategoria && <small className=\"p-invalid\">Categoria es requerida.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Proveedor</label>\n                            <Select \n                                value={producto.idProveedor} \n                                className=\"w-full\"\n                                id=\"idProveedor\" \n                                name=\"idProveedor\" \n                                onChange={onInputChange}\n                            >\n                                {proveedores.map((item, index) => (\n                                    <MenuItem value={item.idProveedor} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Precio</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"precio\"\n                                    name=\"precio\"\n                                    value={ producto.precio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className={classNames({ 'p-invalid': submitted && !producto.precio })} \n                                />\n                                { submitted &&  !producto.precio && <small className=\"p-invalid\">Precio es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Stock</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"stock\"\n                                    name=\"stock\"\n                                    value={ producto.stock }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className={classNames({ 'p-invalid': submitted && !producto.stock })} \n                                />\n                                { submitted &&  !producto.stock && <small className=\"p-invalid\">Stock es requerido.</small>}\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">fecha</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaIngreso\"\n                                    name=\"fechaIngreso\"\n                                    value={ producto.fechaIngreso }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Venta</label>\n                                <Checkbox \n                                    inputId=\"venta\" \n                                    name=\"venta\" \n                                    value={producto.venta === 1 ? true : producto.venta === 0 ? false : producto.venta}\n                                    className=\"w-full\"\n                                    checked={producto.venta === 1 ? true : producto.venta === 0 ? false : producto.venta} \n                                    onChange={onInputChange} \n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteProductoDialogFooter} onHide={hideDeleteProductoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Producto;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cliente/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByNegocio(obj) {\n    let respuesta = await axios.post(URL + `/cliente/listByNegocio`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cliente/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cliente/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cliente/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport {  TextField } from '@mui/material';\n\nconst Cliente = (props) => {\n  \n    let formCliente = {\n        idNegocio: props.idNegocio,\n        nombre: \"\",\n        apellido: \"\",\n        dpi: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: null\n    };\n\n    const [clientes, setClientes] = useState(null);\n    const [clienteDialog, setClienteDialog] = useState(false);\n    const [deleteClienteDialog, setDeleteClienteDialog] = useState(false);\n    const [cliente, setCliente] = useState(formCliente);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n      list();\n      // eslint-disable-next-line\n    }, []);\n    \n\n    const list = async()  => {\n        let aux = {idNegocio: props.idNegocio};\n        let resp = await Service.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCliente(formCliente);\n        setSubmitted(false);\n        setClienteDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setClienteDialog(false);\n    }\n\n    const hideDeleteClienteDialog = () => {\n        setDeleteClienteDialog(false);\n    }\n\n    const submit = () => {\n        if (cliente.nombre && cliente.apellido && cliente.dpi && cliente.nit && cliente.direccion && cliente.email) {\n             if (cliente.idCliente) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editCliente = (cliente) => {\n        setCliente({ ...cliente });\n        setClienteDialog(true);\n    }\n\n    const confirmDeleteCliente = (cliente) => {\n        setCliente(cliente);\n        setDeleteClienteDialog(true);\n    }\n\n    const deleteCliente = async () => {\n        let resp = await Service.deleteById(cliente);\n        if ( resp.valid ) {\n            list();\n            setDeleteClienteDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCliente({\n            ...cliente,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCliente}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre} {rowData.apellido}\n            </>\n        );\n    }\n\n\n    const nitBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nit</span>\n                {rowData.dpi}\n            </>\n        );\n    }\n\n    const telefonoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Telefono</span>\n                {rowData.telefono}\n            </>\n        );\n    }\n\n    const emailBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Email</span>\n                {rowData.email}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editCliente(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteCliente(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Clientes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const clienteDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={cliente.idCliente ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteClienteDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteClienteDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteCliente} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={clientes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} clientes\"\n                        globalFilter={globalFilter} emptyMessage=\"No clientes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCliente\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nit\" header=\"Nit\" body={nitBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"telefono\" header=\"Telefono\" body={telefonoBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"email\" header=\"Email\" body={emailBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={clienteDialog} style={{ width: '450px' }} header={cliente.idCliente ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={clienteDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={cliente.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !cliente.nombre })} \n                            />\n                            { submitted &&  !cliente.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"apellido\">Apellido</label>\n                            <InputText \n                                id=\"apellido\" \n                                name=\"apellido\"\n                                value={cliente.apellido} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-invalid': submitted && !cliente.apellido })} \n                            />\n                            { submitted &&  !cliente.apellido && <small className=\"p-invalid\">Apellido es requerido.</small>}\n                      \n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">DPI</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"dpi\"\n                                    name=\"dpi\"\n                                    value={ cliente.dpi }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className=\"w-full\"\n                                />\n                                { submitted &&  !cliente.dpi && <small className=\"p-invalid\">DPI es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">NIT</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"nit\"\n                                    name=\"nit\"\n                                    value={ cliente.nit }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className=\"w-full\"\n                                />\n                                { submitted &&  !cliente.nit && <small className=\"p-invalid\">Nit es requerido.</small>}\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                                <label htmlFor=\"nombre\">Dirección</label>\n                                <InputText \n                                    id=\"direccion\" \n                                    name=\"direccion\"\n                                    value={cliente.direccion} \n                                    onChange={onInputChange} \n                                    required \n                                    className={classNames({ 'p-invalid': submitted && !cliente.direccion })} \n                                />\n                                { submitted &&  !cliente.direccion && <small className=\"p-invalid\">Direccion es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Email</label>\n                                <TextField\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    className=\"w-full\"\n                                    value={ cliente.email }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                { submitted &&  !cliente.email && <small className=\"p-invalid\">Email es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Telefono</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"telefono\"\n                                    name=\"telefono\"\n                                    className=\"w-full\"\n                                    value={ cliente.telefono }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                             </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteClienteDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteClienteDialogFooter} onHide={hideDeleteClienteDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {cliente && <span>Desea eliminar este item: <b>{cliente.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cliente;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoAlquiler = () => {\n\n    let formTipoAlquiler = {\n        descripcion: \"\",\n        tasaAlquiler:\"\"\n    };\n\n    const [tipoAlquileres, setTipoAlquileres] = useState(null);\n    const [tipoAlquilerDialog, setTipoAlquilerDialog] = useState(false);\n    const [deleteTipoAlquilerDialog, setDeleteTipoAlquilerDialog] = useState(false);\n    const [tipoAlquiler, setTipoAlquiler] = useState(formTipoAlquiler);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoAlquileres(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoAlquiler(formTipoAlquiler);\n        setSubmitted(false);\n        setTipoAlquilerDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoAlquilerDialog(false);\n    }\n\n    const hideDeleteTipoAlquilerDialog = () => {\n        setDeleteTipoAlquilerDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoAlquiler.descripcion && tipoAlquiler.tasaAlquiler) {\n             if (tipoAlquiler.idTipoAlquiler) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoAlquiler);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoAlquiler);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editTipoAlquiler = (tipoAlquiler) => {\n        setTipoAlquiler({ ...tipoAlquiler });\n        setTipoAlquilerDialog(true);\n    }\n\n    const confirmDeleteTipoAlquiler = (tipoAlquiler) => {\n        setTipoAlquiler(tipoAlquiler);\n        setDeleteTipoAlquilerDialog(true);\n    }\n\n    const deleteTipoAlquiler = async () => {\n        let resp = await Service.deleteById(tipoAlquiler);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoAlquilerDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoAlquiler({\n            ...tipoAlquiler,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoAlquiler}\n            </>\n        );\n    }\n\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const tasaAlquilerBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tasa Alquiler</span>\n                {rowData.tasaAlquiler}%\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editTipoAlquiler(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteTipoAlquiler(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo Alquiler</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoAlquilerDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoAlquiler.idTipoAlquiler ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoAlquilerDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoAlquilerDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteTipoAlquiler} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoAlquileres}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoAlquileres\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoAlquileres found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoAlquiler\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column field=\"tasaAlquiler\" header=\"Tasa Alquiler\" sortable body={tasaAlquilerBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoAlquilerDialog} style={{ width: '450px' }} header={tipoAlquiler.idTipoAlquiler ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoAlquilerDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Descripción</label>\n                            <InputText \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoAlquiler.descripcion} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !tipoAlquiler.descripcion })} \n                            />\n                            { submitted &&  !tipoAlquiler.descripcion && <small className=\"p-invalid\">Descripcion es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Tasa Alquiler</label>\n                            <InputText\n                                type=\"number\"\n                                id=\"tasaAlquiler\" \n                                name=\"tasaAlquiler\"\n                                value={tipoAlquiler.tasaAlquiler} \n                                onChange={onInputChange} \n                                required \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoAlquilerDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoAlquilerDialogFooter} onHide={hideDeleteTipoAlquilerDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoAlquiler && <span>Desea eliminar este item: <b>{tipoAlquiler.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoAlquiler","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/factura/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/factura/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/factura/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/factura/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTipoPago(obj) {\n    let respuesta = await axios.post(URL + `/tipoPago/list`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport { Toast } from 'primereact/toast';\nimport * as Service from \"./Service\";\n\n\n\nconst Factura = (props) => {\n\n    const [submitted, setSubmitted] = useState(false);\n    const [submittedDetalle, setSubmittedDetalle] = useState(false);\n    const [producto, setProducto] = useState(\"\");\n    const toast = useRef(null);\n\n    useEffect(() => {\n        \n    }, []);\n    \n    useEffect(() => {\n        props.setFormDetalle({\n            ...props.formDetalle,\n            precio: producto.precio,\n            producto: producto.nombre\n        });\n        // eslint-disable-next-line\n    }, [producto]);\n\n    const addFactura = () => {\n        \n        if ( props.formFactura.idCliente && props.formFactura.idTipoPago && props.formFactura.idEmpleado && props.formFactura.fecha && props.formFactura.direccion) {\n            if (props.formFactura.detalle.length > 0) {\n                if (props.formFactura.idFactura) {\n                    \n                } else {\n                    saveFactura();\n                }\n            } else {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"Debe de incluir al menos un producto para la venta.\", life: 3000 });\n            }\n        }\n    }\n\n    const saveFactura = async () => {\n        let resp = await Service.save(props.formFactura);\n        if ( resp.valid ){\n            props.listFacturas();\n            back();\n            props.toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            props.toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n       \n        props.setFormFactura({\n            ...props.formFactura,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const onInputChangeDetalle = (e) => {\n        const { value, name } = e.target;\n        if ( name === 'cantidad') {\n            props.setFormDetalle({\n                ...props.formDetalle,\n                cantidad: value,\n                total: value * props.formDetalle.precio\n            });\n\n        } else {\n            props.setFormDetalle({\n                ...props.formDetalle,\n                [name]: value,\n            });\n        }\n        setSubmittedDetalle(true);\n    }\n\n    const idBody = (rowData, rowIndex) => {\n        return (<>{rowIndex.rowIndex + 1}</>)\n    }\n\n    const actionBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteDetalle(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const addDetalle = () => {\n        if ( props.formDetalle.idProducto && props.formDetalle.cantidad ) {\n\n            let aux = props.formFactura.detalle;\n            const mismoProducto = aux.filter( item => item.idProducto === props.formDetalle.idProducto);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo producto más de una vez.\", life: 3000 });\n            } else {\n                if ( props.formFactura.idFactura){\n                    \n                } else {\n                    aux.push(props.formDetalle);\n                    props.setFormFactura({\n                        ...props.formFactura,\n                        detalle: aux\n                    });\n    \n                    props.setFormDetalle(props.detalle);\n                    setSubmittedDetalle(false);\n                }\n                conteoTotal();\n            }\n        }\n    }\n\n    const deleteDetalle = (detalle, index) => {\n        if (props.formFactura.idFactura) {\n            \n        } else {\n            let aux = props.formFactura.detalle;\n            aux.splice(index, 1);\n            props.setFormFactura({\n                ...props.formFactura,\n                detalle: aux\n            });\n        }\n        conteoTotal();\n    }\n\n    const conteoTotal = () => {\n        let aux = props.formFactura.detalle;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.total;\n        });     \n        props.setFormFactura({\n            ...props.formFactura,\n            total: acumulado\n        }); \n    }\n\n    const clearDetalle = () => {\n        props.setFormDetalle(props.detalle);\n        setSubmittedDetalle(false);\n    }\n\n    const clearEncabezado = () => {\n        props.setFormFactura(props.factura);\n        setSubmitted(false);\n    }\n\n    const back = () => {\n        clearDetalle();\n        clearEncabezado();\n        props.setFlagFactura(false);\n    }\n\n\n    return (\n            <>\n            <Toast ref={toast} />\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-11\">\n                            <h3>Factura</h3>\n                        </div>\n                        <div className=\"col-12 md:col-1\">\n                            <Button label=\"Volver\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={back} />\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Cliente*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <Select \n                                    value={props.formFactura.idCliente} \n                                    className=\"w-full\"\n                                    id=\"idCliente\" \n                                    name=\"idCliente\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.clientes.map((item, index) => (\n                                        <MenuItem value={item.idCliente} key={index}>\n                                            {item.nombre +\" \"+ item.apellido }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idCliente && <small className=\"p-error\">Cliente  es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Tipo de pago*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                                <Select \n                                    value={props.formFactura.idTipoPago} \n                                    className=\"w-full\"\n                                    id=\"idTipoPago\" \n                                    name=\"idTipoPago\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.tipoPago.map((item, index) => (\n                                        <MenuItem value={item.idTipoPago} key={index}>\n                                            {item.nombre  }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idTipoPago && <small className=\"p-error\">Tipo de pago  es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <Select \n                                    value={props.formFactura.idEmpleado} \n                                    className=\"w-full\"\n                                    id=\"idEmpleado\" \n                                    name=\"idEmpleado\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.empleados.map((item, index) => (\n                                        <MenuItem value={item.idEmpleado} key={index}>\n                                            {item.nombre +\" \"+ item.apellido }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idEmpleado && <small className=\"p-error\">Empleado es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Fecha*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fecha\"\n                                    name=\"fecha\"\n                                    value={ props.formFactura.fecha }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.formFactura.fecha && <small className=\"p-error\">Fecha es requerida.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-8\">\n                            <label htmlFor=\"descripcion\">Dirección*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"direccion\"\n                                    name=\"direccion\"\n                                    value={ props.formFactura.direccion }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.formFactura.direccion && <small className=\"p-error\">Dirección es requerida.</small>}\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-8\">\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.formFactura.detalle} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column header=\"No.\" style={{ flexGrow: 1, flexBasis: '10px' }} body={idBody} frozen></Column>\n                        <Column field=\"producto\" header=\"Producto\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"cantidad\" header=\"Cantidad\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"total\" header=\"Total\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column body={actionBodyTemplate} header=\"Acción\" style={{ flexGrow: 1, flexBasis: '2px' }}></Column>\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <h5>Ingrese Producto</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Producto*</label>\n                            <Select \n                                value={props.formDetalle.idProducto} \n                                className=\"w-full\"\n                                id=\"idProducto\" \n                                name=\"idProducto\" \n                                onChange={onInputChangeDetalle}\n                            >\n                                {props.productos.map((item, index) => (\n                                    <MenuItem value={item.idProducto} key={index} onClick={()=>{setProducto(item)}}>\n                                        {item.nombre }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedDetalle && !props.formDetalle.idProducto && <small className=\"p-error\">Producto  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Precio</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precio\"\n                                name=\"precio\"\n                                value={ props.formDetalle.precio }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Cantidad</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"cantidad\"\n                                name=\"cantidad\"\n                                value={ props.formDetalle.cantidad }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                            {  submittedDetalle && !props.formDetalle.cantidad && <small className=\"p-error\">Cantidad  es requerido.</small>}\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Total</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"total\"\n                                name=\"total\"\n                                value={ props.formDetalle.total }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addDetalle}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearDetalle} />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"total\"\n                                    name=\"total\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.formFactura.total }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <Button  label=\"REALIZAR VENTA\" className=\"p-button-success mr-16 mb-16\" onClick={addFactura}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            \n\n            \n            </>\n\n\n    )\n}\n\nexport default Factura;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/empleado/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByRolByArea(obj) {\n    let respuesta = await axios.post(URL + `/empleado/listByRolByArea`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/empleado/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/empleado/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/empleado/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByArea(obj) {\n    let respuesta = await axios.post(URL + `/empleado/listByArea`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listRol(obj) {\n    let respuesta = await axios.post(URL + `/rol/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listSede(obj) {\n    let respuesta = await axios.post(URL + `/sede/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listPlantas(obj) {\n    let respuesta = await axios.post(URL + `/empleado/plantas`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportFactura = (props) => {\n\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>FACTURA</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Cliente: {props.factura.cliente}</Text>\n                    <Text style={styles.body}>Dirección: {props.factura.direccion}</Text>\n                    <Text style={styles.body}>Tipo de Pago: {props.factura.tipoPago}</Text>\n                    <Text style={styles.body}>Fecha: {moment(props.fecha).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Empleado: {props.factura.empleado}</Text>\n                </View>\n\n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.factura.detalle}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Producto\n                            </TableCell>\n                            <TableCell>\n                                Precio\n                            </TableCell>\n                            <TableCell>\n                                Cantidad\n                            </TableCell>\n                            <TableCell>\n                                Total\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idDetalleVenta}/>\n                        <DataTableCell getContent={(r) => r.producto}/>\n                        <DataTableCell getContent={(r) => r.precio}/>\n                        <DataTableCell getContent={(r) => r.cantidad}/>\n                        <DataTableCell getContent={(r) => r.total}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total: {props.factura.total}\n                    </Text>\n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportFactura;","import React, {useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Toast } from 'primereact/toast';\nimport { InputText } from 'primereact/inputtext';\nimport Factura from './Factura';\nimport * as Service from \"./Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\nimport * as ServiceProducto from \"../producto/Service\";\nimport ReportFactura from './ReportFactura';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { Dialog } from 'primereact/dialog';\n\n\n\nconst Venta = (props) => {\n\n    const factura = {\n        idCliente: \"\",\n        idTipoPago: \"\",\n        idEmpleado: \"\",\n        fecha: \"\",\n        direccion: \"\",\n        total: \"\",\n        detalle: []\n    }\n\n    const detalle = {\n        idProducto: \"\",\n        producto: \"\",\n        precio:\"\",\n        cantidad: \"\",\n        total: \"\"\n    }\n    \n    const [flagFactura, setFlagFactura] = useState(false);\n    const [facturas, setFacturas] = useState([]);\n    const [clientes, setClientes] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n    const [tipoPago, setTipoPago] = useState([]);\n    const [productos, setProductos] = useState([]);\n    const [formFactura, setFormFactura] = useState(factura);\n    const [formDetalle, setFormDetalle] = useState(detalle);\n    \n    const [expandedRows, setExpandedRows] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n\n    const [facturaDialog, setFacturaDialog] = useState(false);\n    const [reporteFactura, setReporteFactura] = useState(\"\");\n\n    const [deleteFacturaDialog, setDeleteFacturaDialog] = useState(false);\n    const [facturaDelete, setFacturaDelete] = useState(\"\");\n\n    useEffect(() => {\n        listFacturas();\n        listClientes();\n        listEmpleados();\n        listTipoPago();\n        listProductos();\n    }, []); \n    \n\n    const listFacturas = async()  => {\n        let aux = {alquiler: 0}\n        let resp = await Service.list(aux);\n        if (resp.valid) {\n            setFacturas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listClientes = async()  => {\n        let aux = {idNegocio: 3};\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let aux = {idRol: 7, idAreaNegocio: 1};\n        let resp = await ServiceEmpleado.listByRolByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoPago = async()  => {\n        let resp = await Service.listTipoPago();\n        if (resp.valid) {\n            setTipoPago(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listProductos = async()  => {\n        let aux = {venta: 1}\n        let resp = await ServiceProducto.list(aux);\n        if (resp.valid) {\n            setProductos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n    \n\n\n    const rowExpansionTemplate = (data) => {\n\n        return (\n            <div className=\"orders-subtable\">\n                <h5>Detalle de Venta</h5>\n                <DataTable value={data.detalle} responsiveLayout=\"scroll\">\n                    <Column field=\"idDetalleVenta\" header=\"No.\" sortable></Column>\n                    <Column field=\"producto\" header=\"Producto\" sortable></Column>\n                    <Column field=\"precio\" header=\"Precio\" sortable></Column>\n                    <Column field=\"cantidad\" header=\"Cantidad\" sortable></Column>\n                    <Column field=\"total\" header=\"Total\" sortable></Column>\n                    {/* <Column headerStyle={{ width: '4rem' }} body={searchBodyTemplate}></Column> */}\n                </DataTable>\n            </div>\n        );\n    }\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Ventas</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR VENTA\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\"  onClick={()=> { setFlagFactura(true)}}  />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagVenta(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const actionBody = (rowData) => {\n        return(\n            <div className=\"actions\">\n                <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFacturaDialog(true);\n                        setReporteFactura(rowData);\n                    }}     \n                />\n                <Button \n                    icon=\"pi pi-trash\" \n                    className=\"p-button-rounded p-button-danger mt-2\" \n                    onClick={() => confirmDeleteFactura(rowData)} \n                />\n            </div>\n        )\n    }\n\n    const confirmDeleteFactura = (factura) => {\n        setFacturaDelete(factura);\n        setDeleteFacturaDialog(true);\n    }\n\n    const deletecategoria = async () => {\n        let resp = await Service.deleteById(facturaDelete);\n        if ( resp.valid ) {\n            listFacturas();\n            setDeleteFacturaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const hideDeleteFacturaDialog = () => {\n        setDeleteFacturaDialog(false);\n    }\n    \n    const deleteFacturaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteFacturaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletecategoria} />\n        </>\n    );\n\n   \n    const hideDialog = () => {\n        setFacturaDialog(false);\n    }\n    return (\n        <>\n            <Toast ref={toast} />\n            {!flagFactura ? (\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        \n                        <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                        <DataTable value={facturas} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)} responsiveLayout=\"scroll\"\n                            rowExpansionTemplate={rowExpansionTemplate} dataKey=\"idFactura\" globalFilter={globalFilter} header={header} className=\"datatable-responsive\">\n                            <Column expander style={{ width: '3em' }} />\n                            <Column field=\"idFactura\" header=\"No\" sortable />\n                            <Column field=\"fecha\" header=\"Fecha\" sortable />\n                            <Column field=\"cliente\" header=\"Cliente\" sortable />\n                            <Column field=\"total\" header=\"Total\" sortable />\n                            <Column field=\"accion\"  body={actionBody} />\n                        </DataTable>\n                    </div>\n                </div>\n            ):null}\n\n            {flagFactura ? (\n                <Factura \n                    setFlagFactura={setFlagFactura}\n                    clientes={clientes}\n                    empleados={empleados}\n                    tipoPago={tipoPago}\n                    productos={productos}\n                    factura={factura}\n                    detalle={detalle}\n                    formFactura={formFactura}\n                    setFormFactura={setFormFactura}\n                    formDetalle={formDetalle}\n                    setFormDetalle={setFormDetalle}\n                    toast={toast}\n                    listFacturas={listFacturas}\n                />\n            ):null}\n\n            <Dialog visible={deleteFacturaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteFacturaDialogFooter} onHide={hideDeleteFacturaDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea eliminar la factura No. <b>{facturaDelete.idFactura}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={facturaDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialog}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportFactura \n                        factura={reporteFactura}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n\n        </>\n    )\n}\n\nexport default Venta;\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/factura/listAlquiler`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/factura/saveAlquiler`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/factura/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/factura/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTipoPago(obj) {\n    let respuesta = await axios.post(URL + `/tipoPago/list`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportAlquiler = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>ALQUILER</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Producto: {props.factura.producto}</Text>\n                    <Text style={styles.body}>Cliente: {props.factura.nombreCliente}</Text>\n                    <Text style={styles.body}>Dirección: {props.factura.direccion}</Text>\n                    <Text style={styles.body}>Tipo de Pago: {props.factura.tipoPago}</Text>\n                    <Text style={styles.body}>Total a pagar: {props.factura.total}</Text>\n                    <Text style={styles.body}>Fecha: {moment(props.fechaProximaFacturacion).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Empleado: {props.factura.nombreEmpleado}</Text>\n                </View>\n\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportAlquiler;","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\nimport * as ServiceProducto from \"../producto/Service\";\nimport * as ServiceTipoAlquiler from \"../tipoAlquiler/Service\";\nimport moment from 'moment';\nimport ReportAlquiler from './ReportAlquiler';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nconst Alquiler = (props) => {\n  let formAlquiler = {\n    idCliente: \"\",\n    idTipoPago: \"\",\n    idEmpleado: \"\",\n    fecha: \"\",\n    direccion: \"\",\n    total: \"\",\n\n    idProducto:\"\",\n    idTipoAlquiler:\"\",\n    cantidad: 1,\n    totalDetalle:\"\",\n    fechaProxima: \"\",\n\n    precio: \"\"\n};\n\nconst [alquiler, setalquiler] = useState(formAlquiler);\nconst [alquileres, setAlquileres] = useState(null);\nconst [tipoAlquileres, setTipoAlquileres] = useState([]);\nconst [clientes, setClientes] = useState([]);\nconst [empleados, setEmpleados] = useState([]);\nconst [tipoPago, setTipoPago] = useState([]);\nconst [productos, setProductos] = useState([]);\nconst [alquilerDialog, setAlquilerDialog] = useState(false);\nconst [deleteAlquilerDialog, setDeleteAlquilerDialog] = useState(false);\nconst [submitted, setSubmitted] = useState(false);\nconst [globalFilter, setGlobalFilter] = useState(null);\nconst toast = useRef(null);\nconst dt = useRef(null);\n\nconst [producto, setProducto] = useState(\"\");\nconst [tipo, setTipo] = useState(\"\");\n\nconst [facturaDialog, setFacturaDialog] = useState(false);\nconst [reporteFactura, setReporteFactura] = useState(\"\");\n\nuseEffect(() => {\n    list();\n    listClientes();\n    listEmpleados();\n    listTipoPago();\n    listProductos();\n    listTipoAlquiler();\n}, []);\n\nuseEffect(() => {\n    setalquiler({\n        ...alquiler,\n        precio: producto.precio\n    });\n    // eslint-disable-next-line\n}, [producto]);\n\nuseEffect(() => {\n  \n    if (tipo.idTipoAlquiler) {\n\n        setalquiler({\n            ...alquiler,\n            total: (tipo.tasaAlquiler * producto.precio) / 100,\n            totalDetalle: (tipo.tasaAlquiler * producto.precio) / 100,\n            fechaProxima: \n                tipo.idTipoAlquiler === 1 ? moment( sumarDias(new Date(), 30)).format(\"YYYY-MM-DD\") :\n                tipo.idTipoAlquiler === 2 ? moment( sumarDias(new Date(), 7)).format(\"YYYY-MM-DD\") :\n                moment( sumarDias(new Date(), 1)).format(\"YYYY-MM-DD\")\n        });\n    }\n    // eslint-disable-next-line\n}, [tipo]);\n\n\n\nconst list = async()  => {\n    let aux = {alquiler: 1}\n    let resp = await Service.list(aux);\n    if (resp.valid) {\n        setAlquileres(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\nconst listClientes = async()  => {\n    let aux = {idNegocio: 3};\n    let resp = await ServiceCliente.listByNegocio(aux);\n    if (resp.valid) {\n        setClientes(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listEmpleados = async()  => {\n    let aux = {idRol: 7, idAreaNegocio: 1};\n    let resp = await ServiceEmpleado.listByRolByArea(aux);\n    if (resp.valid) {\n        setEmpleados(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoPago = async()  => {\n    let resp = await Service.listTipoPago();\n    if (resp.valid) {\n        setTipoPago(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listProductos = async()  => {\n    let aux = {venta: 0}\n    let resp = await ServiceProducto.list(aux);\n    if (resp.valid) {\n        setProductos(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoAlquiler = async()  => {\n    let resp = await ServiceTipoAlquiler.list();\n    if (resp.valid) {\n        setTipoAlquileres(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\n\n\nconst openNew = () => {\n    setalquiler(formAlquiler);\n    setSubmitted(false);\n    setAlquilerDialog(true);\n}\n\nconst hideDialog = () => {\n    setSubmitted(false);\n    setAlquilerDialog(false);\n}\n\nconst hideDeleteAlquilerDialog = () => {\n    setDeleteAlquilerDialog(false);\n}\n\nconst submit = () => {\n    if (alquiler.idCliente && alquiler.idTipoPago && alquiler.idEmpleado && alquiler.fecha && alquiler.direccion && alquiler.total && alquiler.idProducto && alquiler.idTipoAlquiler && alquiler.fechaProxima) {\n        save()\n    } \n}\n\nconst save = async () => {\n    let resp = await Service.save(alquiler);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\n\nconst confirmDeletealquiler = (alquiler) => {\n    setalquiler(alquiler);\n    setDeleteAlquilerDialog(true);\n}\n\nconst deletealquiler = async () => {\n    let resp = await Service.deleteById(alquiler);\n    if ( resp.valid ) {\n        list();\n        setDeleteAlquilerDialog(false);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n\n}\n\n\n\nconst onInputChange = (e) => {\n    const { value, name } = e.target;\n\n    if ( name ==='venta') {\n        setalquiler({\n            ...alquiler,\n            [name]: !value,\n        });\n    } else {\n        setalquiler({\n            ...alquiler,\n            [name]: value,\n        });\n    }\n   \n    setSubmitted(true);\n}\n\n\nconst rightToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"m2\">\n                <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagAlquiler(false)}} />\n            </div>\n        </React.Fragment>\n    )\n}\n\n\n\n\nconst actionBodyTemplate = (rowData) => {\n    return (\n        <div className=\"actions\">\n            <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletealquiler(rowData)} />\n            <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFacturaDialog(true);\n                        setReporteFactura(rowData);\n                    }}     \n                />\n        </div>\n    );\n}\n\nconst header = (\n    <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n        <h5 className=\"m-0\"> Alquileres</h5>\n        <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n            <i className=\"pi pi-search\" />\n            <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n        </span>\n    </div>\n);\n\nconst alquilerDialogFooter = (\n    <>\n        \n        <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n        <Button label={alquiler.idalquiler ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n    </>\n);\nconst deleteAlquilerDialogFooter = (\n    <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteAlquilerDialog} />\n        <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletealquiler} />\n    </>\n);\n\nfunction sumarDias(fecha, dias){\n    fecha.setDate(fecha.getDate() + dias);\n    return fecha;\n  }\n\n  const hideDialogReport = () => {\n    setFacturaDialog(false);\n}\n\nreturn (\n    \n    <div className=\"col-12\">\n        <div className=\"card\">\n            <Toast ref={toast} />\n            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n            <DataTable ref={dt} value={alquileres}\n                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} alquileres\"\n                globalFilter={globalFilter} emptyMessage=\"No alquileres found.\" header={header} responsiveLayout=\"scroll\">\n\n                <Column field=\"idFactura\" header=\"ID\" sortable ></Column>\n                <Column field=\"producto\" header=\"Producto\" sortable></Column>\n                <Column field=\"tipoPago\" header=\"Tipo de Pago\"sortable></Column>\n                <Column field=\"nombreCliente\" header=\"Cliente\"sortable></Column>\n                <Column field=\"fechaProximaFacturacion\" header=\"Proxima Facturacioón\"sortable></Column>\n                <Column body={actionBodyTemplate} ></Column>\n            </DataTable>\n\n            <Dialog visible={alquilerDialog} style={{ width: '1000px' }} header={alquiler.idalquiler ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={alquilerDialogFooter} onHide={hideDialog}>\n                \n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                    <label htmlFor=\"descripcion\">Cliente*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                            <Select \n                                value={alquiler.idCliente} \n                                className=\"w-full\"\n                                id=\"idCliente\" \n                                name=\"idCliente\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {clientes.map((item, index) => (\n                                    <MenuItem value={item.idCliente} key={index}>\n                                        {item.nombre +\" \"+ item.apellido }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idCliente && <small className=\"p-error\">Cliente  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Tipo de pago*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                            <Select \n                                value={alquiler.idTipoPago} \n                                className=\"w-full\"\n                                id=\"idTipoPago\" \n                                name=\"idTipoPago\" \n                                onChange={onInputChange}\n                            >\n                                {tipoPago.map((item, index) => (\n                                    <MenuItem value={item.idTipoPago} key={index}>\n                                        {item.nombre  }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idTipoPago && <small className=\"p-error\">Tipo de pago  es requerido.</small>}\n                        \n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Empleado*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                            <Select \n                                value={alquiler.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre +\" \"+ item.apellido }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idEmpleado && <small className=\"p-error\">Empleado es requerido.</small>}\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Fecha*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                            <TextField\n                                type=\"date\"\n                                id=\"fecha\"\n                                name=\"fecha\"\n                                value={ alquiler.fecha }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n                        { submitted && !alquiler.fecha && <small className=\"p-error\">Fecha es requerida.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Dirección*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                            <TextField\n                                type=\"text\"\n                                id=\"direccion\"\n                                name=\"direccion\"\n                                value={alquiler.direccion }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n                        { submitted && !alquiler.direccion && <small className=\"p-error\">Dirección es requerida.</small>}\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"name\">Producto*</label>\n                        <Select \n                            value={alquiler.idProducto} \n                            className=\"w-full\"\n                            id=\"idProducto\" \n                            name=\"idProducto\" \n                            onChange={onInputChange}\n                        >\n                            {productos.map((item, index) => (\n                                <MenuItem value={item.idProducto} key={index} onClick={()=>{setProducto(item)}}>\n                                    {item.nombre }\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        {  submitted && !alquiler.idProducto && <small className=\"p-error\">Producto  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Precio</label>\n                        <TextField\n                            type=\"number\"\n                            id=\"precio\"\n                            name=\"precio\"\n                            value={ alquiler.precio}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"name\">Tipo Alquiler*</label>\n                        <Select \n                            value={alquiler.idTipoAlquiler} \n                            className=\"w-full\"\n                            id=\"idTipoAlquiler\" \n                            name=\"idTipoAlquiler\" \n                            onChange={onInputChange}\n                        >\n                            {tipoAlquileres.map((item, index) => (\n                                <MenuItem value={item.idTipoAlquiler} key={index} onClick={()=>{setTipo(item)}}>\n                                    {item.descripcion }\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        {  submitted && !alquiler.idTipoAlquiler && <small className=\"p-error\">Tipo Alquiler  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Total a pagar</label>\n                        <TextField\n                            type=\"number\"\n                            id=\"total\"\n                            name=\"total\"\n                            value={ alquiler.total}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                      \n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Fecha Proxima Facturación</label>\n                        <TextField\n                            type=\"date\"\n                            id=\"fechaProxima\"\n                            name=\"fechaProxima\"\n                            value={ alquiler.fechaProxima}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                    </div>\n                </div>\n\n              \n               \n\n                \n               \n            </Dialog>\n\n            <Dialog visible={deleteAlquilerDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteAlquilerDialogFooter} onHide={hideDeleteAlquilerDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea cancelar el alquiler No. <b>{alquiler.idFactura}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={facturaDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReport}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportAlquiler\n                        factura={reporteFactura}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n\n        </div>\n    </div>\n  \n)\n}\n\nexport default Alquiler;","import React, {useState, useEffect} from 'react';\nimport Venta from './venta/Venta';\nimport Alquiler from './alquiler/Alquiler';\nimport { Chart } from 'primereact/chart';\nimport * as ServiceGlobal from '../components/ServiceGlobal';\n\n\n\nconst PrincipalVentas = () => {\n    const [flagVenta, setFlagVenta] = useState(false);\n    const [flagAlquiler, setFlagAlquiler] = useState(false);\n\n    const [titulos, setTitulos] = useState([]);\n    const [total, setTotal] = useState([]);\n\n    const [titulosAlquiler, setTitulosAlquiler] = useState([]);\n    const [totalAlquiler, setTotalAlquiler] = useState([]);\n\n    const pieData = {\n        labels: titulos,\n        datasets: [\n            {\n                data: total,\n                backgroundColor: [\n                    \"#FF6384\",\n                    \"#36A2EB\",\n                    \"#FFCE56\",\n                    \"#C124F3\", \n                    \"#F3242D\",\n                    \"#F324CD\",\n                    \"#2424F3\",\n                    \"#24A8F3\",\n                    \"#F324D7\",\n                    \"#F37F24\"\n                ],\n            }\n        ]\n    };\n\n    const pieDataAlquiler = {\n        labels: titulosAlquiler,\n        datasets: [\n            {\n                data: totalAlquiler,\n                backgroundColor: [\n                    \"#F37F24\",\n                    \"#24A8F3\",\n                    \"#F3242D\",\n                    \"#2424F3\",\n                    \"#F324D7\",\n                    \"#FF6384\",\n                    \"#36A2EB\",\n                    \"#FFCE56\",\n                    \"#C124F3\", \n                    \n                    \n                ],\n            }\n        ]\n    };\n\n    useEffect(() => {\n        productosMasVendidos();\n        productosMasAlquilados();\n    }, []);\n    \n\n    const directVenta = () => {\n        setFlagVenta(true);\n    }\n\n    const directAlquiler = () => {\n        setFlagAlquiler(true);\n    }\n\n    const productosMasVendidos = async () => {\n        const resp = await ServiceGlobal.productosMasVendidos();\n        if (resp.valid) {\n            let titulos = [];\n            let totales = [];\n            resp.data.forEach( item => {\n                titulos.push(item.producto);\n                totales.push(item.total);\n            });\n            setTitulos(titulos);\n            setTotal(totales);\n        }\n    }\n\n    const productosMasAlquilados = async () => {\n        const resp = await ServiceGlobal.productosMasAlquilados();\n        if (resp.valid) {\n            let titulos = [];\n            let totales = [];\n            resp.data.forEach( item => {\n                titulos.push(item.producto);\n                totales.push(item.total);\n            });\n            setTitulosAlquiler(titulos);\n            setTotalAlquiler(totales);\n        }\n    }\n\n    return (\n        <div className=\"grid crud-demo\">\n            {\n                !flagVenta && !flagAlquiler ? (\n                    <>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card card-w-title\" onClick={directVenta}>\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/ventaProducto.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">VENTA</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={directAlquiler}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/alquiler.png\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">ALQUILER</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card flex flex-column align-items-center\">\n                            <h4>Productos Más Vendidos</h4>\n                            <Chart type=\"pie\" data={pieData} style={{ width: '50%' }} />\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card flex flex-column align-items-center\">\n                            <h4>Productos Más Alquilados</h4>\n                            <Chart type=\"pie\" data={pieDataAlquiler} style={{ width: '50%' }} />\n                        </div>\n                    </div>\n                    </>\n                        \n                ): null\n            }\n\n            {\n                flagVenta ? (\n                    <Venta \n                        setFlagVenta={setFlagVenta}\n                    />\n                ): null\n            }\n\n            {\n                flagAlquiler ? (\n                    <Alquiler\n                        setFlagAlquiler={setFlagAlquiler}\n                    />\n                ): null\n            }\n\n\n        </div>\n    )\n}\n\nexport default PrincipalVentas;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoVehiculo = () => {\n\n    let formTipoVehiculo = {\n        nombre: \"\",\n        descripcion: \"\",\n        ejes: \"\",\n        toneladas: \"\"\n    };\n\n    const [tipoVehiculos, setTipoVehiculos] = useState(null);\n    const [tipoVehiculoDialog, setTipoVehiculoDialog] = useState(false);\n    const [deleteTipoVehiculoDialog, setDeleteTipoVehiculoDialog] = useState(false);\n    const [tipoVehiculo, setTipoVehiculo] = useState(formTipoVehiculo);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoVehiculos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoVehiculo(formTipoVehiculo);\n        setSubmitted(false);\n        setTipoVehiculoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoVehiculoDialog(false);\n    }\n\n    const hideDeleteTipoVehiculoDialog = () => {\n        setDeleteTipoVehiculoDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoVehiculo.nombre) {\n             if (tipoVehiculo.idTipoVehiculo) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoVehiculo);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoVehiculo);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoVehiculo = (tipoVehiculo) => {\n        setTipoVehiculo({ ...tipoVehiculo });\n        setTipoVehiculoDialog(true);\n    }\n\n    const confirmDeletetipoVehiculo = (tipoVehiculo) => {\n        setTipoVehiculo(tipoVehiculo);\n        setDeleteTipoVehiculoDialog(true);\n    }\n\n    const deletetipoVehiculo = async () => {\n        let resp = await Service.deleteById(tipoVehiculo);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoVehiculoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoVehiculo({\n            ...tipoVehiculo,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoVehiculo}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const ejesBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Ejes</span>\n                {rowData.ejes}\n            </>\n        );\n    }\n\n    const toneladasBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Toneladas</span>\n                {rowData.toneladas}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoVehiculo(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoVehiculo(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Vehiculos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoVehiculoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoVehiculo.idTipoVehiculo ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoVehiculoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoVehiculoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoVehiculo} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoVehiculos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoVehiculos\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoVehiculos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoVehiculo\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"ejes\" header=\"Ejes\" sortable body={ejesBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"toneladas\" header=\"Toneladas\" sortable body={toneladasBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoVehiculoDialog} style={{ width: '450px' }} header={tipoVehiculo.idTipoVehiculo ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoVehiculoDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoVehiculo.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !tipoVehiculo.nombre })} \n                            />\n                            { submitted &&  !tipoVehiculo.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"ejes\">Ejes</label>\n                            <InputText \n                                id=\"ejes\" \n                                name=\"ejes\"\n                                type=\"number\"\n                                value={tipoVehiculo.ejes} \n                                onChange={onInputChange} \n                                required \n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"toneladas\">Toneladas</label>\n                            <InputText \n                                id=\"toneladas\" \n                                name=\"toneladas\"\n                                type=\"number\"\n                                value={tipoVehiculo.toneladas} \n                                onChange={onInputChange} \n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoVehiculo.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoVehiculoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoVehiculoDialogFooter} onHide={hideDeleteTipoVehiculoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoVehiculo && <span>Desea eliminar este item: <b>{tipoVehiculo.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoVehiculo","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoVehiculo from \"../tipoVehiculo/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst Vehiculo = () => {\n  let formVehiculo = {\n    idTipoVehiculo: \"\",\n    placa: \"\",\n    marca: \"\",\n    modelo: \"\",\n    color: \"\",\n    descripcion: \"\",\n};\n\nconst [vehiculos, setVehiculos] = useState(null);\nconst [tipoVehiculos, setTipoVehiculos] = useState([]);\nconst [vehiculoDialog, setVehiculoDialog] = useState(false);\nconst [deleteVehiculoDialog, setDeleteVehiculoDialog] = useState(false);\nconst [vehiculo, setVehiculo] = useState(formVehiculo);\nconst [submitted, setSubmitted] = useState(false);\nconst [globalFilter, setGlobalFilter] = useState(null);\nconst toast = useRef(null);\nconst dt = useRef(null);\n\nuseEffect(() => {\n    list();\n    listTipoVehiculos();\n}, []);\n\nconst list = async()  => {\n    let resp = await Service.list();\n    if (resp.valid) {\n        setVehiculos(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoVehiculos = async()  => {\n  let resp = await ServiceTipoVehiculo.list();\n  if (resp.valid) {\n      setTipoVehiculos(resp.data);\n  } else {\n      toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n  }\n}\n\n\nconst openNew = () => {\n    setVehiculo(formVehiculo);\n    setSubmitted(false);\n    setVehiculoDialog(true);\n}\n\nconst hideDialog = () => {\n    setSubmitted(false);\n    setVehiculoDialog(false);\n}\n\nconst hideDeleteVehiculoDialog = () => {\n    setDeleteVehiculoDialog(false);\n}\n\nconst submit = () => {\n    if (vehiculo.idTipoVehiculo && vehiculo.placa && vehiculo.marca && vehiculo.modelo && vehiculo.color) {\n         if (vehiculo.idVehiculo) {\n             edit();\n         } else {\n             save();\n         }\n    } \n}\n\nconst save = async () => {\n    let resp = await Service.save(vehiculo);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst edit = async () => {\n    let resp = await Service.update(vehiculo);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\n\n\nconst editVehiculo = (vehiculo) => {\n    setVehiculo({ ...vehiculo });\n    setVehiculoDialog(true);\n}\n\nconst confirmDeleteVehiculo = (vehiculo) => {\n    setVehiculo(vehiculo);\n    setDeleteVehiculoDialog(true);\n}\n\nconst deleteVehiculo = async () => {\n    let resp = await Service.deleteById(vehiculo);\n    if ( resp.valid ) {\n        list();\n        setDeleteVehiculoDialog(false);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n\n}\n\n\n\nconst onInputChange = (e) => {\n    const { value, name } = e.target;\n    if ( name ==='disponible') {\n      setVehiculo({\n        ...vehiculo,\n        [name]: !value,\n    });\n    } else {\n      setVehiculo({\n          ...vehiculo,\n          [name]: value,\n      });\n    }\n    setSubmitted(true);\n}\n\n\nconst rightToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"my-2\">\n                <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst leftToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"my-2\">\n                Cada vehiculo se encuentra monitoreado por GPS-inversiones\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst idBodyTemplate = (rowData) => {\n    return (\n        <>\n            <span className=\"p-column-title\">ID</span>\n            {rowData.idVehiculo}\n        </>\n    );\n}\n\nconst tipoVehiculoBodyTemplate = (rowData) => {\n    return (\n        <>\n            <span className=\"p-column-title\">Tipo Vehiculo</span>\n            {rowData.tipoVehiculo}\n        </>\n    );\n}\n\nconst placaBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Placa</span>\n          {rowData.placa}\n      </>\n  );\n}\n\nconst marcaBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Marca</span>\n          {rowData.marca}\n      </>\n  );\n}\n\nconst modeloBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Modelo</span>\n          {rowData.modelo}\n      </>\n  );\n}\n\nconst colorBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Color</span>\n          {rowData.color}\n      </>\n  );\n}\n\nconst disponibleBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Disponible</span>\n          {rowData.disponible ? \"DISPONIBLE\" : \"NO DISPONIBLE\"}\n      </>\n  );\n}\n\n\n\nconst actionBodyTemplate = (rowData) => {\n    return (\n        <div className=\"actions\">\n            <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editVehiculo(rowData)} />\n            <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteVehiculo(rowData)} />\n        </div>\n    );\n}\n\nconst header = (\n    <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n        <h5 className=\"m-0\">Vehiculos</h5>\n        <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n            <i className=\"pi pi-search\" />\n            <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n        </span>\n    </div>\n);\n\nconst vehiculoDialogFooter = (\n    <>\n        <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n        <Button label={vehiculo.idVehiculo ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n    </>\n);\nconst deleteVehiculoDialogFooter = (\n    <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteVehiculoDialog} />\n        <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteVehiculo} />\n    </>\n);\n\nreturn (\n    <div className=\"grid crud-demo\">\n        <div className=\"col-12\">\n            <div className=\"card\">\n                <Toast ref={toast} />\n                <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                <DataTable ref={dt} value={vehiculos}\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                    currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} vehiculos\"\n                    globalFilter={globalFilter} emptyMessage=\"No vehiculos found.\" header={header} responsiveLayout=\"scroll\">\n\n                    <Column field=\"idVehiculo\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                    <Column field=\"tipoVehiculo\" header=\"Tipo Vehiculo\" sortable body={tipoVehiculoBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                    <Column field=\"placa\" header=\"Placa\" body={placaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"marca\" header=\"Marca\" body={marcaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"modelo\" header=\"Modelo\" body={modeloBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"color\" header=\"Color\" body={colorBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"disponible\" header=\"Disponibilidad\" body={disponibleBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column body={actionBodyTemplate}></Column>\n                </DataTable>\n\n                <Dialog visible={vehiculoDialog} style={{ width: '450px' }} header={vehiculo.idVehiculo ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={vehiculoDialogFooter} onHide={hideDialog}>\n                    \n                    <div className=\"formgrid grid\">\n                      <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Tipo Vehiculo*</label>\n                        <Select \n                            value={vehiculo.idTipoVehiculo} \n                            className=\"w-full\"\n                            id=\"idTipoVehiculo\" \n                            name=\"idTipoVehiculo\" \n                            onChange={onInputChange}>\n                            {tipoVehiculos.map((item, index) => (\n                                <MenuItem value={item.idTipoVehiculo} key={index}>\n                                    {item.nombre}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        { submitted &&  !vehiculo.idTipoVehiculo && <small className=\"p-invalid\">Tipo de Vehiculo es requerida.</small>}\n                      </div>\n                      <div className=\"field col\">\n                        <label htmlFor=\"nombre\">Placa*</label>\n                          <TextField \n                              id=\"placa\" \n                              name=\"placa\"\n                              value={vehiculo.placa} \n                              onChange={onInputChange} \n                              required \n                              className={classNames({ 'p-invalid': submitted && !vehiculo.placa })} \n                          />\n                          { submitted &&  !vehiculo.placa && <small className=\"p-invalid\">Placa es requerido.</small>}\n                      </div>\n                    </div>\n\n                    <div className=\"formgrid grid\">\n                      <div className=\"field col\">\n                        <label htmlFor=\"marca\">Marca*</label>\n                        <TextField \n                              id=\"marca\" \n                              name=\"marca\"\n                              value={vehiculo.marca} \n                              onChange={onInputChange} \n                              required \n                              fullWidth\n                              className={classNames({ 'p-invalid': submitted && !vehiculo.marca })} \n                        />\n                        { submitted &&  !vehiculo.marca && <small className=\"p-invalid\">Marca es requerido.</small>}\n                      </div>\n                      <div className=\"field col\">\n                        <label htmlFor=\"nombre\">Modelo*</label>\n                          <TextField \n                              id=\"modelo\" \n                              name=\"modelo\"\n                              type=\"number\"\n                              value={vehiculo.modelo} \n                              onChange={onInputChange} \n                              required \n                              autoFocus \n                              className={classNames({ 'p-invalid': submitted && !vehiculo.modelo })} \n                          />\n                          { submitted &&  !vehiculo.modelo && <small className=\"p-invalid\">Modelo es requerido.</small>}\n                      </div>\n                    </div>\n\n\n                    <div className=\"field\">\n                        <label htmlFor=\"color\">Color*</label>\n                        <TextField \n                              id=\"color\" \n                              name=\"color\"\n                              value={vehiculo.color} \n                              onChange={onInputChange} \n                              required \n                              autoFocus \n                              fullWidth\n                              className={classNames({ 'p-invalid': submitted && !vehiculo.color })} \n                        />\n                        { submitted &&  !vehiculo.color && <small className=\"p-invalid\">Color es requerido.</small>}\n                      \n                    </div>\n\n\n\n\n                    <div className=\"field\">\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                        <InputTextarea \n                            id=\"descripcion\" \n                            name=\"descripcion\"\n                            value={vehiculo.descripcion} \n                            onChange={onInputChange} \n                            required \n                            rows={3} \n                            cols={20} \n                        />\n                    </div>\n                </Dialog>\n\n                <Dialog visible={deleteVehiculoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteVehiculoDialogFooter} onHide={hideDeleteVehiculoDialog}>\n                    <div className=\"flex align-items-center justify-content-center\">\n                        <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                        {vehiculo && <span>Desea eliminar este item: <b>{vehiculo.nombre}</b>?</span>}\n                    </div>\n                </Dialog>\n\n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default Vehiculo;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/viaje/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/viaje/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/viaje/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/viaje/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceCargamento from \"../cargamento/Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst Viaje = () => {\n    let formViaje = {\n        idCargamento: \"\",\n        idCliente: \"\",\n        origen:\"\",\n        destino:\"\",\n        fechaInicio:\"\",\n        fechaFin:\"\",\n        kilometros:\"\",\n        toneladas:\"\",\n        precio:\"\"\n    };\n\n    const [viajes, setViajes] = useState(null);\n    const [cargamentos, setCargamentos] = useState([]);\n    const [clientes, setClientes] = useState([]);\n    const [viajeDialog, setViajeDialog] = useState(false);\n    const [deleteViajeDialog, setDeleteViajeDialog] = useState(false);\n    const [viaje, setViaje] = useState(formViaje);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n        listCargamento();\n    }, []);\n\n    useEffect(() => {\n        if (viaje.idCargamento){\n            viaje.idCargamento === 1 ? listCliente(4) : listCliente(5)\n        }\n    }, [viaje.idCargamento]);\n    \n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setViajes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCargamento = async() => {\n        let resp = await ServiceCargamento.list();\n        if (resp.valid) {\n            setCargamentos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCliente = async(id) => {\n        let aux = {idNegocio: id}\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setViaje(formViaje);\n        setSubmitted(false);\n        setViajeDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setViajeDialog(false);\n    }\n\n    const hideDeleteViajeDialog = () => {\n        setDeleteViajeDialog(false);\n    }\n\n    const submit = () => {\n        if (viaje.idCargamento && viaje.idCliente && viaje.origen && viaje.destino && viaje.kilometros && viaje.toneladas && viaje.precio ) {\n             if (viaje.idViaje) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(viaje);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(viaje);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editViaje = (viaje) => {\n        setViaje({ ...viaje });\n        setViajeDialog(true);\n    }\n\n    const confirmDeleteViaje = (viaje) => {\n        setViaje(viaje);\n        setDeleteViajeDialog(true);\n    }\n\n    const deleteViaje = async () => {\n        let resp = await Service.deleteById(viaje);\n        if ( resp.valid ) {\n            list();\n            setDeleteViajeDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setViaje({\n            ...viaje,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idViaje}\n            </>\n        );\n    }\n\n    const cargamentoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cargamento</span>\n                {rowData.cargamento}\n            </>\n        );\n    }\n\n\n    const clienteBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cliente</span>\n                {rowData.cliente}\n            </>\n        );\n    }\n\n    const trayectoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Trayecto</span>\n                <b>Origen: </b>{rowData.origen}\n                <br />\n                <b>Destino: </b>{rowData.destino}\n            </>\n        );\n    }\n\n    const fechaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Duración</span>\n                <b>Fecha Inicio: </b>{rowData.fechaInicio}\n                <br />\n                <b>Fecha Fin: </b>{rowData.fechaFin}\n            </>\n        );\n    }\n\n\n    const toneladasBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Toneladas</span>\n                {rowData.toneladas}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {rowData.precio}\n            </>\n        );\n    }\n\n    const estadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Estado</span>\n                {rowData.estado === 1 ? \"NO ASIGNADO\" : rowData.estado === 2 ? \"ASIGNADO\" : \"COMPLETADO\"}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                {\n                    rowData.estado === 1 ? (\n                        <>\n                        <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editViaje(rowData)} />\n                        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteViaje(rowData)} />\n                        </>\n                    ):null\n                }\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Viajes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const viajeDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={viaje.idViaje ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteViajeDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteViajeDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteViaje} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={viajes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} viajes\"\n                        globalFilter={globalFilter} emptyMessage=\"No viajes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idViaje\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"cargamento\" header=\"Cargamento\" sortable body={cargamentoBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"cliente\" header=\"Cliente\" body={clienteBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"trayecto\" header=\"Trayecto\" sortable body={trayectoBodyTemplate} headerStyle={{ width: '20%', minWidth: '10rem' }}></Column>\n                        <Column field=\"duracion\" header=\"Duración\" sortable body={fechaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"toneladas\" header=\"Toneladas\" sortable body={toneladasBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" sortable body={precioBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"estado\" header=\"Estado\" sortable body={estadoBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={viajeDialog} style={{ width: '450px' }} header={viaje.idViaje ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={viajeDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Cargamento*</label>\n                            <Select \n                                value={viaje.idCargamento} \n                                className=\"w-full\"\n                                id=\"idCargamento\" \n                                name=\"idCargamento\" \n                                onChange={onInputChange}\n                            >\n                                {cargamentos.map((item, index) => (\n                                    <MenuItem value={item.idCargamento} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !viaje.idCargamento && <small className=\"p-error\">Cargamento es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"quantity\">Cliente</label>\n                            <Select \n                                value={viaje.idCliente} \n                                className=\"w-full\"\n                                id=\"idCliente\" \n                                name=\"idCliente\" \n                                onChange={onInputChange}\n                            >\n                                {clientes.map((item, index) => (\n                                    <MenuItem value={item.idCliente} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !viaje.idCliente && <small className=\"p-error\">Cliente es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Origen*</label>\n                            <TextField \n                                id=\"origen\" \n                                name=\"origen\"\n                                value={viaje.origen} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.origen })} \n                            />\n                            { submitted &&  !viaje.origen && <small className=\"p-error\">Origen es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Destino*</label>\n                            <TextField \n                                id=\"destino\" \n                                name=\"destino\"\n                                value={viaje.destino} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.destino })} \n                            />\n                            { submitted &&  !viaje.destino && <small className=\"p-error\">Destino es requerido.</small>}\n                        </div>\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Fecha Inicio</label>\n                                <TextField \n                                    id=\"fechaInicio\" \n                                    name=\"fechaInicio\"\n                                    type=\"date\"\n                                    value={viaje.fechaInicio} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.fechaInicio })} \n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Fecha Fin</label>\n                                <TextField \n                                    id=\"fechaFin\" \n                                    name=\"fechaFin\"\n                                    type=\"date\"\n                                    value={viaje.fechaFin} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.fechaFin })} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Kilometros aprox</label>\n                                <TextField \n                                    id=\"kilometros\" \n                                    name=\"kilometros\"\n                                    type=\"number\"\n                                    value={viaje.kilometros} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.kilometros })} \n                                />\n                                { submitted &&  !viaje.kilometros && <small className=\"p-error\">Kilometros es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Toneladas</label>\n                                <TextField \n                                    id=\"toneladas\" \n                                    name=\"toneladas\"\n                                    type=\"numeber\"\n                                    value={viaje.toneladas} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.toneladas })} \n                                />\n                                { submitted &&  !viaje.toneladas && <small className=\"p-error\">Toneladas es requerido.</small>}\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Precio</label>\n                            <TextField \n                                id=\"precio\" \n                                type=\"number\"\n                                name=\"precio\"\n                                value={viaje.precio} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.precio })} \n                            />\n                            { submitted &&  !viaje.precio && <small className=\"p-error\">Precio es requerido.</small>}\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteViajeDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteViajeDialogFooter} onHide={hideDeleteViajeDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {viaje && <span>Desea eliminar este item: <b>{viaje.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Viaje;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cliente/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTrasnporte(obj) {\n    let respuesta = await axios.post(URL + `/cliente/listCondicion`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cliente/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cliente/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cliente/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst ClienteTransporte = (props) => {\n  \n    let formCliente = {\n        idNegocio: \"\",\n        nombre: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: null\n    };\n\n    const negocios = [\n        {\n            idNegocio: 4,\n            nombre: \"TRANSPORTE DE MATERIA PRIMA\"\n        },\n        {\n            idNegocio: 5,\n            nombre: \"TRANSPORTE DE PRODUCTOS\"\n        }\n    ];\n\n    const [clientes, setClientes] = useState(null);\n    const [clienteDialog, setClienteDialog] = useState(false);\n    const [deleteClienteDialog, setDeleteClienteDialog] = useState(false);\n    const [cliente, setCliente] = useState(formCliente);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n      list();\n    }, []);\n    \n\n    const list = async()  => {\n        let aux = {idPrimero: 4, idSegundo: 5}\n        let resp = await Service.listTrasnporte(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCliente(formCliente);\n        setSubmitted(false);\n        setClienteDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setClienteDialog(false);\n    }\n\n    const hideDeleteClienteDialog = () => {\n        setDeleteClienteDialog(false);\n    }\n\n    const submit = () => {\n        if (cliente.nombre  && cliente.nit && cliente.direccion && cliente.email && cliente.idNegocio) {\n             if (cliente.idCliente) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editCliente = (cliente) => {\n        setCliente({ ...cliente });\n        setClienteDialog(true);\n    }\n\n    const confirmDeleteCliente = (cliente) => {\n        setCliente(cliente);\n        setDeleteClienteDialog(true);\n    }\n\n    const deleteCliente = async () => {\n        let resp = await Service.deleteById(cliente);\n        if ( resp.valid ) {\n            list();\n            setDeleteClienteDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCliente({\n            ...cliente,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCliente}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre} \n            </>\n        );\n    }\n\n\n    const nitBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nit</span>\n                {rowData.dpi}\n            </>\n        );\n    }\n\n    const telefonoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Telefono</span>\n                {rowData.telefono}\n            </>\n        );\n    }\n\n    const emailBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Email</span>\n                {rowData.email}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editCliente(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteCliente(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Clientes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const clienteDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={cliente.idCliente ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteClienteDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteClienteDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteCliente} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={clientes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} clientes\"\n                        globalFilter={globalFilter} emptyMessage=\"No clientes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCliente\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"negocio\" header=\"Negocio\" sortable  headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nit\" header=\"Nit\" body={nitBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"telefono\" header=\"Telefono\" body={telefonoBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"email\" header=\"Email\" body={emailBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={clienteDialog} style={{ width: '450px' }} header={cliente.idCliente ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={clienteDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Negocio*</label>\n                            <Select \n                                value={cliente.idNegocio} \n                                className=\"w-full\"\n                                id=\"idNegocio\" \n                                name=\"idNegocio\" \n                                onChange={onInputChange}>\n                                {negocios.map((item, index) => (\n                                    <MenuItem value={item.idNegocio} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !cliente.idNegocio && <small className=\"p-invalid\">Negocio es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre Empresa</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={cliente.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !cliente.nombre })} \n                            />\n                            { submitted &&  !cliente.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        \n                        <div className='field'>\n                            <label htmlFor=\"quantity\">NIT</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"nit\"\n                                name=\"nit\"\n                                value={ cliente.nit }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                                className=\"w-full\"\n                            />\n                            { submitted &&  !cliente.nit && <small className=\"p-invalid\">Nit es requerido.</small>}\n\n                        </div>\n\n                        <div className=\"field\">\n                                <label htmlFor=\"nombre\">Dirección</label>\n                                <InputText \n                                    id=\"direccion\" \n                                    name=\"direccion\"\n                                    value={cliente.direccion} \n                                    onChange={onInputChange} \n                                    required \n                                    className={classNames({ 'p-invalid': submitted && !cliente.direccion })} \n                                />\n                                { submitted &&  !cliente.direccion && <small className=\"p-invalid\">Direccion es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Email</label>\n                                <TextField\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    className=\"w-full\"\n                                    value={ cliente.email }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                { submitted &&  !cliente.email && <small className=\"p-invalid\">Email es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Telefono</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"telefono\"\n                                    name=\"telefono\"\n                                    className=\"w-full\"\n                                    value={ cliente.telefono }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                             </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteClienteDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteClienteDialogFooter} onHide={hideDeleteClienteDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {cliente && <span>Desea eliminar este item: <b>{cliente.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClienteTransporte;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function empezarRuta(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/empezarRuta`, obj);\n\treturn respuesta.data;\n}\n\nexport async function terminarRuta(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/terminarRuta`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportAsignacion = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:55, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>REPORTE DE ASIGNACIONES</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Listado de asignaciones en sus diversas etapas</Text>\n                </View>\n                \n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.asignaciones}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Vehiculo\n                            </TableCell>\n                            <TableCell>\n                                Ruta\n                            </TableCell>\n                            <TableCell>\n                                Cliente\n                            </TableCell>\n                            <TableCell>\n                                Cargamento\n                            </TableCell>\n                            <TableCell>\n                                Piloto\n                            </TableCell>\n                            <TableCell>\n                                Estado\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idAsignacion}/>\n                        <DataTableCell getContent={(r) => r.placa}/>\n                        <DataTableCell getContent={(r) => r.destino}/>\n                        <DataTableCell getContent={(r) => r.cliente}/>\n                        <DataTableCell getContent={(r) => r.cargamento}/>\n                        <DataTableCell getContent={(r) => r.empleado}/>\n                        <DataTableCell getContent={(r) => r.estado === 1 ? \"EN ESPERA\": r.estado === 2 ? \"EN RUTA\" : \"FINALIZADO\"}/>\n                            \n                        </TableBody>\n                    </Table>\n     \n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportAsignacion;","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceViaje from \"../viaje/Service\";\nimport { MenuItem, Select } from '@mui/material';\nimport * as ServiceVehiculo from \"../vehiculo/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\n\nimport ReportAsignacion from './ReportAsignacion';\nimport { PDFViewer } from '@react-pdf/renderer';\n\n\nconst Asignacion = () => {\n\n    let formAsignacion = {\n        idViaje: \"\",\n        idVehiculo: \"\",\n        idEmpleado: \"\"\n    };\n\n    const [asignaciones, setAsignaciones] = useState(null);\n    const [asignacionDialog, setAsignacionDialog] = useState(false);\n    const [deleteAsigncionDialog, setDeleteAsigncionDialog] = useState(false);\n    const [asignacion, setAsignacion] = useState(formAsignacion);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [viajes, setViajes] = useState([]);\n    const [vehiculos, setVehiculos] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n\n    const [viaje, setViaje] = useState(\"\");\n\n    const [asignacionReportDialog, setasignacionReportDialog] = useState(false);\n    const [empezarDialog, setEmpezarDialog] = useState(false);\n    const [terminarDialog, setTerminarDialog] = useState(false);\n\n    useEffect(() => {\n        list();\n        listViajes();\n    }, []);\n\n    useEffect(() => {\n       if (viaje) {\n           listVehiculos(viaje.toneladas);\n\n           if (viaje.idCargamento === 1) { \n               listEmpleados(2);\n            } else if (viaje.idCargamento === 2) {\n                listEmpleados(3);\n            }\n       }\n    }, [viaje]);\n    \n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setAsignaciones(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listViajes = async()  => {\n        let aux = {estado: 1}\n        let resp = await ServiceViaje.list(aux);\n        if (resp.valid) {\n            setViajes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listVehiculos = async(capacidad)  => {\n        let aux = {disponible: 1, toneladas: capacidad }\n        let resp = await ServiceVehiculo.list(aux);\n        if (resp.valid) {\n            setVehiculos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async(idArea)  => {\n        let aux = {\n            idRol: 8,\n            idAreaNegocio: idArea\n        }\n        let resp = await ServiceEmpleado.listByRolByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setAsignacion(formAsignacion);\n        setSubmitted(false);\n        setAsignacionDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setAsignacionDialog(false);\n    }\n\n    const hideDeleteAsigncionDialog = () => {\n        setDeleteAsigncionDialog(false);\n    }\n\n    const submit = () => {\n        if (asignacion.idVehiculo && asignacion.idEmpleado && asignacion.idViaje) {\n             if (asignacion.idAsignacion) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(asignacion);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(asignacion);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const confirmDeleteasignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setDeleteAsigncionDialog(true);\n    }\n\n    const confirmEmpezarAsignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setEmpezarDialog(true);\n    }\n\n    const confirmFinalizarAsignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setTerminarDialog(true);\n    }\n\n    \n\n    const deleteasignacion = async () => {\n        let resp = await Service.deleteById(asignacion);\n        if ( resp.valid ) {\n            list();\n            setDeleteAsigncionDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const empezarAsignacion = async () => {\n        let resp = await Service.empezarRuta(asignacion);\n        if ( resp.valid ) {\n            list();\n            setEmpezarDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Buen Viaje', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const terminarAsignacion = async () => {\n        let resp = await Service.terminarRuta(asignacion);\n        if ( resp.valid ) {\n            list();\n            setTerminarDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Ha finalizado el viaje con exito', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setAsignacion({\n            ...asignacion,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const hideEmpezarDialog = () => {\n        setEmpezarDialog(false);\n    }\n\n    const hideTerminarDialog = () => {\n        setTerminarDialog(false);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"REPORTE\" icon=\"pi pi-file-pdf\" className=\"p-button-info mr-2\" onClick={()=>{setasignacionReportDialog(true)}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const estadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Estado</span>\n                {rowData.estado === 1 ? \"EN ESPERA\" : rowData.estado === 2 ? \"EN RUTA\" : \"FINALIZADO\"}\n            </>\n        );\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                \n                {\n                    rowData.estado === 2 ? (\n                        <Button icon=\"pi pi-check-circle\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => confirmFinalizarAsignacion(rowData)} />\n                    ):null\n                }\n                {\n                    rowData.estado === 1 ? (\n                        <>\n                        <Button icon=\"pi pi-play\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => confirmEmpezarAsignacion(rowData)} />\n                        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteasignacion(rowData)} />\n                        </>\n                    ):null\n                }\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Asignaciones</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const asignacionDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={asignacion.idAsignacion ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteAsigncionDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteAsigncionDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteasignacion} />\n        </>\n    );\n\n    const empezarRutaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideEmpezarDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={empezarAsignacion} />\n        </>\n    );\n\n    const terminarRutaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideTerminarDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={terminarAsignacion} />\n        </>\n    );\n\n    const hideDialogReporte = () => {\n        setasignacionReportDialog(false);\n    }\n\n\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={asignaciones}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} asignaciones\"\n                        globalFilter={globalFilter} emptyMessage=\"No asignaciones found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idAsignacion\" header=\"ID\" sortable></Column>\n                        <Column field=\"placa\" header=\"Placa Vehiculo\" sortable ></Column>\n                        <Column field=\"origen\" header=\"Origen\" ></Column>\n                        <Column field=\"destino\" header=\"Destino\" ></Column>\n                        <Column field=\"precio\" header=\"Precio\" ></Column>\n                        <Column field=\"cliente\" header=\"Cliente\" ></Column>\n                        <Column field=\"cargamento\" header=\"Tipo Cargamento\" ></Column>\n                        <Column field=\"empleado\" header=\"Piloto\" ></Column>\n                        <Column field=\"estado\" header=\"Estado\" body={estadoBodyTemplate} ></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={asignacionDialog} style={{ width: '700px' }} header={asignacion.idAsignacion ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={asignacionDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Viaje*</label>\n                            <Select \n                                value={asignacion.idViaje} \n                                className=\"w-full\"\n                                id=\"idViaje\" \n                                name=\"idViaje\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {viajes.map((item, index) => (\n                                    <MenuItem value={item.idViaje} key={index} onClick={()=>{setViaje(item)}}>\n                                        {item.origen +\" - \"+ item.destino + \" Cargamento: \" + item.cargamento}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idViaje && <small className=\"p-error\">Viaje es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Vehiculo*</label>\n                            <Select \n                                value={asignacion.idVehiculo} \n                                className=\"w-full\"\n                                id=\"idVehiculo\" \n                                name=\"idVehiculo\" \n                                onChange={onInputChange}\n                            >\n                                {vehiculos.map((item, index) => (\n                                    <MenuItem value={item.idVehiculo} key={index}>\n                                        {\"PLACA: \" + item.placa +\" - MARCA: \"+ item.marca + \" - MODELO: \" + item.modelo}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idVehiculo && <small className=\"p-error\">Vehiculo es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Piloto*</label>\n                            <Select \n                                value={asignacion.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChange}\n                            >\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre +\" \"+ item.apellido}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idEmpleado && <small className=\"p-error\">Piloto es requerido.</small>}\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteAsigncionDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteAsigncionDialogFooter} onHide={hideDeleteAsigncionDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {asignacion && <span>Desea eliminar este item: <b>{asignacion.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={asignacionReportDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReporte}>\n                        <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                            <ReportAsignacion \n                                asignaciones={asignaciones}\n                            />\n                        </PDFViewer>\n                    </Dialog>\n\n                    <Dialog visible={empezarDialog} style={{ width: '450px' }} modal className=\"p-fluid\" footer={empezarRutaDialogFooter} onHide={hideEmpezarDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {<span>Esta seguro de iniciar la Ruta?</span>}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={terminarDialog} style={{ width: '450px' }} modal className=\"p-fluid\" footer={terminarRutaDialogFooter} onHide={hideTerminarDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {<span>Esta seguro de finalizar la Ruta?</span>}\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Asignacion;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoObra = () => {\n\n    let formTipoObra = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoObras, setTipoObras] = useState(null);\n    const [tipoObraDialog, setTipoObraDialog] = useState(false);\n    const [deletetipoTipoObraDialog, setDeletetipoTipoObraDialog] = useState(false);\n    const [tipoObra, setTipoObra] = useState(formTipoObra);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoObra(formTipoObra);\n        setSubmitted(false);\n        setTipoObraDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoObraDialog(false);\n    }\n\n    const hideDeletetipoTipoObraDialog = () => {\n        setDeletetipoTipoObraDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoObra.nombre) {\n             if (tipoObra.idTipoObra) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoObra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoObra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoObra = (tipoObra) => {\n        setTipoObra({ ...tipoObra });\n        setTipoObraDialog(true);\n    }\n\n    const confirmDeletetipoObra = (tipoObra) => {\n        setTipoObra(tipoObra);\n        setDeletetipoTipoObraDialog(true);\n    }\n\n    const deletetipoObra = async () => {\n        let resp = await Service.deleteById(tipoObra);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoTipoObraDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoObra({\n            ...tipoObra,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoObra}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoObra(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoObra(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de obras</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoObraDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoObra.idTipoObra ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoTipoObraDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoTipoObraDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoObra} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoObras}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoObras\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoObras found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoObra\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoObraDialog} style={{ width: '450px' }} header={tipoObra.idTipoObra ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoObraDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoObra.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoObra.nombre })} \n                            />\n                            { submitted &&  !tipoObra.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoObra.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoTipoObraDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoTipoObraDialogFooter} onHide={hideDeletetipoTipoObraDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoObra && <span>Desea eliminar este item: <b>{tipoObra.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoObra;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMaterial = () => {\n\n    let formTipoMaterial = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMateriales, setTipoMateriales] = useState(null);\n    const [tipoMaterialDialog, setTipoMaterialDialog] = useState(false);\n    const [deletetipoTipoMaterialDialog, setDeletetipoTipoMaterialDialog] = useState(false);\n    const [tipoMaterial, setTipoMaterial] = useState(formTipoMaterial);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMaterial(formTipoMaterial);\n        setSubmitted(false);\n        setTipoMaterialDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMaterialDialog(false);\n    }\n\n    const hideDeletetipoTipoMaterialDialog = () => {\n        setDeletetipoTipoMaterialDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMaterial.nombre) {\n             if (tipoMaterial.idTipoMaterial) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMaterial);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMaterial);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMaterial = (tipoMaterial) => {\n        setTipoMaterial({ ...tipoMaterial });\n        setTipoMaterialDialog(true);\n    }\n\n    const confirmDeletetipoMaterial = (tipoMaterial) => {\n        setTipoMaterial(tipoMaterial);\n        setDeletetipoTipoMaterialDialog(true);\n    }\n\n    const deletetipoMaterial = async () => {\n        let resp = await Service.deleteById(tipoMaterial);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoTipoMaterialDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMaterial({\n            ...tipoMaterial,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMaterial}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMaterial(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMaterial(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Materiales</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMaterialDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMaterial.idTipoMaterial ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoTipoMaterialDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoTipoMaterialDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMaterial} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMateriales}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMateriales\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMateriales found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMaterial\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMaterialDialog} style={{ width: '450px' }} header={tipoMaterial.idTipoMaterial ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMaterialDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMaterial.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMaterial.nombre })} \n                            />\n                            { submitted &&  !tipoMaterial.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMaterial.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoTipoMaterialDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoTipoMaterialDialogFooter} onHide={hideDeletetipoTipoMaterialDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMaterial && <span>Desea eliminar este item: <b>{tipoMaterial.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMaterial;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/material/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/material/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/material/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/material/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoMaterial from \"../tipoMaterial/Service\";\nimport { MenuItem, Select } from '@mui/material';\n\nconst Material = () => {\n\n    let formMaterial = {\n        idTipoMaterial: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        precio: \"\"\n    };\n\n    const [materiales, setMateriales] = useState(null);\n    const [materialDialog, setMaterialDialog] = useState(false);\n    const [deleteMaterialDialog, setDeleteMaterialDialog] = useState(false);\n    const [material, setMaterial] = useState(formMaterial);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tipoMateriales, setTipoMateriales] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMateriales();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMateriales = async()  => {\n        let resp = await ServiceTipoMaterial.list();\n        if (resp.valid) {\n            setTipoMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setMaterial(formMaterial);\n        setSubmitted(false);\n        setMaterialDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMaterialDialog(false);\n    }\n\n    const hideDeleteMaterialDialog = () => {\n        setDeleteMaterialDialog(false);\n    }\n\n    const submit = () => {\n        if (material.nombre && material.idTipoMaterial && material.precio) {\n             if (material.idMaterial) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(material);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(material);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmaterial = (material) => {\n        setMaterial({ ...material });\n        setMaterialDialog(true);\n    }\n\n    const confirmDeletematerial = (material) => {\n        setMaterial(material);\n        setDeleteMaterialDialog(true);\n    }\n\n    const deletematerial = async () => {\n        let resp = await Service.deleteById(material);\n        if ( resp.valid ) {\n            list();\n            setDeleteMaterialDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMaterial({\n            ...material,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMaterial}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const tipoMaterialBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tipo Material</span>\n                {rowData.tipoMaterial}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {rowData.precio}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmaterial(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletematerial(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Materiales</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const materialDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={material.idMaterial ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMaterialDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMaterialDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletematerial} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={materiales}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} materiales\"\n                        globalFilter={globalFilter} emptyMessage=\"No materiales found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMaterial\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"idTipoMaterial\" header=\"Tipo Material\" body={tipoMaterialBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" body={precioBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={materialDialog} style={{ width: '450px' }} header={material.idMaterial ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={materialDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Tipo Material*</label>\n                            <Select \n                                value={material.idTipoMaterial} \n                                className=\"w-full\"\n                                id=\"idTipoMaterial\" \n                                name=\"idTipoMaterial\" \n                                autoFocus \n                                onChange={onInputChange}>\n                                {tipoMateriales.map((item, index) => (\n                                    <MenuItem value={item.idTipoMaterial} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !material.idTipoMaterial && <small className=\"p-invalid\">Tipo Material es requerida.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={material.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !material.nombre })} \n                            />\n                            { submitted &&  !material.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Precio*</label>\n                            <InputText \n                                id=\"precio\" \n                                name=\"precio\"\n                                type=\"number\"\n                                value={material.precio} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !material.precio })} \n                            />\n                            { submitted &&  !material.precio && <small className=\"p-error\">Precio es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={material.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMaterialDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMaterialDialogFooter} onHide={hideDeleteMaterialDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {material && <span>Desea eliminar este item: <b>{material.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Material;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/obra/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/obra/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/obra/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/obra/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/fase/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/fase/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/fase/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/fase/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByObra(obj) {\n    let respuesta = await axios.post(URL + `/fase/listByObra`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from './Service';\nconst Detalle = (props) => {\n    const [submitted, setSubmitted] = useState(false);\n    const [submittedMaterial, setSubmittedMaterial] = useState(false);\n    const [submittedManoObra, setSubmittedManoObra] = useState(false);\n\n    const [material, setMaterial] = useState(\"\");\n    const [manoObra, setManoObra] = useState(\"\");\n\n    const toast = useRef(null);\n\n    useEffect(() => {\n        props.setDetalleMaterial({\n            ...props.detalleMaterial,\n            precio: material.precio,\n            material: material.nombre\n        });\n        // eslint-disable-next-line\n    }, [material]);\n\n    useEffect(() => {\n        props.setManoObra({\n            ...props.manoObra,\n            empleado: manoObra.nombre + \" \" + manoObra.apellido\n        });\n        // eslint-disable-next-line\n    }, [manoObra]);\n\n    const clearMaterial = () => {\n        props.setDetalleMaterial(props.formDetalleMaterial);\n        setSubmittedMaterial(false);\n    }\n\n    const clearManoObra = () => {\n        props.setManoObra(props.formManoObra);\n        setSubmittedMaterial(false);\n    }\n\n    const clearEncabezado = () => {\n        props.setFase(props.formFase);\n        setSubmitted(false);\n    }\n\n    const back = () => {\n        clearMaterial();\n        clearEncabezado();\n        clearManoObra();\n        props.setFlagDetalle(false);\n    }\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n       \n        props.setFase({\n            ...props.fase,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const onInputChangeMaterial = (e) => {\n        const { value, name } = e.target;\n        if ( name === 'cantidad') {\n            props.setDetalleMaterial({\n                ...props.detalleMaterial,\n                cantidad: value,\n                precioTotal: value * props.detalleMaterial.precio\n            });\n\n        } else {\n            props.setDetalleMaterial({\n                ...props.detalleMaterial,\n                [name]: value,\n            });\n        }\n        setSubmittedMaterial(true);\n    }\n\n    const onInputChangeManoObra = (e) => {\n        const { value, name } = e.target;\n        \n        if ( name === 'costo') {\n            props.setManoObra({\n                ...props.manoObra,\n                [name]: value * 1,\n            });\n        } else {\n            props.setManoObra({\n                ...props.manoObra,\n                [name]: value,\n            });\n        }\n        setSubmittedManoObra(true);\n    }\n\n    const actionMaterialBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteMaterial(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const actionManoObraBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteManoObra(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const addMaterial = () => {\n        if ( props.detalleMaterial.idMaterial && props.detalleMaterial.cantidad ) {\n\n            let aux = props.fase.materiales;\n            const mismoProducto = aux.filter( item => item.idMaterial === props.detalleMaterial.idMaterial);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo material más de una vez.\", life: 3000 });\n            } else {\n                    aux.push(props.detalleMaterial);\n                    props.setFase({\n                        ...props.fase,\n                        materiales: aux\n                    });\n    \n                    props.setDetalleMaterial(props.formDetalleMaterial);\n                    setSubmittedMaterial(false);\n                    conteoTotalMaterial();\n            }\n        }\n    }\n\n    const addManoObra = () => {\n        if ( props.manoObra.idEmpleado && props.manoObra.costo ) {\n\n            let aux = props.fase.manoObra;\n            const mismoProducto = aux.filter( item => item.idEmpleado === props.manoObra.idEmpleado);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo empleado más de una vez.\", life: 3000 });\n            } else {\n                    aux.push(props.manoObra);\n                    props.setFase({\n                        ...props.fase,\n                        manoObra: aux\n                    });\n    \n                    props.setManoObra(props.formManoObra);\n                    setSubmittedManoObra(false);\n                    conteoTotalManoObra();\n            }\n        }\n    }\n\n    const deleteMaterial = (detalle, index) => {\n        let aux = props.fase.materiales;\n            aux.splice(index, 1);\n            props.setFase({\n                ...props.fase,\n                materiales: aux\n            });\n        conteoTotalMaterial();\n    }\n\n    const deleteManoObra = (detalle, index) => {\n        let aux = props.fase.manoObra;\n            aux.splice(index, 1);\n            props.setFase({\n                ...props.fase,\n                manoObra: aux\n            });\n        conteoTotalManoObra();\n    }\n\n    const conteoTotalMaterial = () => {\n        let aux = props.fase.materiales;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.precioTotal;\n        });     \n        props.setFase({\n            ...props.fase,\n            costoMaterial: acumulado,\n            costoTotal: acumulado + props.fase.costoManoObra\n        }); \n    }\n\n    const conteoTotalManoObra = () => {\n        let aux = props.fase.manoObra;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.costo;\n        });     \n        props.setFase({\n            ...props.fase,\n            costoManoObra: acumulado,\n            costoTotal: acumulado + props.fase.costoMaterial \n        }); \n    }\n\n    const addFase = () => {\n        if ( props.fase.nombre && props.fase.fechaInicio && props.fase.fechaFin) {\n            if (props.fase.materiales.length > 0 && props.fase.manoObra.length > 0) {\n                save();\n            } else {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"Debe de incluir al menos un material y empleado en la fase.\", life: 3000 });\n            }\n        }\n    }\n\n    const save = async () => {\n        let resp = await Service.save(props.fase);\n        if ( resp.valid ){\n            props.list();\n            back();\n            props.toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            props.toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n    return (\n        <div className=\"grid crud-demo\">\n            <Toast ref={toast} />\n             <div className=\"col-12\">\n                <div className=\"card\">\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-11\">\n                            <h3>Detalle</h3>\n                        </div>\n                        <div className=\"col-12 md:col-1\">\n                            <Button label=\"Volver\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={back} />\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Nombre*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    value={ props.fase.nombre }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.fase.nombre && <small className=\"p-error\">Nombre es requerida.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Fecha Inicio</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaInicio\"\n                                    name=\"fechaInicio\"\n                                    value={ props.fase.fechaInicio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                               \n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaFin\"\n                                    name=\"fechaFin\"\n                                    value={ props.fase.fechaFin }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-8\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"descripcion\"\n                                    name=\"descripcion\"\n                                    value={ props.fase.descripcion }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Total</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"costoTotal\"\n                                    name=\"costoTotal\"\n                                    value={ props.fase.costoTotal }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                            </div>\n                        </div>\n\n\n                        \n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-6\">\n                <div className=\"card\">\n                    <h5>Ingrese Material</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Material*</label>\n                            <Select \n                                value={props.detalleMaterial.idMaterial} \n                                className=\"w-full\"\n                                id=\"idMaterial\" \n                                name=\"idMaterial\" \n                                onChange={onInputChangeMaterial}\n                            >\n                                {props.materiales.map((item, index) => (\n                                    <MenuItem value={item.idMaterial} key={index} onClick={()=>{setMaterial(item)}}>\n                                        {item.nombre }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedMaterial && !props.detalleMaterial.idMaterial && <small className=\"p-error\">Producto  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Precio</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precio\"\n                                name=\"precio\"\n                                value={ props.detalleMaterial.precio }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Cantidad</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"cantidad\"\n                                name=\"cantidad\"\n                                value={ props.detalleMaterial.cantidad }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                            {  submittedMaterial && !props.detalleMaterial.cantidad && <small className=\"p-error\">Cantidad  es requerido.</small>}\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Total</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precioTotal\"\n                                name=\"precioTotal\"\n                                value={ props.detalleMaterial.precioTotal }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addMaterial}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearMaterial} />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.fase.materiales} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column field=\"material\" header=\"Material\" style={{ flexGrow: 1, flexBasis: '125px' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"cantidad\" header=\"Cantidad\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"precioTotal\" header=\"Total\" style={{ flexGrow: 1, flexBasis: '125px' }}></Column>\n                        <Column body={actionMaterialBodyTemplate} style={{ flexGrow: 1, flexBasis: '100px' }} ></Column>\n                    </DataTable>\n                </div>\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"costoMaterial\"\n                                    name=\"costoMaterial\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.fase.costoMaterial }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-6\">\n                <div className=\"card\">\n                    <h5>Ingrese Empleado</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Empleado*</label>\n                            <Select \n                                value={props.manoObra.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChangeManoObra}\n                            >\n                                {props.empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index} onClick={()=>{setManoObra(item)}}>\n                                        {item.nombre +\" \" + item.apellido}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedManoObra && !props.manoObra.idEmpleado && <small className=\"p-error\">Empleado  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Costo*</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"costo\"\n                                name=\"costo\"\n                                value={ props.manoObra.costo }\n                                onChange={onInputChangeManoObra}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                             {  submittedManoObra && !props.manoObra.costo && <small className=\"p-error\">Costo  es requerido.</small>}\n                        </div>\n                    \n                                    \n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addManoObra}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearManoObra} />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.fase.manoObra} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column field=\"empleado\" header=\"Empleado\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"costo\" header=\"Costo\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column body={actionManoObraBodyTemplate} header=\"Acción\" style={{ flexGrow: 1, flexBasis: '2px' }}></Column>\n                    </DataTable>\n                </div>\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"costoManoObra\"\n                                    name=\"costoManoObra\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.fase.costoManoObra }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                       \n                    </div>\n                </div>\n\n            </div>\n\n            <div className='col-10'></div>\n            <div className='col-2'>\n                <div className='card'>\n                    <div className=\"p-inputgroup\">\n                        <Button  label=\"CREAR FASE\" className=\"p-button-success mr-16 mb-16\" onClick={addFase}/>\n                    </div>   \n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Detalle","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    bodyTitulo: {\n        fontSize: 13, \n        marginTop:10\n    },\n});\n\nconst ReportFase = (props) => {\n   \n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\" , formSize: 18}}>\n                    <Text style={{color: \"#3388af\"}}>FASE</Text>\n                </View>    \n\n                <View style={styles.section}>\n                    <Text style={styles.body}>Nombre: {props.fase.nombre}</Text>\n                    <Text style={styles.body}>Fecha Inicio: {moment(props.fechaInicio).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Fecha Fin: {moment(props.fechaFin).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Descripción: {props.fase.descripcion}</Text>\n                    <Text style={styles.body}>Costo Total: {props.fase.costoTotal}</Text>\n                </View>\n\n                <View style={styles.section}>\n                    <Text style={styles.bodyTitulo}>DETALLE DE MATERIALES</Text>\n                    <Table\n                        data={props.fase.materiales}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Material\n                            </TableCell>\n                            <TableCell>\n                                Precio\n                            </TableCell>\n                            <TableCell>\n                                Cantidad\n                            </TableCell>\n                            <TableCell>\n                                Total\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idMaterial}/>\n                        <DataTableCell getContent={(r) => r.material}/>\n                        <DataTableCell getContent={(r) => r.precioMaterial}/>\n                        <DataTableCell getContent={(r) => r.cantidad}/>\n                        <DataTableCell getContent={(r) => r.precioTotal}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total Material: {props.fase.costoMaterial}\n                    </Text>\n\n                    <Text style={styles.bodyTitulo}>DETALLE DE MANO DE OBRA</Text>\n                    <Table\n                        data={props.fase.manoObra}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Empleado\n                            </TableCell>\n                            <TableCell>\n                                Costo\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idManoObra}/>\n                        <DataTableCell getContent={(r) => r.nombreEmpleado + \" \" + r.apellidoEmpleado}/>\n                        <DataTableCell getContent={(r) => r.costo}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total Mano Obra: {props.fase.costoManoObra}\n                    </Text>\n\n                </View> \n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportFase;","import React, { useState, useEffect, useRef} from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport Detalle from \"./Detalle\";\nimport * as ServiceMaterial from \"../../material/Service\";\nimport * as ServiceEmpleado from \"../../../user/empleado/Service\";\nimport ReportFase from './ReportFase';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { Dialog } from 'primereact/dialog';\n\n\nconst Fase = (props) => {\n    let formFase = {\n        idObra: props.obra.idObra,\n        nombre: \"\",\n        descripcion: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\",\n        costoMaterial: \"\",\n        costoManoObra: \"\",\n        costoTotal: \"\",\n        materiales: [],\n        manoObra: []\n    };\n\n    let formDetalleMaterial = {\n        idMaterial: \"\",\n        descripcion: \"\",\n        cantidad: \"\",\n        unidad: \"\",\n        precioTotal: \"\",\n        precio: \"\"\n    }\n\n    let formManoObra = {\n        idEmpleado: \"\",\n        empleado: \"\",\n        costo: \"\"\n    }\n\n    const [fases, setFases] = useState(null);\n    const [fase, setFase] = useState(formFase);\n    const [detalleMaterial, setDetalleMaterial] = useState(formDetalleMaterial);\n    const [manoObra, setManoObra] = useState(formManoObra);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [flagDetalle, setFlagDetalle] = useState(false);\n\n    const [empleados, setEmpleados] = useState([]);\n    const [materiales, setMateriales] = useState([]);\n\n    const [faseDialog, setFaseDialog] = useState(false);\n    const [deleteFaseDialog, setDeleteFaseDialog] = useState(false);\n  \n    useEffect(() => {\n        list();\n        listMateriales();\n        listEmpleados();\n        // eslint-disable-next-line\n    }, []);\n\n    const list = async()  => {\n        const aux = { idObra: props.obra.idObra}\n        let resp = await Service.listByObra(aux);\n        if (resp.valid) {\n            setFases(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMateriales = async()  => {\n        let resp = await ServiceMaterial.list();\n        if (resp.valid) {\n            setMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let aux = { idAreaNegocio: 4};\n        let resp = await ServiceEmpleado.listByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setFase(formFase);\n        setFlagDetalle(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"VOLVER\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={()=>{ props.setFlagObra(false);}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFaseDialog(true);\n                        setFase(rowData);\n                    }}     \n                />\n                <Button \n                    icon=\"pi pi-trash\" \n                    className=\"p-button-rounded p-button-danger mt-2\" \n                    onClick={() => confirmDeleteFase(rowData)} \n                />\n            </div>\n        );\n    }\n\n    const confirmDeleteFase = (fase) => {\n        setFase(fase);\n        setDeleteFaseDialog(true);\n    }\n\n    const hideDeleteFaseDialog = () => {\n        setDeleteFaseDialog(false);\n    }\n\n    const deleteFase = async () => {\n        let resp = await Service.deleteById(fase);\n        if ( resp.valid ) {\n            list();\n            setDeleteFaseDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const deleteFaseDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteFaseDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteFase} />\n        </>\n    );\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Fases</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const hideDialog = () => {\n        setFaseDialog(false);\n    }\n\n    return (\n        <>\n        {\n            !flagDetalle ?(\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n        \n                            <DataTable ref={dt} value={fases}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} fases\"\n                                globalFilter={globalFilter} emptyMessage=\"No fases found.\" header={header} responsiveLayout=\"scroll\">\n        \n                                <Column field=\"idFase\" header=\"ID\" sortable ></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable ></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" ></Column>\n                                <Column field=\"fechaInicio\" header=\"Fecha Inicio\" ></Column>\n                                <Column field=\"fechaFin\" header=\"Fecha Fin\" ></Column>\n                                <Column field=\"costoTotal\" header=\"Costo Total\" ></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n        \n                           \n        \n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n\n        {\n            flagDetalle ? (\n                <Detalle \n                    setFlagDetalle={setFlagDetalle}\n                    formFase={formFase}\n                    formDetalleMaterial={formDetalleMaterial}\n                    formManoObra={formManoObra}\n                    setFase={setFase}\n                    setDetalleMaterial={setDetalleMaterial}\n                    setManoObra={setManoObra}\n                    fase={fase}\n                    detalleMaterial={detalleMaterial}\n                    manoObra={manoObra}\n\n                    empleados={empleados}\n                    materiales={materiales}\n\n                    toast={toast}\n                    list={list}\n                />\n            ):null\n        }\n\n            <Dialog visible={deleteFaseDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteFaseDialogFooter} onHide={hideDeleteFaseDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea eliminar la fase No. <b>{fase.idFase}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={faseDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialog}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportFase \n                        fase={fase}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n        </>\n    )\n}\n\nexport default Fase;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoObra from \"../tipoObra/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport Fase from \"./fase/Fase\";\n\nconst Obra = () => {\n\n    let formObra = {\n        idTipoObra: \"\",\n        idCliente: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        costo: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\"\n    };\n\n    const [obras, setObras] = useState(null);\n    const [obraDialog, setObraDialog] = useState(false);\n    const [deleteObraDialog, setDeleteObraDialog] = useState(false);\n    const [obra, setObra] = useState(formObra);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tipoObras, setTipoObras] = useState([]);\n    const [clientes, setClientes] = useState([]);\n\n    const [flagObra, setFlagObra] = useState(false);\n    useEffect(() => {\n        list();\n        listTipoObras();\n        listClientes();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoObras = async()  => {\n        let resp = await ServiceTipoObra.list();\n        if (resp.valid) {\n            setTipoObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listClientes = async()  => {\n        let aux = {idNegocio: 6};\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setObra(formObra);\n        setSubmitted(false);\n        setObraDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setObraDialog(false);\n    }\n\n    const hideDeleteObraDialog = () => {\n        setDeleteObraDialog(false);\n    }\n\n    const submit = () => {\n        if (obra.nombre && obra.idTipoObra && obra.costo && obra.idCliente) {\n             if (obra.idObra) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(obra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(obra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editobra = (obra) => {\n        setObra({ ...obra });\n        setObraDialog(true);\n    }\n\n    const faseObra = (obra) => {\n        setObra({ ...obra });\n        setFlagObra(true);\n    }\n\n    const confirmDeleteobra = (obra) => {\n        setObra(obra);\n        setDeleteObraDialog(true);\n    }\n\n    const deleteobra = async () => {\n        let resp = await Service.deleteById(obra);\n        if ( resp.valid ) {\n            list();\n            setDeleteObraDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setObra({\n            ...obra,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idObra}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const clienteBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cliente</span>\n                {rowData.cliente}\n            </>\n        );\n    }\n\n    const tipoObraBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tipo obra</span>\n                {rowData.tipoObra}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const costoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Costo</span>\n                {rowData.costo}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editobra(rowData)} />\n                <Button icon=\"pi pi-sitemap\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => faseObra(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteobra(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Obras</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const obraDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={obra.idObra ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteObraDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteObraDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteobra} />\n        </>\n    );\n\n    return (\n        <>\n        {\n            !flagObra ? (\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                            <DataTable ref={dt} value={obras}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} obras\"\n                                globalFilter={globalFilter} emptyMessage=\"No obras found.\" header={header} responsiveLayout=\"scroll\">\n\n                                <Column field=\"idObra\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                                <Column field=\"cliente\" header=\"Cliente\" body={clienteBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"tipoObra\" header=\"Tipo Obra\" body={tipoObraBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column field=\"costo\" header=\"Costo\" body={costoBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n\n                            <Dialog visible={obraDialog} style={{ width: '1200px' }} header={obra.idObra ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={obraDialogFooter} onHide={hideDialog}>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Tipo obra*</label>\n                                        <Select \n                                            value={obra.idTipoObra} \n                                            className=\"w-full\"\n                                            id=\"idTipoObra\" \n                                            name=\"idTipoObra\" \n                                            autoFocus \n                                            onChange={onInputChange}>\n                                            {tipoObras.map((item, index) => (\n                                                <MenuItem value={item.idTipoObra} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !obra.idTipoObra && <small className=\"p-error\">Tipo obra es requerida.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Cliente*</label>\n                                        <Select \n                                            value={obra.idCliente} \n                                            className=\"w-full\"\n                                            id=\"idCliente\" \n                                            name=\"idCliente\" \n                                            autoFocus \n                                            onChange={onInputChange}>\n                                            {clientes.map((item, index) => (\n                                                <MenuItem value={item.idCliente} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !obra.idCliente && <small className=\"p-error\">Cliente es requerida.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre*</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={obra.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !obra.nombre })} \n                                        />\n                                        { submitted &&  !obra.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Costo</label>\n                                        <InputText \n                                            id=\"costo\" \n                                            name=\"costo\"\n                                            type=\"number\"\n                                            value={obra.costo} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !obra.costo })} \n                                        />\n                                        { submitted &&  !obra.costo && <small className=\"p-error\">costo es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">Fecha Inicio</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaInicio\"\n                                            name=\"fechaInicio\"\n                                            value={ obra.fechaInicio }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !obra.fechaInicio && <small className=\"p-error\">Fecha Inicio es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">Fecha Fin</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaFin\"\n                                            name=\"fechaFin\"\n                                            value={ obra.fechaFin }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !obra.fechaFin && <small className=\"p-error\">Fecha Fin es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label htmlFor=\"descripcion\">Descripción</label>\n                                    <InputTextarea \n                                        id=\"descripcion\" \n                                        name=\"descripcion\"\n                                        value={obra.descripcion} \n                                        onChange={onInputChange} \n                                        required \n                                        rows={3} \n                                        cols={20} \n                                    />\n                                </div>\n\n                            </Dialog>\n\n                            <Dialog visible={deleteObraDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteObraDialogFooter} onHide={hideDeleteObraDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {obra && <span>Desea eliminar este item: <b>{obra.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n\n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n        \n        {\n            flagObra ? (\n                <Fase \n                    obra={obra}\n                    setFlagObra={setFlagObra}\n                />\n            ):null\n        }\n\n        </>\n    )\n}\n\nexport default Obra;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMateriaPrima = () => {\n\n    let formTipoMateriaPrima = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMateriaPrimas, setTipoMateriaPrimas] = useState(null);\n    const [tipoMateriaPrimaDialog, setTipoMateriaPrimaDialog] = useState(false);\n    const [deletetipoMateriaPrimaDialog, setDeletetipoMateriaPrimaDialog] = useState(false);\n    const [tipoMateriaPrima, setTipoMateriaPrima] = useState(formTipoMateriaPrima);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMateriaPrima(formTipoMateriaPrima);\n        setSubmitted(false);\n        setTipoMateriaPrimaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMateriaPrimaDialog(false);\n    }\n\n    const hideDeletetipoMateriaPrimaDialog = () => {\n        setDeletetipoMateriaPrimaDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMateriaPrima.nombre) {\n             if (tipoMateriaPrima.idTipoMateriaPrima) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMateriaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMateriaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMateriaPrima = (tipoMateriaPrima) => {\n        setTipoMateriaPrima({ ...tipoMateriaPrima });\n        setTipoMateriaPrimaDialog(true);\n    }\n\n    const confirmDeletetipoMateriaPrima = (tipoMateriaPrima) => {\n        setTipoMateriaPrima(tipoMateriaPrima);\n        setDeletetipoMateriaPrimaDialog(true);\n    }\n\n    const deletetipoMateriaPrima = async () => {\n        let resp = await Service.deleteById(tipoMateriaPrima);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoMateriaPrimaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMateriaPrima({\n            ...tipoMateriaPrima,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMateriaPrima}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMateriaPrima(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMateriaPrima(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipos de Materia Prima</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMateriaPrima.idTipoMateriaPrima ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoMateriaPrimaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMateriaPrima} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMateriaPrimas}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMateriaPrimas\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMateriaPrimas found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMateriaPrima\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMateriaPrimaDialog} style={{ width: '450px' }} header={tipoMateriaPrima.idTipoMateriaPrima ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMateriaPrimaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMateriaPrima.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMateriaPrima.nombre })} \n                            />\n                            { submitted &&  !tipoMateriaPrima.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMateriaPrima.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoMateriaPrimaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoMateriaPrimaDialogFooter} onHide={hideDeletetipoMateriaPrimaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMateriaPrima && <span>Desea eliminar este item: <b>{tipoMateriaPrima.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMateriaPrima;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMaquinaria = () => {\n\n    let formTipoMaquinaria = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMaquinarias, setTipoMaquinarias] = useState(null);\n    const [tipoMaquinariaDialog, setTipoMaquinariaDialog] = useState(false);\n    const [deleteTipoMaquinariaDialog, setDeleteTipoMaquinariaDialog] = useState(false);\n    const [tipoMaquinaria, setTipoMaquinaria] = useState(formTipoMaquinaria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMaquinaria(formTipoMaquinaria);\n        setSubmitted(false);\n        setTipoMaquinariaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMaquinariaDialog(false);\n    }\n\n    const hideDeleteTipoMaquinariaDialog = () => {\n        setDeleteTipoMaquinariaDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMaquinaria.nombre) {\n             if (tipoMaquinaria.idTipoMaquinaria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMaquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMaquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMaquinaria = (tipoMaquinaria) => {\n        setTipoMaquinaria({ ...tipoMaquinaria });\n        setTipoMaquinariaDialog(true);\n    }\n\n    const confirmDeletetipoMaquinaria = (tipoMaquinaria) => {\n        setTipoMaquinaria(tipoMaquinaria);\n        setDeleteTipoMaquinariaDialog(true);\n    }\n\n    const deletetipoMaquinaria = async () => {\n        let resp = await Service.deleteById(tipoMaquinaria);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoMaquinariaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMaquinaria({\n            ...tipoMaquinaria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMaquinaria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMaquinaria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMaquinaria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Maquinarias</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMaquinariaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMaquinaria.idTipoMaquinaria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoMaquinariaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoMaquinariaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMaquinaria} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMaquinarias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMaquinarias\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMaquinarias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMaquinaria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMaquinariaDialog} style={{ width: '450px' }} header={tipoMaquinaria.idTipoMaquinaria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMaquinariaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMaquinaria.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMaquinaria.nombre })} \n                            />\n                            { submitted &&  !tipoMaquinaria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMaquinaria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoMaquinariaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoMaquinariaDialogFooter} onHide={hideDeleteTipoMaquinariaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMaquinaria && <span>Desea eliminar este item: <b>{tipoMaquinaria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMaquinaria;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as ServiceTipoMateriaPrima from '../tipoMateriaPrima/Service';\n\n\nconst MateriaPrima = () => {\n\n    let formMateriaPrima = {\n        idTipoMateriaPrima: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        fechaIngreso: \"\",\n        stock:\"\"\n    };\n\n    const [materiaPrimas, setMateriaPrimas] = useState(null);\n    const [materiaPrimaDialog, setMateriaPrimaDialog] = useState(false);\n    const [deleteMateriaPrimaDialog, setDeleteMateriaPrimaDialog] = useState(false);\n    const [materiaPrima, setMateriaPrima] = useState(formMateriaPrima);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tiposMateriasPrimas, setTiposMateriasPrimas] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMateriaPrima();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMateriaPrima = async () => {\n        let resp = await ServiceTipoMateriaPrima.list();\n        if (resp.valid) {\n            setTiposMateriasPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setMateriaPrima(formMateriaPrima);\n        setSubmitted(false);\n        setMateriaPrimaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMateriaPrimaDialog(false);\n    }\n\n    const hideDeleteMateriaPrimaDialog = () => {\n        setDeleteMateriaPrimaDialog(false);\n    }\n\n    const submit = () => {\n        if (materiaPrima.nombre) {\n             if (materiaPrima.idMateriaPrima) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(materiaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(materiaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmateriaPrima = (materiaPrima) => {\n        setMateriaPrima({ ...materiaPrima });\n        setMateriaPrimaDialog(true);\n    }\n\n    const confirmDeletemateriaPrima = (materiaPrima) => {\n        setMateriaPrima(materiaPrima);\n        setDeleteMateriaPrimaDialog(true);\n    }\n\n    const deletemateriaPrima = async () => {\n        let resp = await Service.deleteById(materiaPrima);\n        if ( resp.valid ) {\n            list();\n            setDeleteMateriaPrimaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMateriaPrima({\n            ...materiaPrima,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMateriaPrima}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmateriaPrima(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletemateriaPrima(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Materias Primas</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const materiaPrimaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={materiaPrima.idMateriaPrima ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMateriaPrimaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletemateriaPrima} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={materiaPrimas}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} materiaPrimas\"\n                        globalFilter={globalFilter} emptyMessage=\"No materiaPrimas found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMateriaPrima\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"tipoMateriaPrima\" header=\"Tipo Materia Prima\" sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaIngreso\" header=\"Fecha Ingreso\" sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={materiaPrimaDialog} style={{ width: '450px' }} header={materiaPrima.idMateriaPrima ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={materiaPrimaDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Tipo Materia Prima*</label>\n                            <Select \n                                value={materiaPrima.idTipoMateriaPrima} \n                                className=\"w-full\"\n                                id=\"idTipoMateriaPrima\" \n                                name=\"idTipoMateriaPrima\" \n                                onChange={onInputChange}\n                                autoFocus \n                            >\n                                {tiposMateriasPrimas.map((item, index) => (\n                                    <MenuItem value={item.idTipoMateriaPrima} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={materiaPrima.nombre} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-error': submitted && !materiaPrima.nombre })} \n                            />\n                            { submitted &&  !materiaPrima.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={materiaPrima.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Fecha Ingreso</label>\n                            <TextField\n                                type=\"date\"\n                                id=\"fechaIngreso\"\n                                name=\"fechaIngreso\"\n                                value={ materiaPrima.fechaIngreso }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Existencia</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"stock\"\n                                name=\"stock\"\n                                value={ materiaPrima.stock }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMateriaPrimaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMateriaPrimaDialogFooter} onHide={hideDeleteMateriaPrimaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {materiaPrima && <span>Desea eliminar este item: <b>{materiaPrima.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MateriaPrima;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select } from '@mui/material';\nimport * as ServiceTipoMaquinaria from '../tipoMaquinaria/Service';\n\n\nconst Maquinaria = () => {\n\n    let formMaquinaria = {\n        idTipoMaquinaria: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [maquinarias, setMaquinarias] = useState(null);\n    const [maquinariaDialog, setMaquinariaDialog] = useState(false);\n    const [deleteMaquinariaDialog, setDeleteMaquinariaDialog] = useState(false);\n    const [maquinaria, setMaquinaria] = useState(formMaquinaria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tiposMaquinarias, setTiposMaquinarias] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMaquinaria();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMaquinaria = async () => {\n        let resp = await ServiceTipoMaquinaria.list();\n        if (resp.valid) {\n            setTiposMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setMaquinaria(formMaquinaria);\n        setSubmitted(false);\n        setMaquinariaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMaquinariaDialog(false);\n    }\n\n    const hideDeleteMaquinariaDialog = () => {\n        setDeleteMaquinariaDialog(false);\n    }\n\n    const submit = () => {\n        if (maquinaria.nombre) {\n             if (maquinaria.idMaquinaria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(maquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(maquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmaquinaria = (maquinaria) => {\n        setMaquinaria({ ...maquinaria });\n        setMaquinariaDialog(true);\n    }\n\n    const confirmDeletemaquinaria = (maquinaria) => {\n        setMaquinaria(maquinaria);\n        setDeleteMaquinariaDialog(true);\n    }\n\n    const deletemaquinaria = async () => {\n        let resp = await Service.deleteById(maquinaria);\n        if ( resp.valid ) {\n            list();\n            setDeleteMaquinariaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMaquinaria({\n            ...maquinaria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMaquinaria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmaquinaria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletemaquinaria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Maquinarias</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const maquinariaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={maquinaria.idMaquinaria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMaquinariaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMaquinariaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletemaquinaria} />\n        </>\n    );\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    Cada vehiculo se encuentra monitoreado por GPS-inversiones\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={maquinarias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} maquinarias\"\n                        globalFilter={globalFilter} emptyMessage=\"No maquinarias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMaquinaria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"tipoMaquinaria\" header=\"Tipo maquinaria\" sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={maquinariaDialog} style={{ width: '450px' }} header={maquinaria.idMaquinaria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={maquinariaDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Tipo Maquinaria*</label>\n                            <Select \n                                value={maquinaria.idTipoMaquinaria} \n                                className=\"w-full\"\n                                id=\"idTipoMaquinaria\" \n                                name=\"idTipoMaquinaria\" \n                                onChange={onInputChange}\n                                autoFocus \n                            >\n                                {tiposMaquinarias.map((item, index) => (\n                                    <MenuItem value={item.idTipoMaquinaria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={maquinaria.nombre} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-error': submitted && !maquinaria.nombre })} \n                            />\n                            { submitted &&  !maquinaria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={maquinaria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMaquinariaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMaquinariaDialogFooter} onHide={hideDeleteMaquinariaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {maquinaria && <span>Desea eliminar este item: <b>{maquinaria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Maquinaria;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/proceso/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/proceso/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/proceso/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/proceso/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByObra(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/listByObra`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceMateriaPrima from \"../../materiaPrima/Service\";\nimport * as ServiceMaquinaria from \"../../maquinaria/Service\";\nimport * as ServiceEmpleado from \"../../../user/empleado/Service\";\n\nconst DetalleProceso = (props) => {\n    \n\n    let formDetalleProceso = {\n        idProceso: props.proceso.idProceso,\n        idMateriaPrima: \"\",\n        idMaquinaria: \"\",\n        idEmpleado: \"\",\n        descripcion: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\",\n        costo:\"\",\n    };\n\n    const [detalleProcesos, setDetalleProcesos] = useState(null);\n    const [materiaPrimas, setMateriaPrimas] = useState([]);\n    const [maquinarias, setMaquinarias] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n    const [detalleProcesoDialog, setDetalleProcesoDialog] = useState(false);\n    const [deleteDetalleProcesoDialog, setDeleteDetalleProcesoDialog] = useState(false);\n    const [detalleProceso, setDetalleProceso] = useState(formDetalleProceso);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n  \n    useEffect(() => {\n        list();\n        listMateriasPrimas();\n        listMaquinarias();\n        listEmpleados();\n        // eslint-disable-next-line\n    }, []);\n\n    const list = async()  => {\n        let aux = {idProceso:props.proceso.idProceso }\n        let resp = await Service.list(aux);\n        if (resp.valid) {\n            setDetalleProcesos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMateriasPrimas = async()  => {\n        let resp = await ServiceMateriaPrima.list();\n        if (resp.valid) {\n            setMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMaquinarias = async()  => {\n        let resp = await ServiceMaquinaria.list();\n        if (resp.valid) {\n            setMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let resp = await ServiceEmpleado.listPlantas();\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setDetalleProceso(formDetalleProceso);\n        setSubmitted(false);\n        setDetalleProcesoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setDetalleProcesoDialog(false);\n    }\n\n    const hideDeleteDetalleProcesoDialog = () => {\n        setDeleteDetalleProcesoDialog(false);\n    }\n\n    const submit = () => {\n        if (detalleProceso.idMaquinaria &&  detalleProceso.idMateriaPrima) {\n             if (detalleProceso.idDetalleProceso) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(detalleProceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(detalleProceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editdetalleProceso = (detalleProceso) => {\n        setDetalleProceso({ ...detalleProceso });\n        setDetalleProcesoDialog(true);\n    }\n\n    const confirmDeletedetalleProceso = (detalleProceso) => {\n        setDetalleProceso(detalleProceso);\n        setDeleteDetalleProcesoDialog(true);\n    }\n\n    const deletedetalleProceso = async () => {\n        let resp = await Service.deleteById(detalleProceso);\n        if ( resp.valid ) {\n            list();\n            setDeleteDetalleProcesoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n\n        if ( name ==='venta') {\n            setDetalleProceso({\n                ...detalleProceso,\n                [name]: !value,\n            });\n        } else {\n            setDetalleProceso({\n                ...detalleProceso,\n                [name]: value,\n            });\n        }\n       \n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagProceso(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idDetalleProceso}\n            </>\n        );\n    }\n\n    const materiaPrimaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Materia Prima</span>\n                {rowData.materiaPrima}\n            </>\n        );\n    }\n\n    const maquinariaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Maquinaria</span>\n                {rowData.maquinaria}\n            </>\n        );\n    }\n\n    const empleadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Empleado</span>\n                {rowData.empleado}\n            </>\n        );\n    }\n\n    const fechaInicioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Inicio</span>\n                {rowData.fechaInicio}\n            </>\n        );\n    }\n\n    const fechaFinBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Fin</span>\n                {rowData.fechaFin}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editdetalleProceso(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletedetalleProceso(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\"> Detalle</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const detalleProcesoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={detalleProceso.idDetalleProceso ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteDetalleProcesoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDetalleProcesoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletedetalleProceso} />\n        </>\n    );\n\n    \n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={detalleProcesos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} detalleProcesos\"\n                        globalFilter={globalFilter} emptyMessage=\"No detalleProcesos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idDetalleProceso\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={materiaPrimaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"categoria\" header=\"Categoria\" sortable body={maquinariaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={empleadoBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaInicio\" header=\"Fecha Inicio\" body={fechaInicioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaFin\" header=\"Fecha Fin\" body={fechaFinBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={detalleProcesoDialog} style={{ width: '600px' }} header={detalleProceso.idDetalleProceso ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={detalleProcesoDialogFooter} onHide={hideDialog}>\n                     \n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Materia Prima*</label>\n                            <Select \n                                value={detalleProceso.idMateriaPrima} \n                                className=\"w-full\"\n                                id=\"idMateriaPrima\" \n                                name=\"idMateriaPrima\" \n                                onChange={onInputChange}>\n                                {materiaPrimas.map((item, index) => (\n                                    <MenuItem value={item.idMateriaPrima} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idMateriaPrima && <small className=\"p-invalid\">Materia Prima es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Maquinaria*</label>\n                            <Select \n                                value={detalleProceso.idMaquinaria} \n                                className=\"w-full\"\n                                id=\"idMaquinaria\" \n                                name=\"idMaquinaria\" \n                                onChange={onInputChange}>\n                                {maquinarias.map((item, index) => (\n                                    <MenuItem value={item.idMaquinaria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idMaquinaria && <small className=\"p-invalid\">Maquinaria es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <Select \n                                value={detalleProceso.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChange}>\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idEmpleado && <small className=\"p-invalid\">Empleado es requerido.</small>}\n                        </div>\n\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Fecha Inicio</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaInicio\"\n                                    name=\"fechaInicio\"\n                                    value={ detalleProceso.fechaInicio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Fecha Fin</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaFin\"\n                                    name=\"fechaFin\"\n                                    value={ detalleProceso.fechaFin }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className='field'>\n                            <label htmlFor=\"price\">Costo</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"costo\"\n                                name=\"costo\"\n                                value={ detalleProceso.costo }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteDetalleProcesoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteDetalleProcesoDialogFooter} onHide={hideDeleteDetalleProcesoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            { <span>Desea eliminar el detalle. <b>{detalleProceso.idDetalleProceso}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DetalleProceso;","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportProceso = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:55, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>REPORTE DE OPERACIONES</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Listado de procesos que se encuentren activos </Text>\n                </View>\n                \n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.procesos}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Nombre\n                            </TableCell>\n                            <TableCell>\n                                Fecha Inicio\n                            </TableCell>\n                            <TableCell>\n                                Fecha Fin\n                            </TableCell>\n                            <TableCell>\n                                Descripcion\n                            </TableCell>\n                            <TableCell>\n                                Costo\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idProceso}/>\n                        <DataTableCell getContent={(r) => r.nombre}/>\n                        <DataTableCell getContent={(r) => r.fechaInicio}/>\n                        <DataTableCell getContent={(r) => r.fechaFin}/>\n                        <DataTableCell getContent={(r) => r.descripcion}/>\n                        <DataTableCell getContent={(r) => \"Q. \" + r.costo}/>\n                            \n                        </TableBody>\n                    </Table>\n     \n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportProceso;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport {  TextField } from '@mui/material';\nimport DetalleProceso from \"./detalle/DetalleProceso\";\nimport ReportProceso from './ReportProceso';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nconst Proceso = () => {\n\n    let formProceso = {\n        nombre: \"\",\n        descripcion: \"\",\n        costo: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\"\n    };\n\n    const [procesos, setProcesos] = useState(null);\n    const [procesoDialog, setProcesoDialog] = useState(false);\n    const [deleteProcesoDialog, setDeleteProcesoDialog] = useState(false);\n    const [proceso, setProceso] = useState(formProceso);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [flagproceso, setFlagProceso] = useState(false);\n\n    const [asignacionReportDialog, setasignacionReportDialog] = useState(false);\n\n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setProcesos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setProceso(formProceso);\n        setSubmitted(false);\n        setProcesoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProcesoDialog(false);\n    }\n\n    const hideDeleteProcesoDialog = () => {\n        setDeleteProcesoDialog(false);\n    }\n\n    const submit = () => {\n        if (proceso.nombre ) {\n             if (proceso.idProceso) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(proceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(proceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editproceso = (proceso) => {\n        setProceso({ ...proceso });\n        setProcesoDialog(true);\n    }\n\n    const Detalleproceso = (proceso) => {\n        setProceso({ ...proceso });\n        setFlagProceso(true);\n    }\n\n    const confirmDeleteproceso = (proceso) => {\n        setProceso(proceso);\n        setDeleteProcesoDialog(true);\n    }\n\n    const deleteproceso = async () => {\n        let resp = await Service.deleteById(proceso);\n        if ( resp.valid ) {\n            list();\n            setDeleteProcesoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setProceso({\n            ...proceso,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                 <Button label=\"REPORTE\" icon=\"pi pi-file-pdf\" className=\"p-button-info mr-2\" onClick={()=>{setasignacionReportDialog(true)}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idProceso}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const fechaInicioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Inicio</span>\n                {rowData.fechaInicio}\n            </>\n        );\n    }\n\n    const fechaFinBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Fin</span>\n                {rowData.fechaFin}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const costoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Costo</span>\n                {rowData.costo}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editproceso(rowData)} />\n                <Button icon=\"pi pi-sitemap\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => Detalleproceso(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteproceso(rowData)} />\n            </div>\n        );\n    }\n\n    const hideDialogReporte = () => {\n        setasignacionReportDialog(false);\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Procesos Activos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const procesoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={proceso.idProceso ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteProcesoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProcesoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteproceso} />\n        </>\n    );\n\n    return (\n        <>\n        {\n            !flagproceso ? (\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                            <DataTable ref={dt} value={procesos}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} procesos\"\n                                globalFilter={globalFilter} emptyMessage=\"No procesos found.\" header={header} responsiveLayout=\"scroll\">\n\n                                <Column field=\"idProceso\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                                <Column field=\"fechaInicio\" header=\"Fecha Inicio\" body={fechaInicioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"fechaFin\" header=\"Fecha Fin\" body={fechaFinBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column field=\"costo\" header=\"Costo\" body={costoBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n\n                            <Dialog visible={procesoDialog} style={{ width: '1200px' }} header={proceso.idProceso ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={procesoDialogFooter} onHide={hideDialog}>\n                               \n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre*</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={proceso.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !proceso.nombre })} \n                                        />\n                                        { submitted &&  !proceso.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Costo</label>\n                                        <InputText \n                                            id=\"costo\" \n                                            name=\"costo\"\n                                            type=\"number\"\n                                            value={proceso.costo} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !proceso.costo })} \n                                        />\n                                        { submitted &&  !proceso.costo && <small className=\"p-error\">Costo es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">Fecha Inicio</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaInicio\"\n                                            name=\"fechaInicio\"\n                                            value={ proceso.fechaInicio }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !proceso.fechaInicio && <small className=\"p-error\">Fecha Inicio es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">Fecha Fin</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaFin\"\n                                            name=\"fechaFin\"\n                                            value={ proceso.fechaFin }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !proceso.fechaFin && <small className=\"p-error\">Fecha Fin es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label htmlFor=\"descripcion\">Descripción</label>\n                                    <InputTextarea \n                                        id=\"descripcion\" \n                                        name=\"descripcion\"\n                                        value={proceso.descripcion} \n                                        onChange={onInputChange} \n                                        required \n                                        rows={3} \n                                        cols={20} \n                                    />\n                                </div>\n\n                            </Dialog>\n\n                            <Dialog visible={deleteProcesoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteProcesoDialogFooter} onHide={hideDeleteProcesoDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {proceso && <span>Desea eliminar este item: <b>{proceso.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n\n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n        \n        {\n            flagproceso ? (\n                <DetalleProceso \n                    proceso={proceso}\n                    setFlagProceso={setFlagProceso}\n                />\n            ):null\n        }\n\n        <Dialog visible={asignacionReportDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReporte}>\n            <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                <ReportProceso \n                    procesos={procesos}\n                />\n            </PDFViewer>\n        </Dialog>\n\n        </>\n    )\n}\n\nexport default Proceso;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nconst bcrypt = require(\"bcryptjs\");\nconst  Empleado = () => {\n\n    const [flagCrud, setFlagCrud] = useState(false);\n    const [idArea, setIdArea] = useState(\"\");\n\n    let formEmpleado = {\n        idAreaNegocio: idArea,\n        idRol: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        dpi: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        fechaNacimiento: \"\",\n        telefono: null,\n        fechaIngreso:\"\",\n        sueldo: \"\",\n        idSede: \"\",\n        password: \"\"\n    };\n\n    const [empleados, setEmpleados] = useState(null);\n    const [empleadosDialog, setEmpleadosDialog] = useState(false);\n    const [deleteEmpleadosDialog, setDeleteEmpleadosDialog] = useState(false);\n    const [empleado, setEmpleado] = useState(formEmpleado);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n    const [listRol, setListRol] = useState([]);\n    const [listSede, setListSede] = useState([]);\n    const [empresa, setEmpresa] = useState(\"\");\n  \n    useEffect(() => {\n        if (idArea) {\n            list();\n            getListRol();\n            getListSede();\n        }\n      // eslint-disable-next-line\n    }, [idArea]);\n    \n\n    const list = async()  => {\n        let aux = {idAreaNegocio: idArea};\n        let resp = await Service.listByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const getListRol = async()  => {\n        let aux = [];\n        let resp = await Service.listRol();\n        if (resp.valid) {\n\n            if (idArea === 1)  aux = resp.data.filter(item => item.idRol === 3 || item.idRol === 7);\n            if (idArea === 2 || idArea === 3)  aux = resp.data.filter(item => item.idRol === 4 || item.idRol === 8);\n            if (idArea === 4)  aux = resp.data.filter(item => item.idRol === 10 || item.idRol === 11);\n            if (idArea === 5 || idArea === 6)  aux = resp.data.filter(item => item.idRol === 5 || item.idRol === 9);\n            setListRol(aux);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const getListSede = async()  => {\n        let aux = [];\n        let resp = await Service.listSede();\n        if (resp.valid) {\n            if (idArea === 2 || idArea === 3 || idArea === 4)  aux = resp.data.filter(item => item.idSede === 8);\n            if (idArea === 1)  aux = resp.data.filter(item => item.idSede === 5 || item.idSede === 4 || item.idSede === 3 || item.idSede === 8);\n            if (idArea === 5)  aux = resp.data.filter(item => item.idSede === 1 || item.idSede === 2 || item.idSede === 3 || item.idSede === 4);\n            if (idArea === 6)  aux = resp.data.filter(item => item.idSede === 5 || item.idSede === 6 || item.idSede === 7);\n            setListSede(aux);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setEmpleado(formEmpleado);\n        setSubmitted(false);\n        setEmpleadosDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setEmpleadosDialog(false);\n    }\n\n    const hideDeleteEmpleadosDialog = () => {\n        setDeleteEmpleadosDialog(false);\n    }\n\n    const submit = () => {\n        \n        if (empleado.nombre && empleado.apellido && empleado.dpi && empleado.nit && empleado.direccion && empleado.email) {\n             if (empleado.idEmpleado) {\n                 edit();\n             } else {\n                criptPassword();\n             }\n        } \n    }\n\n    const criptPassword = async () => {\n       \n        let pasw = \"\";\n        empleado.password = bcrypt.hash(pasw, 10, function (err, data){\n            if (data) {\n                empleado.password = data\n                save(empleado);   \n            }\n        })\n           \n    }\n\n    const save = async (empleado) => {\n           \n        let resp = await Service.save(empleado);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(empleado);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editempleado = (empleado) => {\n        setEmpleado({ ...empleado });\n        setEmpleadosDialog(true);\n    }\n\n    const confirmDeleteempleado = (empleado) => {\n        setEmpleado(empleado);\n        setDeleteEmpleadosDialog(true);\n    }\n\n    const deleteempleado = async () => {\n        let resp = await Service.deleteById(empleado);\n        if ( resp.valid ) {\n            list();\n            setDeleteEmpleadosDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setEmpleado({\n            ...empleado,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { setFlagCrud(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editempleado(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteempleado(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">{empresa} - Empleados</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const empleadosDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={empleado.idEmpleado ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteEmpleadosDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteEmpleadosDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteempleado} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n\n            {\n                !flagCrud ? (\n                    <>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\" onClick={() => {setFlagCrud(true); setIdArea(1); setEmpresa(\"VENTAS\")    } } >\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/ventaProducto.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">VENTAS</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(2); setEmpresa(\"TRANSPORTE DE MATERIA PRIMA\")  }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/transporte1.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">TRANSPORTE DE MATERIA PRIMA</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(3); setEmpresa(\"TRANSPORTE DE PRODUCTOS\") }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/transporte2.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">TRANSPORTE DE PRODUCTOS</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\"onClick={() => {setFlagCrud(true); setIdArea(4); setEmpresa(\"CONSTRUCCIÓN\") }}>\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/construccion.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">CONSTRUCCIÓN</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(5); setEmpresa(\"PLANTAS DE EXTRACCIÓN\")}}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/planta1.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">PLANTAS DE EXTRACCIÓN</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(6); setEmpresa(\"PLANTAS DE PROCESO\"); }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/planta2.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">PLANTAS DE PROCESO</div>\n                            </div>\n                        </div>\n                    </div>\n                    </>\n                ): null\n            }\n            \n\n            {\n                flagCrud ? (\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n        \n                            <DataTable ref={dt} value={empleados}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} empleados\"\n                                globalFilter={globalFilter} emptyMessage=\"No empleados found.\" header={header} responsiveLayout=\"scroll\">\n        \n                                <Column field=\"idEmpleado\" header=\"ID\" sortable ></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable></Column>\n                                <Column field=\"nit\" header=\"Nit\" sortable></Column>\n                                <Column field=\"telefono\" header=\"Telefono\"  sortable></Column>\n                                <Column field=\"email\" header=\"Email\"  sortable ></Column>\n                                <Column field=\"rol\" header=\"Rol\"  sortable ></Column>\n                                <Column field=\"areaNegocio\" header=\"Area\"  sortable ></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n        \n                            <Dialog visible={empleadosDialog} style={{ width: '1000px' }} header={empleado.idEmpleado ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={empleadosDialogFooter} onHide={hideDialog}>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={empleado.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            autoFocus \n                                            className={classNames({ 'p-error': submitted && !empleado.nombre })} \n                                        />\n                                        { submitted &&  !empleado.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"apellido\">Apellido</label>\n                                        <InputText \n                                            id=\"apellido\" \n                                            name=\"apellido\"\n                                            value={empleado.apellido} \n                                            onChange={onInputChange} \n                                            required \n                                            className={classNames({ 'p-error': submitted && !empleado.apellido })} \n                                        />\n                                        { submitted &&  !empleado.apellido && <small className=\"p-error\">Apellido es requerido.</small>}\n                                \n                                    </div>\n                                </div>\n        \n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">DPI</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"dpi\"\n                                            name=\"dpi\"\n                                            value={ empleado.dpi }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !empleado.dpi && <small className=\"p-error\">DPI es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">NIT</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"nit\"\n                                            name=\"nit\"\n                                            value={ empleado.nit }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !empleado.nit && <small className=\"p-error\">Nit es requerido.</small>}\n                                    </div>\n                                </div>\n        \n                                <div className=\"field\">\n                                    <label htmlFor=\"nombre\">Dirección</label>\n                                    <InputText \n                                        id=\"direccion\" \n                                        name=\"direccion\"\n                                        value={empleado.direccion} \n                                        onChange={onInputChange} \n                                        required \n                                        className={classNames({ 'p-error': submitted && !empleado.direccion })} \n                                    />\n                                    { submitted &&  !empleado.direccion && <small className=\"p-error\">Direccion es requerido.</small>}\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Email</label>\n                                        <TextField\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            className=\"w-full\"\n                                            value={ empleado.email }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                        { submitted &&  !empleado.email && <small className=\"p-error\">Email es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Fecha Nacimiento</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaNacimiento\"\n                                            name=\"fechaNacimiento\"\n                                            className=\"w-full\"\n                                            value={ empleado.fechaNacimiento }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Telefono</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"telefono\"\n                                            name=\"telefono\"\n                                            className=\"w-full\"\n                                            value={ empleado.telefono }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Fecha Ingreso</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaIngreso\"\n                                            name=\"fechaIngreso\"\n                                            className=\"w-full\"\n                                            value={ empleado.fechaIngreso }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Rol*</label>\n                                        <Select \n                                            value={empleado.idRol} \n                                            className=\"w-full\"\n                                            id=\"idRol\" \n                                            name=\"idRol\" \n                                            onChange={onInputChange}\n                                        >\n                                            {listRol.map((item, index) => (\n                                                <MenuItem value={item.idRol} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !empleado.idRol && <small className=\"p-error\">Rol es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Sede*</label>\n                                        <Select \n                                            value={empleado.idSede} \n                                            className=\"w-full\"\n                                            id=\"idSede\" \n                                            name=\"idSede\" \n                                            onChange={onInputChange}\n                                        >\n                                            {listSede.map((item, index) => (\n                                                <MenuItem value={item.idSede} key={index}>\n                                                    {item.departamento}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !empleado.idSede && <small className=\"p-error\">Sede es requerida.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Sueldo</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"sueldo\"\n                                            name=\"sueldo\"\n                                            className=\"w-full\"\n                                            value={ empleado.sueldo }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"field col\">\n                                        {\n                                            empleado.idEmpleado ? null : (\n                                                <>\n                                                <label htmlFor=\"nombre\">Password</label>\n                                                <TextField\n                                                    type=\"password\"\n                                                    id=\"password\"\n                                                    name=\"password\"\n                                                    className=\"w-full\"\n                                                    value={ empleado.password }\n                                                    onChange={onInputChange}\n                                                    variant=\"outlined\"\n                                                    fullWidth\n                                                    required\n                                                />\n                                                 { submitted &&  !empleado.password && <small className=\"p-error\">Password es requerida.</small>}\n                                                </>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </Dialog>\n        \n                            <Dialog visible={deleteEmpleadosDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteEmpleadosDialogFooter} onHide={hideDeleteEmpleadosDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {empleado && <span>Desea eliminar este item: <b>{empleado.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n        \n                        </div>\n                    </div>\n\n                ): null\n            }\n           \n        </div>\n    )\n}\n\nexport default Empleado;","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { Route, useLocation } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { AppTopbar } from './AppTopbar';\nimport { AppFooter } from './AppFooter';\nimport { AppMenu } from './AppMenu';\nimport { AppConfig } from './AppConfig';\n\nimport Dashboard from './components/Dashboard';\n/* import ButtonDemo from './components/ButtonDemo';\nimport ChartDemo from './components/ChartDemo';\nimport Documentation from './components/Documentation';\nimport FileDemo from './components/FileDemo';\nimport FloatLabelDemo from './components/FloatLabelDemo';\nimport FormLayoutDemo from './components/FormLayoutDemo';\nimport InputDemo from './components/InputDemo';\nimport ListDemo from './components/ListDemo';\nimport MenuDemo from './components/MenuDemo';\nimport MessagesDemo from './components/MessagesDemo';\nimport MiscDemo from './components/MiscDemo';\nimport OverlayDemo from './components/OverlayDemo';\nimport MediaDemo from './components/MediaDemo';\nimport PanelDemo from './components/PanelDemo';\nimport TableDemo from './components/TableDemo';\nimport TreeDemo from './components/TreeDemo';\nimport InvalidStateDemo from './components/InvalidStateDemo';\nimport BlocksDemo from './components/BlocksDemo';\nimport IconsDemo from './components/IconsDemo';\n\nimport Crud from './pages/Crud';\nimport EmptyPage from './pages/EmptyPage';\nimport TimelineDemo from './pages/TimelineDemo'; */\n\nimport PrimeReact from 'primereact/api';\nimport { Tooltip } from 'primereact/tooltip';\n\nimport 'primereact/resources/primereact.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\nimport 'prismjs/themes/prism-coy.css';\nimport './assets/demo/flags/flags.css';\nimport './assets/demo/Demos.scss';\nimport './assets/layout/layout.scss';\nimport './App.scss';\n\nimport Categoria from './ventas/categoria/Categoria';\nimport Producto from './ventas/producto/Producto';\nimport Cliente from './user/clientes/Cliente';\nimport TipoAlquiler from './ventas/tipoAlquiler/TipoAlquiler';\nimport PrincipalVentas from './ventas/PrincipalVentas';\n\n\nimport TipoVehiculo from './transportes/tipoVehiculo/TipoVehiculo';\nimport Vehiculo from './transportes/vehiculo/Vehiculo';\nimport Viaje from './transportes/viaje/Viaje';\nimport ClienteTransporte from './transportes/clientes/Cliente'; \nimport Asignacion from './transportes/asignacion/Asignacion';\n\nimport TipoObra from './construccion/tipoObra/TipoObra';\nimport TipoMaterial from './construccion/tipoMaterial/TipoMaterial';\nimport Material from './construccion/material/Material';\nimport Obra from './construccion/obra/Obra';\n\nimport TipoMateriaPrima from './plantas/tipoMateriaPrima/TipoMateriaPrima';\nimport TipoMaquinaria from './plantas/tipoMaquinaria/TipoMaquinaria';\nimport MateriaPrima from './plantas/materiaPrima/MateriaPrima';\nimport Maquinaria from './plantas/maquinaria/Maquinaria';\nimport Proceso from './plantas/proceso/Proceso';\n\nimport Empleado from './user/empleado/Empleado';\n\nconst App = (props) => {\n    const [layoutMode, setLayoutMode] = useState('static');\n    const [layoutColorMode, setLayoutColorMode] = useState('light')\n    const [inputStyle, setInputStyle] = useState('outlined');\n    const [ripple, setRipple] = useState(true);\n    const [staticMenuInactive, setStaticMenuInactive] = useState(false);\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\n    const [mobileMenuActive, setMobileMenuActive] = useState(false);\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\n    const copyTooltipRef = useRef();\n    const location = useLocation();\n\n    PrimeReact.ripple = true;\n\n    let menuClick = false;\n    let mobileTopbarMenuClick = false;\n\n\n    useEffect(() => {\n        if (mobileMenuActive) {\n            addClass(document.body, \"body-overflow-hidden\");\n        } else {\n            removeClass(document.body, \"body-overflow-hidden\");\n        }\n    }, [mobileMenuActive]);\n\n    useEffect(() => {\n        copyTooltipRef && copyTooltipRef.current && copyTooltipRef.current.updateTargetEvents();\n    }, [location]);\n\n    const onInputStyleChange = (inputStyle) => {\n        setInputStyle(inputStyle);\n    }\n\n    const onRipple = (e) => {\n        PrimeReact.ripple = e.value;\n        setRipple(e.value)\n    }\n\n    const onLayoutModeChange = (mode) => {\n        setLayoutMode(mode)\n    }\n\n    const onColorModeChange = (mode) => {\n        setLayoutColorMode(mode)\n    }\n\n    const onWrapperClick = (event) => {\n        if (!menuClick) {\n            setOverlayMenuActive(false);\n            setMobileMenuActive(false);\n        }\n\n        if (!mobileTopbarMenuClick) {\n            setMobileTopbarMenuActive(false);\n        }\n\n        mobileTopbarMenuClick = false;\n        menuClick = false;\n    }\n\n    const onToggleMenuClick = (event) => {\n        menuClick = true;\n\n        if (isDesktop()) {\n            if (layoutMode === 'overlay') {\n                if (mobileMenuActive === true) {\n                    setOverlayMenuActive(true);\n                }\n\n                setOverlayMenuActive((prevState) => !prevState);\n                setMobileMenuActive(false);\n            }\n            else if (layoutMode === 'static') {\n                setStaticMenuInactive((prevState) => !prevState);\n            }\n        }\n        else {\n            setMobileMenuActive((prevState) => !prevState);\n        }\n\n        event.preventDefault();\n    }\n\n    const onSidebarClick = () => {\n        menuClick = true;\n    }\n\n    const onMobileTopbarMenuClick = (event) => {\n        mobileTopbarMenuClick = true;\n\n        setMobileTopbarMenuActive((prevState) => !prevState);\n        event.preventDefault();\n    }\n\n    const onMobileSubTopbarMenuClick = (event) => {\n        mobileTopbarMenuClick = true;\n\n        event.preventDefault();\n    }\n\n    const onMenuItemClick = (event) => {\n        if (!event.item.items) {\n            setOverlayMenuActive(false);\n            setMobileMenuActive(false);\n        }\n    }\n    const isDesktop = () => {\n        return window.innerWidth >= 992;\n    }\n\n    const menu = [\n        {\n            label: 'Inicio',\n            items: [{\n                label: 'Principal', icon: 'pi pi-fw pi-home', to: '/', },\n                {label: 'Empleados', icon: 'pi pi-fw pi-users', to: '/empleado'},\n            ]\n        },\n        {\n            label: 'MODULOS', icon: 'pi pi-fw pi-search',\n            items: [\n                {\n                    label: 'VENTAS', icon: 'pi pi-fw pi-shopping-cart',\n                    items: [\n                        {label: 'Principal', icon: 'pi pi-fw pi-tags', to: '/principalVenta'},\n                        {label: 'Categorias', icon: 'pi pi-fw pi-sitemap' , to: '/categoria' },\n                        {label: 'Productos', icon: 'pi pi-fw pi-table', to: '/producto'},\n                        {label: 'Tipo Alquiler', icon: 'pi pi-fw pi-th-large', to: '/tipoAlquiler'},\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/cliente/ventas'},\n                    ]\n                },\n                {\n                    label: 'TRASNPORTE', icon: 'pi pi-fw pi-car',\n                    items: [\n                        {label: 'Asignaciones', icon: 'pi pi-fw pi-tag', to: '/asignacion'},\n                        {label: 'Viajes', icon: 'pi pi-fw pi-send', to: '/viaje'},\n                        {label: 'Vehiculo', icon: 'pi pi-fw pi-car', to: '/vehiculo'},\n                        {label: 'Tipo Vehiculo', icon: 'pi pi-fw pi-clone', to: '/tipoVehiculo'},\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/clienteTransporte'}\n                    ]\n                },\n                {\n                    label: 'CONSTRUCCION', icon: 'pi pi-fw pi-building',\n                    items: [\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/cliente/construccion'},\n                        {label: 'Obras', icon: 'pi pi-fw pi-building', to: '/obra'},\n                        {label: 'Materiales', icon: 'pi pi-fw pi-briefcase', to: '/material'},\n                        {label: 'Tipo Obras', icon: 'pi pi-fw pi-box', to: '/tipoObra'},\n                        {label: 'Tipo Materiales', icon: 'pi pi-fw pi-sitemap', to: '/tipoMaterial'},\n                    ]\n                },\n                \n                {\n                    label: 'PLANTAS', icon: 'pi pi-fw pi-th-large',\n                    items: [\n                        {label: 'Procesos', icon: 'pi pi-fw pi-box', to: '/proceso'},\n                        {label: 'Materias Primas', icon: 'pi pi-fw pi-building', to: '/materiaPrima'},\n                        {label: 'Tipo Materia Prima', icon: 'pi pi-fw pi-bookmark', to: '/tipoMateriaPrima'},\n                        {label: 'Maquinaria', icon: 'pi pi-fw pi-car', to: '/maquinaria'},\n                        {label: 'Tipo Maquinaria', icon: 'pi pi-fw pi-car', to: '/tipoMaquinaria'},\n                    ]\n                },\n            ]\n        },\n        /* {\n            label: 'UI Components', icon: 'pi pi-fw pi-sitemap',\n            items: [\n                { label: 'Form Layout', icon: 'pi pi-fw pi-id-card', to: '/formlayout' },\n                { label: 'Input', icon: 'pi pi-fw pi-check-square', to: '/input' },\n                { label: \"Float Label\", icon: \"pi pi-fw pi-bookmark\", to: \"/floatlabel\" },\n                { label: \"Invalid State\", icon: \"pi pi-fw pi-exclamation-circle\", to: \"invalidstate\" },\n                { label: 'Button', icon: 'pi pi-fw pi-mobile', to: '/button' },\n                { label: 'Table', icon: 'pi pi-fw pi-table', to: '/table' },\n                { label: 'List', icon: 'pi pi-fw pi-list', to: '/list' },\n                { label: 'Tree', icon: 'pi pi-fw pi-share-alt', to: '/tree' },\n                { label: 'Panel', icon: 'pi pi-fw pi-tablet', to: '/panel' },\n                { label: 'Overlay', icon: 'pi pi-fw pi-clone', to: '/overlay' },\n                { label: \"Media\", icon: \"pi pi-fw pi-image\", to: \"/media\" },\n                { label: 'Menu', icon: 'pi pi-fw pi-bars', to: '/menu' },\n                { label: 'Message', icon: 'pi pi-fw pi-comment', to: '/messages' },\n                { label: 'File', icon: 'pi pi-fw pi-file', to: '/file' },\n                { label: 'Chart', icon: 'pi pi-fw pi-chart-bar', to: '/chart' },\n                { label: 'Misc', icon: 'pi pi-fw pi-circle-off', to: '/misc' },\n            ]\n        },\n        {\n            label: 'UI Blocks',\n            items: [\n                { label: 'Free Blocks', icon: 'pi pi-fw pi-eye', to: '/blocks', badge: \"NEW\" },\n                { label: 'All Blocks', icon: 'pi pi-fw pi-globe', url: 'https://www.primefaces.org/primeblocks-react' }\n            ]\n        },\n        {\n            label: 'Icons',\n            items: [\n                { label: 'PrimeIcons', icon: 'pi pi-fw pi-prime', to: '/icons' }\n            ]\n        },\n        {\n            label: 'Pages', icon: 'pi pi-fw pi-clone',\n            items: [\n                { label: 'Crud', icon: 'pi pi-fw pi-user-edit', to: '/crud' },\n                { label: 'Timeline', icon: 'pi pi-fw pi-calendar', to: '/timeline' },\n                { label: 'Empty', icon: 'pi pi-fw pi-circle-off', to: '/empty' }\n            ]\n        }, */\n        /* {\n            label: 'MENU DESPLEGABLE', icon: 'pi pi-fw pi-search',\n            items: [\n                {\n                    label: 'VENTAS', icon: 'pi pi-fw pi-bookmark',\n                    items: [\n                        {\n                            label: 'VENTAS.1', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                { label: 'VENTAS.1.1', icon: 'pi pi-fw pi-bookmark' },\n                                { label: 'VENTAS.1.2', icon: 'pi pi-fw pi-bookmark' },\n                                { label: 'VENTAS.1.3', icon: 'pi pi-fw pi-bookmark' },\n                            ]\n                        },\n                        {\n                            label: 'VENTAS.2', icon: 'pi pi-fw pi-bookmark',\n                            items: [\n                                { label: 'VENTAS.2.1', icon: 'pi pi-fw pi-bookmark' },\n                                { label: 'VENTAS.2.2', icon: 'pi pi-fw pi-bookmark' }\n                            ]\n                        },\n                    ]\n                }\n                \n            ]\n        }, */\n       /*  {\n            label: 'Get Started',\n            items: [\n                { label: 'Documentation', icon: 'pi pi-fw pi-question', command: () => { window.location = \"#/documentation\" } },\n                { label: 'View Source', icon: 'pi pi-fw pi-search', command: () => { window.location = \"https://github.com/primefaces/sakai-react\" } }\n            ]\n        } */\n    ];\n\n    const addClass = (element, className) => {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    }\n\n    const removeClass = (element, className) => {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n\n    const wrapperClass = classNames('layout-wrapper', {\n        'layout-overlay': layoutMode === 'overlay',\n        'layout-static': layoutMode === 'static',\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\n        'layout-mobile-sidebar-active': mobileMenuActive,\n        'p-input-filled': inputStyle === 'filled',\n        'p-ripple-disabled': ripple === false,\n        'layout-theme-light': layoutColorMode === 'light'\n    });\n\n    return (\n        <div className={wrapperClass} onClick={onWrapperClick}>\n            <Tooltip ref={copyTooltipRef} target=\".block-action-copy\" position=\"bottom\" content=\"Copied to clipboard\" event=\"focus\" />\n\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\n                mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick} setAutenticado={props.setAutenticado}  />\n\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\n                <AppMenu model={menu} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\n            </div>\n\n            <div className=\"layout-main-container\">\n                <div className=\"layout-main\">\n                    <Route path=\"/\"  exact render={() => <Dashboard colorMode={layoutColorMode} location={location} />} />\n\n\n\n                    <Route path=\"/cliente/ventas\"  render={() => <Cliente idNegocio={3} />}/>\n                    <Route path=\"/cliente/construccion\"  render={() => <Cliente idNegocio={6} />}/>\n                    <Route path=\"/categoria\" component={Categoria} />\n                    <Route path=\"/producto\" component={Producto} />\n                    <Route path=\"/tipoAlquiler\" component={TipoAlquiler} />\n                    <Route path=\"/principalVenta\" component={PrincipalVentas} />\n\n                    <Route path=\"/tipoVehiculo\" component={TipoVehiculo}/>\n                    <Route path=\"/vehiculo\" component={Vehiculo}/>\n                    <Route path=\"/viaje\" component={Viaje}/>\n                    <Route path=\"/clienteTransporte\" component={ClienteTransporte}/>\n                    <Route path=\"/asignacion\" component={Asignacion}/>\n\n                    <Route path=\"/tipoObra\" component={TipoObra}/>\n                    <Route path=\"/tipoMaterial\" component={TipoMaterial}/>\n                    <Route path=\"/material\" component={Material}/>\n                    <Route path=\"/obra\" component={Obra}/>\n\n\n                    <Route path=\"/tipoMaquinaria\" component={TipoMaquinaria}/>\n                    <Route path=\"/tipoMateriaPrima\" component={TipoMateriaPrima}/>\n                    <Route path=\"/materiaPrima\" component={MateriaPrima}/>\n                    <Route path=\"/maquinaria\" component={Maquinaria}/>\n                    <Route path=\"/proceso\" component={Proceso}/>\n\n\n                    <Route path=\"/empleado\" component={Empleado}/>\n\n\n                  {/*   <Route path=\"/formlayout\" component={FormLayoutDemo} />\n                    <Route path=\"/input\" component={InputDemo} />\n                    <Route path=\"/floatlabel\" component={FloatLabelDemo} />\n                    <Route path=\"/invalidstate\" component={InvalidStateDemo} />\n                    <Route path=\"/button\" component={ButtonDemo} />\n                    <Route path=\"/table\" component={TableDemo} />\n                    <Route path=\"/list\" component={ListDemo} />\n                    <Route path=\"/tree\" component={TreeDemo} />\n                    <Route path=\"/panel\" component={PanelDemo} />\n                    <Route path=\"/overlay\" component={OverlayDemo} />\n                    <Route path=\"/media\" component={MediaDemo} />\n                    <Route path=\"/menu\" component={MenuDemo} />\n                    <Route path=\"/messages\" component={MessagesDemo} />\n                    <Route path=\"/blocks\" component={BlocksDemo} />\n                    <Route path=\"/icons\" component={IconsDemo} />\n                    <Route path=\"/file\" component={FileDemo} />\n                    <Route path=\"/chart\" render={() => <ChartDemo colorMode={layoutColorMode} location={location} />} />\n                    <Route path=\"/misc\" component={MiscDemo} />\n                    <Route path=\"/timeline\" component={TimelineDemo} />\n                    <Route path=\"/crud\" component={Crud} />\n                    <Route path=\"/empty\" component={EmptyPage} />\n                    <Route path=\"/documentation\" component={Documentation} /> */}\n                </div>\n\n                <AppFooter layoutColorMode={layoutColorMode} />\n            </div>\n\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\n                layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange}  />\n\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\n                <div className=\"layout-mask p-component-overlay\"></div>\n            </CSSTransition>\n\n        </div>\n    );\n\n}\n\nexport default App;\n","import \"./Styles/login.css\";\nimport React, {useState, useRef} from 'react';\nimport Img from './img/result.svg';\nimport { TextField } from '@mui/material';\nimport { Toast } from 'primereact/toast';\n\n\nconst Login = (props) => {\n  const toast = useRef(null);\n  const [loginForm, setLoginForm] = useState({\n    user: \"\",\n    pass: \"\"\n  });\n\n  const handleLogin = () => {\n    if ( loginForm.user && loginForm.pass) {\n      if (loginForm.user === 'lucio@gmail.com' && loginForm.pass === '1234') {\n        props.setAutenticado(true)\n      } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: \"Credenciales incorrectas\", life: 3000 });\n      }\n      \n    } else {\n      toast.current.show({ severity: 'info', summary: 'Error', detail: \"Ingrese las credenciales\", life: 3000 });\n    }\n  }\n\n  const onInputChange = (e) => {\n    const { value, name } = e.target;\n    setLoginForm({\n        ...loginForm,\n        [name]: value,\n    });\n}\n\n\n    return (\n    <div className=\"body\">\n      <Toast ref={toast} />\n        <div className=\"left-login\">\n          <img src={Img} alt=\"Pessoas olhando gráficos\" className=\"chart\" />\n  \n        </div>\n  \n        <div className=\"right-login\">\n          <div className=\"card\">\n           \n            <h1>LOGIN</h1>\n              <div className=\"card\">\n                <div className=\"field\">\n                     <label htmlFor=\"price\">Usuario</label>\n                    <TextField\n                        type=\"email\"\n                        id=\"user\"\n                        name=\"user\"\n                        value={ loginForm.user }\n                        onChange={onInputChange}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                </div>\n  \n  \n                <div className=\"field\">\n                    <label htmlFor=\"price\">Password</label>\n                    <TextField\n                        type=\"password\"\n                        id=\"pass\"\n                        name=\"pass\"\n                        value={ loginForm.pass }\n                        onChange={onInputChange}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                </div>\n  \n                <button \n                    className=\"button\" \n                    type=\"submit\"\n                    onClick={handleLogin }\n                >\n                  INGRESAR\n                </button>\n              </div>\n          </div>\n          \n        </div>\n      </div>\n    )\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport App from './App';\nimport Login from './login/Login';\n\n\n\n\nconst Principal = () => {\n\n    const [autenticado, setAutenticado] = useState(false);\n\n    return (\n        <>\n        {\n            autenticado ? (\n                <App\n                    setAutenticado={setAutenticado}\n                />\n            ): (\n                <Login\n                    setAutenticado={setAutenticado}\n                />\n            )\n        }\n       \n        </>\n    )\n}\n\nexport default Principal;","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop';\nimport Principal from './Principal';\n\nReactDOM.render(\n    <HashRouter>\n        <ScrollToTop>\n            <Principal></Principal>\n        </ScrollToTop>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}