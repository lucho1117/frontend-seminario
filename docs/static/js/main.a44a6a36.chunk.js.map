{"version":3,"sources":["login/img/result.svg","ScrollToTop.js","AppTopbar.js","AppFooter.js","AppMenu.js","AppConfig.js","components/ServiceGlobal.js","components/Dashboard.js","ventas/categoria/Service.js","ventas/categoria/Categoria.js","ventas/producto/Service.js","user/proveedores/Service.js","ventas/producto/Producto.js","user/clientes/Service.js","user/clientes/Cliente.js","ventas/tipoAlquiler/Service.js","ventas/tipoAlquiler/TipoAlquiler.js","ventas/venta/Service.js","ventas/venta/Factura.js","user/empleado/Service.js","ventas/venta/ReportFactura.js","ventas/venta/Venta.js","ventas/alquiler/Service.js","ventas/alquiler/ReportAlquiler.js","ventas/alquiler/Alquiler.js","ventas/PrincipalVentas.js","transportes/tipoVehiculo/Service.js","transportes/tipoVehiculo/TipoVehiculo.js","transportes/vehiculo/Service.js","transportes/vehiculo/Vehiculo.js","transportes/viaje/Service.js","transportes/cargamento/Service.js","transportes/viaje/Viaje.js","transportes/clientes/Service.js","transportes/clientes/Cliente.js","transportes/asignacion/Service.js","transportes/asignacion/ReportAsignacion.js","transportes/asignacion/Asignacion.js","construccion/tipoObra/Service.js","construccion/tipoObra/TipoObra.js","construccion/tipoMaterial/Service.js","construccion/tipoMaterial/TipoMaterial.js","construccion/material/Service.js","construccion/material/Material.js","construccion/obra/Service.js","construccion/obra/fase/Service.js","construccion/obra/fase/Detalle.js","construccion/obra/fase/ReportFase.js","construccion/obra/fase/Fase.js","construccion/obra/Obra.js","plantas/tipoMateriaPrima/Service.js","plantas/tipoMateriaPrima/TipoMateriaPrima.js","plantas/tipoMaquinaria/Service.js","plantas/tipoMaquinaria/TipoMaquinaria.js","plantas/materiaPrima/Service.js","plantas/materiaPrima/MateriaPrima.js","plantas/maquinaria/Service.js","plantas/maquinaria/Maquinaria.js","plantas/proceso/Service.js","plantas/proceso/detalle/Service.js","plantas/proceso/detalle/DetalleProceso.js","plantas/proceso/ReportProceso.js","plantas/proceso/Proceso.js","user/empleado/Empleado.js","App.js","login/Login.js","Principal.js","index.js"],"names":["module","exports","withRouter","props","location","useLocation","useEffect","window","scrollTo","children","AppTopbar","className","to","src","layoutColorMode","alt","type","onClick","onToggleMenuClick","onMobileTopbarMenuClick","classNames","mobileTopbarMenuActive","setAutenticado","AppFooter","AppSubmenu","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","onKeyDown","code","target","click","renderLink","i","content","submenuIcon","items","badge","value","Fragment","icon","label","renderLinkContent","aria-label","role","activeClassName","e","exact","tabIndex","href","url","map","active","styleClass","badgeStyleClass","root","key","CSSTransition","timeout","enter","exit","in","unmountOnExit","AppMenu","model","AppConfig","setActive","scale","theme","config","useRef","outsideClickListener","unbindOutsideClickListener","useCallback","current","document","removeEventListener","hideConfigurator","bindOutsideClickListener","isOutsideClicked","addEventListener","isSameNode","contains","documentElement","style","fontSize","configClassName","replaceLink","linkElement","callback","isIE","setAttribute","id","getAttribute","cloneLinkElement","cloneNode","parentNode","insertBefore","nextSibling","remove","themeElement","getElementById","test","navigator","userAgent","ref","URL","process","conteoEmpleados","a","axios","get","respuesta","data","productosMasVendidos","productosMasAlquilados","Dashboard","setConteoEmpleados","getConteoEmpleados","ServiceGlobal","resp","valid","borderRadius","background","numeroEmpleados","width","height","area","list","obj","post","save","update","deleteById","Categoria","formCategoria","nombre","descripcion","categorias","setCategorias","categoriaDialog","setCategoriaDialog","deleteCategoriaDialog","setDeleteCategoriaDialog","categoria","setCategoria","submitted","setSubmitted","globalFilter","setGlobalFilter","toast","dt","Service","show","severity","summary","detail","msg","life","openNew","hideDialog","hideDeleteCategoriaDialog","edit","deletecategoria","onInputChange","name","header","onInput","placeholder","categoriaDialogFooter","idCategoria","deleteCategoriaDialogFooter","right","dataKey","paginator","rows","rowsPerPageOptions","paginatorTemplate","currentPageReportTemplate","emptyMessage","responsiveLayout","field","sortable","body","rowData","headerStyle","minWidth","editcategoria","confirmDeletecategoria","visible","modal","footer","onHide","htmlFor","onChange","required","autoFocus","cols","Producto","formProducto","idProveedor","precio","stock","fechaIngreso","venta","productos","setProductos","proveedores","setProveedores","productoDialog","setProductoDialog","deleteProductoDialog","setDeleteProductoDialog","producto","setProducto","listCategorias","listProveedores","ServiceCategoria","ServiceProveedor","hideDeleteProductoDialog","deleteproducto","formatCurrency","toLocaleString","currency","productoDialogFooter","idProducto","deleteProductoDialogFooter","editProducto","confirmDeleteproducto","Select","MenuItem","TextField","variant","fullWidth","inputId","checked","listByNegocio","Cliente","formCliente","idNegocio","apellido","dpi","nit","direccion","email","telefono","clientes","setClientes","clienteDialog","setClienteDialog","deleteClienteDialog","setDeleteClienteDialog","cliente","setCliente","aux","hideDeleteClienteDialog","deleteCliente","clienteDialogFooter","idCliente","deleteClienteDialogFooter","editCliente","confirmDeleteCliente","TipoAlquiler","formTipoAlquiler","tasaAlquiler","tipoAlquileres","setTipoAlquileres","tipoAlquilerDialog","setTipoAlquilerDialog","deleteTipoAlquilerDialog","setDeleteTipoAlquilerDialog","tipoAlquiler","setTipoAlquiler","hideDeleteTipoAlquilerDialog","deleteTipoAlquiler","tipoAlquilerDialogFooter","idTipoAlquiler","deleteTipoAlquilerDialogFooter","editTipoAlquiler","confirmDeleteTipoAlquiler","listTipoPago","Factura","submittedDetalle","setSubmittedDetalle","setFormDetalle","formDetalle","saveFactura","formFactura","listFacturas","back","setFormFactura","onInputChangeDetalle","cantidad","total","deleteDetalle","detalle","idFactura","splice","conteoTotal","acumulado","forEach","clearDetalle","factura","setFlagFactura","idTipoPago","tipoPago","idEmpleado","empleados","fecha","scrollable","scrollHeight","scrollDirection","flexGrow","flexBasis","rowIndex","frozen","filter","length","push","listByRolByArea","listByArea","listRol","listSede","listPlantas","styles","StyleSheet","create","section","marginLeft","padding","marginTop","table","ReportFactura","size","display","flexDirection","justifyContent","alignItems","backgroundColor","color","moment","format","empleado","textAlign","weighting","getContent","r","idDetalleVenta","fontStyle","Venta","flagFactura","facturas","setFacturas","setEmpleados","setTipoPago","expandedRows","setExpandedRows","facturaDialog","setFacturaDialog","reporteFactura","setReporteFactura","deleteFacturaDialog","setDeleteFacturaDialog","facturaDelete","setFacturaDelete","listClientes","listEmpleados","listProductos","alquiler","ServiceCliente","idRol","idAreaNegocio","ServiceEmpleado","ServiceProducto","confirmDeleteFactura","hideDeleteFacturaDialog","deleteFacturaDialogFooter","setFlagVenta","onRowToggle","rowExpansionTemplate","expander","ReportAlquiler","nombreCliente","fechaProximaFacturacion","nombreEmpleado","Alquiler","formAlquiler","totalDetalle","fechaProxima","setalquiler","alquileres","setAlquileres","alquilerDialog","setAlquilerDialog","deleteAlquilerDialog","setDeleteAlquilerDialog","tipo","setTipo","listTipoAlquiler","sumarDias","Date","ServiceTipoAlquiler","hideDeleteAlquilerDialog","deletealquiler","alquilerDialogFooter","idalquiler","deleteAlquilerDialogFooter","dias","setDate","getDate","setFlagAlquiler","confirmDeletealquiler","PrincipalVentas","flagVenta","flagAlquiler","titulos","setTitulos","setTotal","titulosAlquiler","setTitulosAlquiler","totalAlquiler","setTotalAlquiler","pieData","labels","datasets","pieDataAlquiler","totales","TipoVehiculo","formTipoVehiculo","ejes","toneladas","tipoVehiculos","setTipoVehiculos","tipoVehiculoDialog","setTipoVehiculoDialog","deleteTipoVehiculoDialog","setDeleteTipoVehiculoDialog","tipoVehiculo","setTipoVehiculo","hideDeleteTipoVehiculoDialog","deletetipoVehiculo","tipoVehiculoDialogFooter","idTipoVehiculo","deleteTipoVehiculoDialogFooter","edittipoVehiculo","confirmDeletetipoVehiculo","Vehiculo","formVehiculo","placa","marca","modelo","vehiculos","setVehiculos","vehiculoDialog","setVehiculoDialog","deleteVehiculoDialog","setDeleteVehiculoDialog","vehiculo","setVehiculo","listTipoVehiculos","ServiceTipoVehiculo","hideDeleteVehiculoDialog","deleteVehiculo","vehiculoDialogFooter","idVehiculo","deleteVehiculoDialogFooter","left","disponible","editVehiculo","confirmDeleteVehiculo","Viaje","formViaje","idCargamento","origen","destino","fechaInicio","fechaFin","kilometros","viajes","setViajes","cargamentos","setCargamentos","viajeDialog","setViajeDialog","deleteViajeDialog","setDeleteViajeDialog","viaje","setViaje","listCargamento","listCliente","ServiceCargamento","hideDeleteViajeDialog","deleteViaje","viajeDialogFooter","idViaje","deleteViajeDialogFooter","cargamento","estado","editViaje","confirmDeleteViaje","listTrasnporte","ClienteTransporte","idPrimero","idSegundo","empezarRuta","terminarRuta","ReportAsignacion","asignaciones","idAsignacion","Asignacion","formAsignacion","setAsignaciones","asignacionDialog","setAsignacionDialog","deleteAsigncionDialog","setDeleteAsigncionDialog","asignacion","setAsignacion","asignacionReportDialog","setasignacionReportDialog","empezarDialog","setEmpezarDialog","terminarDialog","setTerminarDialog","listViajes","listVehiculos","ServiceViaje","capacidad","ServiceVehiculo","idArea","hideDeleteAsigncionDialog","deleteasignacion","empezarAsignacion","terminarAsignacion","hideEmpezarDialog","hideTerminarDialog","asignacionDialogFooter","deleteAsigncionDialogFooter","empezarRutaDialogFooter","terminarRutaDialogFooter","confirmFinalizarAsignacion","confirmEmpezarAsignacion","confirmDeleteasignacion","TipoObra","formTipoObra","tipoObras","setTipoObras","tipoObraDialog","setTipoObraDialog","deletetipoTipoObraDialog","setDeletetipoTipoObraDialog","tipoObra","setTipoObra","hideDeletetipoTipoObraDialog","deletetipoObra","tipoObraDialogFooter","idTipoObra","deletetipoTipoObraDialogFooter","edittipoObra","confirmDeletetipoObra","TipoMaterial","formTipoMaterial","tipoMateriales","setTipoMateriales","tipoMaterialDialog","setTipoMaterialDialog","deletetipoTipoMaterialDialog","setDeletetipoTipoMaterialDialog","tipoMaterial","setTipoMaterial","hideDeletetipoTipoMaterialDialog","deletetipoMaterial","tipoMaterialDialogFooter","idTipoMaterial","deletetipoTipoMaterialDialogFooter","edittipoMaterial","confirmDeletetipoMaterial","Material","formMaterial","materiales","setMateriales","materialDialog","setMaterialDialog","deleteMaterialDialog","setDeleteMaterialDialog","material","setMaterial","listTipoMateriales","ServiceTipoMaterial","hideDeleteMaterialDialog","deletematerial","materialDialogFooter","idMaterial","deleteMaterialDialogFooter","editmaterial","confirmDeletematerial","listByObra","Detalle","submittedMaterial","setSubmittedMaterial","submittedManoObra","setSubmittedManoObra","manoObra","setManoObra","setDetalleMaterial","detalleMaterial","clearMaterial","formDetalleMaterial","clearManoObra","formManoObra","setFase","formFase","setFlagDetalle","fase","onInputChangeMaterial","precioTotal","onInputChangeManoObra","deleteMaterial","conteoTotalMaterial","deleteManoObra","conteoTotalManoObra","costoMaterial","costoTotal","costoManoObra","costo","bodyTitulo","ReportFase","formSize","precioMaterial","idManoObra","apellidoEmpleado","Fase","idObra","obra","unidad","fases","setFases","flagDetalle","faseDialog","setFaseDialog","deleteFaseDialog","setDeleteFaseDialog","listMateriales","ServiceMaterial","confirmDeleteFase","hideDeleteFaseDialog","deleteFase","deleteFaseDialogFooter","setFlagObra","idFase","Obra","formObra","obras","setObras","obraDialog","setObraDialog","deleteObraDialog","setDeleteObraDialog","setObra","flagObra","listTipoObras","ServiceTipoObra","hideDeleteObraDialog","deleteobra","obraDialogFooter","deleteObraDialogFooter","editobra","faseObra","confirmDeleteobra","TipoMateriaPrima","formTipoMateriaPrima","tipoMateriaPrimas","setTipoMateriaPrimas","tipoMateriaPrimaDialog","setTipoMateriaPrimaDialog","deletetipoMateriaPrimaDialog","setDeletetipoMateriaPrimaDialog","tipoMateriaPrima","setTipoMateriaPrima","hideDeletetipoMateriaPrimaDialog","deletetipoMateriaPrima","tipoMateriaPrimaDialogFooter","idTipoMateriaPrima","deletetipoMateriaPrimaDialogFooter","edittipoMateriaPrima","confirmDeletetipoMateriaPrima","TipoMaquinaria","formTipoMaquinaria","tipoMaquinarias","setTipoMaquinarias","tipoMaquinariaDialog","setTipoMaquinariaDialog","deleteTipoMaquinariaDialog","setDeleteTipoMaquinariaDialog","tipoMaquinaria","setTipoMaquinaria","hideDeleteTipoMaquinariaDialog","deletetipoMaquinaria","tipoMaquinariaDialogFooter","idTipoMaquinaria","deleteTipoMaquinariaDialogFooter","edittipoMaquinaria","confirmDeletetipoMaquinaria","MateriaPrima","formMateriaPrima","materiaPrimas","setMateriaPrimas","materiaPrimaDialog","setMateriaPrimaDialog","deleteMateriaPrimaDialog","setDeleteMateriaPrimaDialog","materiaPrima","setMateriaPrima","tiposMateriasPrimas","setTiposMateriasPrimas","listTipoMateriaPrima","ServiceTipoMateriaPrima","hideDeleteMateriaPrimaDialog","deletemateriaPrima","materiaPrimaDialogFooter","idMateriaPrima","deleteMateriaPrimaDialogFooter","editmateriaPrima","confirmDeletemateriaPrima","Maquinaria","formMaquinaria","maquinarias","setMaquinarias","maquinariaDialog","setMaquinariaDialog","deleteMaquinariaDialog","setDeleteMaquinariaDialog","maquinaria","setMaquinaria","tiposMaquinarias","setTiposMaquinarias","listTipoMaquinaria","ServiceTipoMaquinaria","hideDeleteMaquinariaDialog","deletemaquinaria","maquinariaDialogFooter","idMaquinaria","deleteMaquinariaDialogFooter","editmaquinaria","confirmDeletemaquinaria","DetalleProceso","formDetalleProceso","idProceso","proceso","detalleProcesos","setDetalleProcesos","detalleProcesoDialog","setDetalleProcesoDialog","deleteDetalleProcesoDialog","setDeleteDetalleProcesoDialog","detalleProceso","setDetalleProceso","listMateriasPrimas","listMaquinarias","ServiceMateriaPrima","ServiceMaquinaria","hideDeleteDetalleProcesoDialog","deletedetalleProceso","detalleProcesoDialogFooter","idDetalleProceso","deleteDetalleProcesoDialogFooter","setFlagProceso","editdetalleProceso","confirmDeletedetalleProceso","ReportProceso","procesos","Proceso","formProceso","setProcesos","procesoDialog","setProcesoDialog","deleteProcesoDialog","setDeleteProcesoDialog","setProceso","flagproceso","hideDeleteProcesoDialog","deleteproceso","procesoDialogFooter","deleteProcesoDialogFooter","editproceso","Detalleproceso","confirmDeleteproceso","bcrypt","require","Empleado","flagCrud","setFlagCrud","setIdArea","formEmpleado","fechaNacimiento","sueldo","idSede","password","empleadosDialog","setEmpleadosDialog","deleteEmpleadosDialog","setDeleteEmpleadosDialog","setEmpleado","setListRol","setListSede","empresa","setEmpresa","getListRol","getListSede","hideDeleteEmpleadosDialog","criptPassword","hash","err","deleteempleado","empleadosDialogFooter","deleteEmpleadosDialogFooter","editempleado","confirmDeleteempleado","departamento","App","layoutMode","setLayoutMode","setLayoutColorMode","inputStyle","setInputStyle","ripple","setRipple","staticMenuInactive","setStaticMenuInactive","overlayMenuActive","setOverlayMenuActive","mobileMenuActive","setMobileMenuActive","setMobileTopbarMenuActive","copyTooltipRef","PrimeReact","menuClick","mobileTopbarMenuClick","addClass","removeClass","updateTargetEvents","isDesktop","innerWidth","element","classList","add","replace","RegExp","split","join","wrapperClass","position","prevState","onMobileSubTopbarMenuClick","path","render","colorMode","component","rippleEffect","onRippleEffect","onInputStyleChange","onLayoutModeChange","mode","onColorModeChange","Login","user","pass","loginForm","setLoginForm","Img","Principal","autenticado","ReactDOM"],"mappings":"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","file":"static/js/main.a44a6a36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/result.388b5da3.svg\";","import { useEffect } from 'react';\nimport { useLocation, withRouter } from 'react-router-dom';\n\nconst ScrollToTop = (props) => {\n\n    let location = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [location]);\n\n    return props.children;\n}\n\nexport default withRouter(ScrollToTop);\n","import React  from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const AppTopbar = (props) => {\n\n    return (\n        <div className=\"layout-topbar\">\n            <Link to=\"/\" className=\"layout-topbar-logo\">\n                <img src={props.layoutColorMode === 'light' ? 'assets/layout/images/logo-dark.svg' : 'assets/layout/images/logo-white.svg'} alt=\"logo\"/>\n                <span>PROYECTO</span>\n            </Link>\n\n            <button type=\"button\" className=\"p-link  layout-menu-button layout-topbar-button\" onClick={props.onToggleMenuClick}>\n                <i className=\"pi pi-bars\"/>\n            </button>\n\n            <button type=\"button\" className=\"p-link layout-topbar-menu-button layout-topbar-button\" onClick={props.onMobileTopbarMenuClick}>\n                <i className=\"pi pi-ellipsis-v\" />\n            </button>\n\n                <ul className={classNames(\"layout-topbar-menu lg:flex origin-top\", {'layout-topbar-menu-mobile-active': props.mobileTopbarMenuActive })}>\n                   \n                    <li>\n                        <button className=\"p-link layout-topbar-button\" onClick={() => {props.setAutenticado(false)}}>\n                            Salir\n                        </button>\n                    </li>\n                </ul>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const AppFooter = () => {\n\n    return (\n        <div className=\"layout-footer\">\n            by\n            <span className=\"font-medium ml-2\">Lucio Eduardo Chumil Gutiérrez</span>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\nimport {Ripple} from \"primereact/ripple\";\nimport { Badge } from 'primereact/badge';\n\nconst AppSubmenu = (props) => {\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    const onMenuItemClick = (event, item, index) => {\n        //avoid processing disabled items\n        if (item.disabled) {\n            event.preventDefault();\n            return true;\n        }\n\n        //execute command\n        if (item.command) {\n            item.command({ originalEvent: event, item: item });\n        }\n\n        if (index === activeIndex)\n            setActiveIndex(null);\n        else\n            setActiveIndex(index);\n\n        if (props.onMenuItemClick) {\n            props.onMenuItemClick({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n\n    const onKeyDown = (event) => {\n        if (event.code === 'Enter' || event.code === 'Space'){\n            event.preventDefault();\n            event.target.click();\n        }\n    }\n\n    const renderLinkContent = (item) => {\n        let submenuIcon = item.items && <i className=\"pi pi-fw pi-angle-down menuitem-toggle-icon\"></i>;\n        let badge = item.badge && <Badge value={item.badge} />\n\n        return (\n            <React.Fragment>\n                <i className={item.icon}></i>\n                <span>{item.label}</span>\n                {submenuIcon}\n                {badge}\n                <Ripple/>\n            </React.Fragment>\n        );\n    }\n\n    const renderLink = (item, i) => {\n        let content = renderLinkContent(item);\n\n        if (item.to) {\n            return (\n                <NavLink aria-label={item.label} onKeyDown={onKeyDown} role=\"menuitem\" className=\"p-ripple\" activeClassName=\"router-link-active router-link-exact-active\" to={item.to} onClick={(e) => onMenuItemClick(e, item, i)} exact target={item.target}>\n                    {content}\n                </NavLink>\n            )\n        }\n        else {\n            return (\n                <a tabIndex=\"0\" aria-label={item.label} onKeyDown={onKeyDown} role=\"menuitem\" href={item.url} className=\"p-ripple\" onClick={(e) => onMenuItemClick(e, item, i)} target={item.target}>\n                    {content}\n                </a>\n            );\n        }\n    }\n\n    let items = props.items && props.items.map((item, i) => {\n        let active = activeIndex === i;\n        let styleClass = classNames(item.badgeStyleClass, {'layout-menuitem-category': props.root, 'active-menuitem': active && !item.to });\n\n        if(props.root) {\n            return (\n                <li className={styleClass} key={i} role=\"none\">\n                    {props.root === true && <React.Fragment>\n                        <div className=\"layout-menuitem-root-text\" aria-label={item.label}>{item.label}</div>\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\n                    </React.Fragment>}\n                </li>\n            );\n        }\n        else {\n            return (\n                <li className={styleClass} key={i} role=\"none\">\n                    {renderLink(item, i)}\n                    <CSSTransition classNames=\"layout-submenu-wrapper\" timeout={{ enter: 1000, exit: 450 }} in={active} unmountOnExit>\n                        <AppSubmenu items={item.items} onMenuItemClick={props.onMenuItemClick} />\n                    </CSSTransition>\n                </li>\n            );\n        }\n    });\n\n    return items ? <ul className={props.className} role=\"menu\">{items}</ul> : null;\n}\n\nexport const AppMenu = (props) => {\n\n    return (\n        <div className=\"layout-menu-container\">\n            <AppSubmenu items={props.model} className=\"layout-menu\"  onMenuItemClick={props.onMenuItemClick} root={true} role=\"menu\" />\n           {/*  <a href=\"https://www.primefaces.org/primeblocks-react\" className=\"block mt-3\">\n                <img alt=\"primeblocks\" className=\"w-full\"\n                     src={props.layoutColorMode === 'light' ? 'assets/layout/images/banner-primeblocks.png' : 'assets/layout/images/banner-primeblocks-dark.png'}/>\n            </a> */}\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\n\nexport const AppConfig = (props) => {\n\n    const [active, setActive] = useState(false);\n    const [scale] = useState(14);\n    const [theme] = useState('lara-light-indigo');\n    const config = useRef(null);\n    let outsideClickListener = useRef(null);\n\n    const unbindOutsideClickListener = useCallback(() => {\n        if (outsideClickListener.current) {\n            document.removeEventListener('click', outsideClickListener.current);\n            outsideClickListener.current = null;\n        }\n    }, []);\n\n    const hideConfigurator = useCallback((event) => {\n        setActive(false);\n        unbindOutsideClickListener();\n        event.preventDefault();\n    }, [unbindOutsideClickListener]);\n\n    const bindOutsideClickListener = useCallback(() => {\n        if (!outsideClickListener.current) {\n            outsideClickListener.current = (event) => {\n                if (active && isOutsideClicked(event)) {\n                    hideConfigurator(event);\n                }\n            };\n            document.addEventListener('click', outsideClickListener.current);\n        }\n    }, [active, hideConfigurator]);\n\n    useEffect(() => {\n        if (active) {\n            bindOutsideClickListener()\n        }\n        else {\n            unbindOutsideClickListener()\n        }\n    }, [active, bindOutsideClickListener, unbindOutsideClickListener]);\n\n    const isOutsideClicked = (event) => {\n        return !(config.current.isSameNode(event.target) || config.current.contains(event.target));\n    }\n\n\n    useEffect(() => {\n        document.documentElement.style.fontSize = scale + 'px';\n    }, [scale])\n\n \n\n    const configClassName = classNames('layout-config', {\n        'layout-config-active': active\n    })\n\n    const replaceLink = useCallback((linkElement, href, callback) => {\n        if (isIE()) {\n            linkElement.setAttribute('href', href);\n\n            if (callback) {\n                callback();\n            }\n        }\n        else {\n            const id = linkElement.getAttribute('id');\n            const cloneLinkElement = linkElement.cloneNode(true);\n\n            cloneLinkElement.setAttribute('href', href);\n            cloneLinkElement.setAttribute('id', id + '-clone');\n\n            linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n\n            cloneLinkElement.addEventListener('load', () => {\n                linkElement.remove();\n                cloneLinkElement.setAttribute('id', id);\n\n                if (callback) {\n                    callback();\n                }\n            });\n        }\n    },[])\n\n    useEffect(() => {\n        let themeElement = document.getElementById('theme-link');\n        const themeHref = 'assets/themes/' + theme + '/theme.css';\n        replaceLink(themeElement, themeHref);\n\n    },[theme,replaceLink])\n\n    const isIE = () => {\n        return /(MSIE|Trident\\/|Edge\\/)/i.test(window.navigator.userAgent)\n    }\n\n\n    return (\n        <div ref={config} className={configClassName} id={\"layout-config\"}>\n            {/* <button className=\"layout-config-button p-link\" id=\"layout-config-button\" onClick={toggleConfigurator}>\n                <i className=\"pi pi-cog\"></i>\n            </button>\n            <Button className=\"p-button-danger layout-config-close p-button-rounded p-button-text\" icon=\"pi pi-times\" onClick={hideConfigurator}/>\n\n            <div className=\"layout-config-content\">\n                <h5 className=\"mt-0\">Component Scale</h5>\n                <div className=\"config-scale\">\n                    <Button icon=\"pi pi-minus\" onClick={decrementScale} className=\"p-button-text\" disabled={scale === scales[0]} />\n                    {\n                        scales.map((item) => {\n                            return <i className={classNames('pi pi-circle-on', {'scale-active': item === scale})} key={item}/>\n                        })\n                    }\n                    <Button icon=\"pi pi-plus\" onClick={incrementScale} className=\"p-button-text\" disabled={scale === scales[scales.length - 1]} />\n                </div>\n\n                <h5>Input Style</h5>\n                <div className=\"p-formgroup-inline\">\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"input_outlined\" name=\"inputstyle\" value=\"outlined\" onChange={(e) => props.onInputStyleChange(e.value)} checked={props.inputStyle === 'outlined'} />\n                        <label htmlFor=\"input_outlined\">Outlined</label>\n                    </div>\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"input_filled\" name=\"inputstyle\" value=\"filled\" onChange={(e) => props.onInputStyleChange(e.value)} checked={props.inputStyle === 'filled'} />\n                        <label htmlFor=\"input_filled\">Filled</label>\n                    </div>\n                </div>\n\n                <h5>Ripple Effect</h5>\n                <InputSwitch checked={props.rippleEffect} onChange={props.onRippleEffect} />\n\n                <h5>Menu Type</h5>\n                <div className=\"p-formgroup-inline\">\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"static\" name=\"layoutMode\" value=\"static\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'static'} />\n                        <label htmlFor=\"static\">Static</label>\n                    </div>\n                    <div className=\"field-radiobutton\">\n                        <RadioButton inputId=\"overlay\" name=\"layoutMode\" value=\"overlay\" onChange={(e) => props.onLayoutModeChange(e.value)} checked={props.layoutMode === 'overlay'} />\n                        <label htmlFor=\"overlay\">Overlay</label>\n                    </div>\n                </div>\n\n                <h5>Themes</h5>\n                <h6 className=\"mt-0\">Bootstrap</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-light-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-light-blue.svg\" alt=\"Bootstrap Light Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-light-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-light-purple.svg\" alt=\"Bootstrap Light Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-dark-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-dark-blue.svg\" alt=\"Bootstrap Dark Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'bootstrap4-dark-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/bootstrap4-dark-purple.svg\" alt=\"Bootstrap Dark Purple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Material Design</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-indigo.svg\" alt=\"Material Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-light-deeppurple', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" alt=\"Material Light DeepPurple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" alt=\"Material Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'md-dark-deeppurple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" alt=\"Material Dark DeepPurple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Material Design Compact</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-indigo.svg\" alt=\"Material Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-light-deeppurple', 'light')}>\n                            <img src=\"assets/layout/images/themes/md-light-deeppurple.svg\" alt=\"Material Light DeepPurple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-indigo.svg\" alt=\"Material Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'mdc-dark-deeppurple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/md-dark-deeppurple.svg\" alt=\"Material Dark DeepPurple\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Tailwind</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'tailwind-light', 'light')}>\n                            <img src=\"assets/layout/images/themes/tailwind-light.png\" alt=\"Tailwind Light\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>Fluent UI</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'fluent-light', 'light')}>\n                            <img src=\"assets/layout/images/themes/fluent-light.png\" alt=\"Fluent Light\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>PrimeOne Design - 2022</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-indigo', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-indigo.png\" alt=\"Lara Light Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-blue.png\" alt=\"Lara Light Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-purple.png\" alt=\"Lara Light Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-light-teal', 'light')}>\n                            <img src=\"assets/layout/images/themes/lara-light-teal.png\" alt=\"Lara Light Teal\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-indigo', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-indigo.png\" alt=\"Lara Dark Indigo\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-blue.png\" alt=\"Lara Dark Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-purple.png\" alt=\"Lara Dark Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={(e) => changeTheme(e, 'lara-dark-teal', 'dark')}>\n                            <img src=\"assets/layout/images/themes/lara-dark-teal.png\" alt=\"Lara Dark Teal\"/>\n                        </button>\n                    </div>\n                </div>\n\n                <h6>PrimeOne Design - 2021</h6>\n                <div className=\"grid free-themes\">\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-blue', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-blue.png\" alt=\"Saga Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-green', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-green.png\" alt=\"Saga Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-orange', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-orange.png\" alt=\"Saga Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'saga-purple', 'light')}>\n                            <img src=\"assets/layout/images/themes/saga-purple.png\" alt=\"Saga Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-blue', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-blue.png\" alt=\"Vela Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-green', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-green.png\" alt=\"Vela Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-orange', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-orange.png\" alt=\"Vela Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'vela-purple', 'dim')}>\n                            <img src=\"assets/layout/images/themes/vela-purple.png\" alt=\"Vela Purple\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-blue', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-blue.png\" alt=\"Arya Blue\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-green', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-green.png\" alt=\"Arya Green\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-orange', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-orange.png\" alt=\"Arya Orange\"/>\n                        </button>\n                    </div>\n                    <div className=\"col-3 text-center\">\n                        <button className=\"p-link\" onClick={e => changeTheme(e, 'arya-purple', 'dark')}>\n                            <img src=\"assets/layout/images/themes/arya-purple.png\" alt=\"Arya Purple\"/>\n                        </button>\n                    </div>\n                </div>\n\n            </div> */}\n        </div>\n    );\n}\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function conteoEmpleados() {\n    let respuesta = await axios.get(URL + `/global/conteoEmpleados` );\n\treturn respuesta.data;\n}\n\nexport async function productosMasVendidos() {\n    let respuesta = await axios.get(URL + `/global/productosMasVendidos` );\n\treturn respuesta.data;\n}\n\nexport async function productosMasAlquilados() {\n    let respuesta = await axios.get(URL + `/global/productosMasAlquilados` );\n\treturn respuesta.data;\n}","import React, { useState, useEffect } from 'react';\nimport * as ServiceGlobal from \"./ServiceGlobal\";\n\nconst Dashboard = (props) => {\n    const [conteoEmpleados, setConteoEmpleados] = useState([]);\n\n\n    useEffect(() => {\n        getConteoEmpleados();\n    }, []);\n\n\n    const getConteoEmpleados = async () => {\n        const resp = await ServiceGlobal.conteoEmpleados();\n        if (resp.valid) setConteoEmpleados(resp.data);\n    }\n\n\n\n    return (\n        <div className=\"grid\">\n             <div className=\"col-12\">\n                 <div className=\"px-4 py-5 shadow-2 flex flex-column md:flex-row md:align-items-center justify-content-between mb-3\"\n                     style={{borderRadius: '1rem', background: 'linear-gradient(0deg, rgba(0, 123, 255, 0.5), rgba(0, 123, 255, 0.5)), linear-gradient(92.54deg, #1C80CF 47.88%, #FFFFFF 100.01%)'}}>\n                    <div>\n                        <div className=\"text-blue-100 font-medium text-xl mt-2 mb-3\">Bienvenido!!!</div>\n                        <div className=\"text-white font-medium text-5xl\">TransPort S.A</div>\n                    </div>\n                    \n                </div>\n             </div>\n\n             {\n                conteoEmpleados.map((item, index) => {\n                    return (\n                        <div className=\"col-12 lg:col-6 xl:col-4\" key={index}>\n                            <div className=\"card mb-0\">\n                                <div className=\"flex justify-content-between mb-3\">\n                                    <div>\n                                        <span className=\"block text-500 font-medium mb-3\">Empleados</span>\n                                        <div className=\"text-900 font-medium text-xl\">{item.numeroEmpleados}</div>\n                                    </div>\n                                    <div className=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style={{width: '2.5rem', height: '2.5rem'}}>\n                                        <i className=\"pi pi-users text-orange-500 text-xl\"/>\n                                    </div>\n                                </div>\n                                <span className=\"text-500\">{item.area} </span>\n                            </div>\n                        </div>\n\n                    )\n                })\n             }\n\n           \n\n          \n\n\n        </div>\n    );\n}\n\n\n\nexport default Dashboard;\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/categoria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/categoria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/categoria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/categoria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst Categoria = () => {\n\n    let formCategoria = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [categorias, setCategorias] = useState(null);\n    const [categoriaDialog, setCategoriaDialog] = useState(false);\n    const [deleteCategoriaDialog, setDeleteCategoriaDialog] = useState(false);\n    const [categoria, setCategoria] = useState(formCategoria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setCategorias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCategoria(formCategoria);\n        setSubmitted(false);\n        setCategoriaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setCategoriaDialog(false);\n    }\n\n    const hideDeleteCategoriaDialog = () => {\n        setDeleteCategoriaDialog(false);\n    }\n\n    const submit = () => {\n        if (categoria.nombre) {\n             if (categoria.idCategoria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(categoria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(categoria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editcategoria = (categoria) => {\n        setCategoria({ ...categoria });\n        setCategoriaDialog(true);\n    }\n\n    const confirmDeletecategoria = (categoria) => {\n        setCategoria(categoria);\n        setDeleteCategoriaDialog(true);\n    }\n\n    const deletecategoria = async () => {\n        let resp = await Service.deleteById(categoria);\n        if ( resp.valid ) {\n            list();\n            setDeleteCategoriaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCategoria({\n            ...categoria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCategoria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editcategoria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletecategoria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Categorias de Producto</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const categoriaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={categoria.idCategoria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteCategoriaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteCategoriaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletecategoria} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={categorias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} categorias\"\n                        globalFilter={globalFilter} emptyMessage=\"No categorias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCategoria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={categoriaDialog} style={{ width: '450px' }} header={categoria.idCategoria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={categoriaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={categoria.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !categoria.nombre })} \n                            />\n                            { submitted &&  !categoria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={categoria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteCategoriaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteCategoriaDialogFooter} onHide={hideDeleteCategoriaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {categoria && <span>Desea eliminar este item: <b>{categoria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Categoria","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/producto/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/producto/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/producto/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/producto/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/proveedor/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceCategoria from \"../categoria/Service\";\nimport * as ServiceProveedor from \"../../user/proveedores/Service\"\nimport { Checkbox } from 'primereact/checkbox';\n\nconst Producto = () => {\n\n    let formProducto = {\n        idCategoria: \"\",\n        idProveedor: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        precio: \"\",\n        stock: \"\",\n        fechaIngreso:\"\",\n        venta:false,\n    };\n\n    const [productos, setProductos] = useState(null);\n    const [categorias, setCategorias] = useState([]);\n    const [proveedores, setProveedores] = useState([]);\n    const [productoDialog, setProductoDialog] = useState(false);\n    const [deleteProductoDialog, setDeleteProductoDialog] = useState(false);\n    const [producto, setProducto] = useState(formProducto);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n  \n    useEffect(() => {\n        list();\n        listCategorias();\n        listProveedores();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setProductos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCategorias = async()  => {\n        let resp = await ServiceCategoria.list();\n        if (resp.valid) {\n            setCategorias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listProveedores = async()  => {\n        let resp = await ServiceProveedor.list();\n        if (resp.valid) {\n            setProveedores(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setProducto(formProducto);\n        setSubmitted(false);\n        setProductoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProductoDialog(false);\n    }\n\n    const hideDeleteProductoDialog = () => {\n        setDeleteProductoDialog(false);\n    }\n\n    const submit = () => {\n        if (producto.nombre && producto.idCategoria && producto.nombre && producto.precio && producto.stock) {\n             if (producto.idProducto) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(producto);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(producto);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editProducto = (producto) => {\n        setProducto({ ...producto });\n        setProductoDialog(true);\n    }\n\n    const confirmDeleteproducto = (producto) => {\n        setProducto(producto);\n        setDeleteProductoDialog(true);\n    }\n\n    const deleteproducto = async () => {\n        let resp = await Service.deleteById(producto);\n        if ( resp.valid ) {\n            list();\n            setDeleteProductoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n\n        if ( name ==='venta') {\n            setProducto({\n                ...producto,\n                [name]: !value,\n            });\n        } else {\n            setProducto({\n                ...producto,\n                [name]: value,\n            });\n        }\n       \n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idProducto}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const categoriaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Categoria</span>\n                {rowData.categoria}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {formatCurrency(rowData.precio)}\n            </>\n        );\n    }\n\n    const stockBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Stock</span>\n                {rowData.stock}\n            </>\n        );\n    }\n\n    const ventaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Proposito</span>\n                {rowData.venta === 1 ? \"VENTA\": \"ALQUILER\"}\n            </>\n        );\n    }\n\n\n    const formatCurrency = (value) => {\n        return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editProducto(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteproducto(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\"> Productos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const productoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={producto.idProducto ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteProductoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProductoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteproducto} />\n        </>\n    );\n\n    \n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={productos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} productos\"\n                        globalFilter={globalFilter} emptyMessage=\"No productos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idProducto\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"categoria\" header=\"Categoria\" sortable body={categoriaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"price\" header=\"Precio\" body={precioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"stock\" header=\"Stock\" body={stockBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"proposito\" header=\"Proposito\" body={ventaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={productoDialog} style={{ width: '600px' }} header={producto.idProducto ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={productoDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={producto.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !producto.nombre })} \n                            />\n                            { submitted &&  !producto.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={producto.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Categoria</label>\n                            <Select \n                                value={producto.idCategoria} \n                                className=\"w-full\"\n                                id=\"idCategoria\" \n                                name=\"idCategoria\" \n                                onChange={onInputChange}>\n                                {categorias.map((item, index) => (\n                                    <MenuItem value={item.idCategoria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !producto.idCategoria && <small className=\"p-invalid\">Categoria es requerida.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Proveedor</label>\n                            <Select \n                                value={producto.idProveedor} \n                                className=\"w-full\"\n                                id=\"idProveedor\" \n                                name=\"idProveedor\" \n                                onChange={onInputChange}\n                            >\n                                {proveedores.map((item, index) => (\n                                    <MenuItem value={item.idProveedor} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Precio</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"precio\"\n                                    name=\"precio\"\n                                    value={ producto.precio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className={classNames({ 'p-invalid': submitted && !producto.precio })} \n                                />\n                                { submitted &&  !producto.precio && <small className=\"p-invalid\">Precio es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Stock</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"stock\"\n                                    name=\"stock\"\n                                    value={ producto.stock }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className={classNames({ 'p-invalid': submitted && !producto.stock })} \n                                />\n                                { submitted &&  !producto.stock && <small className=\"p-invalid\">Stock es requerido.</small>}\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">fecha</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaIngreso\"\n                                    name=\"fechaIngreso\"\n                                    value={ producto.fechaIngreso }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Venta</label>\n                                <Checkbox \n                                    inputId=\"venta\" \n                                    name=\"venta\" \n                                    value={producto.venta === 1 ? true : producto.venta === 0 ? false : producto.venta}\n                                    className=\"w-full\"\n                                    checked={producto.venta === 1 ? true : producto.venta === 0 ? false : producto.venta} \n                                    onChange={onInputChange} \n                                />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteProductoDialogFooter} onHide={hideDeleteProductoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Producto;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cliente/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByNegocio(obj) {\n    let respuesta = await axios.post(URL + `/cliente/listByNegocio`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cliente/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cliente/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cliente/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport {  TextField } from '@mui/material';\n\nconst Cliente = (props) => {\n  \n    let formCliente = {\n        idNegocio: props.idNegocio,\n        nombre: \"\",\n        apellido: \"\",\n        dpi: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: null\n    };\n\n    const [clientes, setClientes] = useState(null);\n    const [clienteDialog, setClienteDialog] = useState(false);\n    const [deleteClienteDialog, setDeleteClienteDialog] = useState(false);\n    const [cliente, setCliente] = useState(formCliente);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n      list();\n      // eslint-disable-next-line\n    }, []);\n    \n\n    const list = async()  => {\n        let aux = {idNegocio: props.idNegocio};\n        let resp = await Service.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCliente(formCliente);\n        setSubmitted(false);\n        setClienteDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setClienteDialog(false);\n    }\n\n    const hideDeleteClienteDialog = () => {\n        setDeleteClienteDialog(false);\n    }\n\n    const submit = () => {\n        if (cliente.nombre && cliente.apellido && cliente.dpi && cliente.nit && cliente.direccion && cliente.email) {\n             if (cliente.idCliente) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editCliente = (cliente) => {\n        setCliente({ ...cliente });\n        setClienteDialog(true);\n    }\n\n    const confirmDeleteCliente = (cliente) => {\n        setCliente(cliente);\n        setDeleteClienteDialog(true);\n    }\n\n    const deleteCliente = async () => {\n        let resp = await Service.deleteById(cliente);\n        if ( resp.valid ) {\n            list();\n            setDeleteClienteDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCliente({\n            ...cliente,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCliente}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre} {rowData.apellido}\n            </>\n        );\n    }\n\n\n    const nitBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nit</span>\n                {rowData.dpi}\n            </>\n        );\n    }\n\n    const telefonoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Telefono</span>\n                {rowData.telefono}\n            </>\n        );\n    }\n\n    const emailBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Email</span>\n                {rowData.email}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editCliente(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteCliente(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Clientes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const clienteDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={cliente.idCliente ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteClienteDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteClienteDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteCliente} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={clientes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} clientes\"\n                        globalFilter={globalFilter} emptyMessage=\"No clientes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCliente\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nit\" header=\"Nit\" body={nitBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"telefono\" header=\"Telefono\" body={telefonoBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"email\" header=\"Email\" body={emailBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={clienteDialog} style={{ width: '450px' }} header={cliente.idCliente ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={clienteDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={cliente.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !cliente.nombre })} \n                            />\n                            { submitted &&  !cliente.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"apellido\">Apellido</label>\n                            <InputText \n                                id=\"apellido\" \n                                name=\"apellido\"\n                                value={cliente.apellido} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-invalid': submitted && !cliente.apellido })} \n                            />\n                            { submitted &&  !cliente.apellido && <small className=\"p-invalid\">Apellido es requerido.</small>}\n                      \n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">DPI</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"dpi\"\n                                    name=\"dpi\"\n                                    value={ cliente.dpi }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className=\"w-full\"\n                                />\n                                { submitted &&  !cliente.dpi && <small className=\"p-invalid\">DPI es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">NIT</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"nit\"\n                                    name=\"nit\"\n                                    value={ cliente.nit }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                    className=\"w-full\"\n                                />\n                                { submitted &&  !cliente.nit && <small className=\"p-invalid\">Nit es requerido.</small>}\n                            </div>\n                        </div>\n\n                        <div className=\"field\">\n                                <label htmlFor=\"nombre\">Dirección</label>\n                                <InputText \n                                    id=\"direccion\" \n                                    name=\"direccion\"\n                                    value={cliente.direccion} \n                                    onChange={onInputChange} \n                                    required \n                                    className={classNames({ 'p-invalid': submitted && !cliente.direccion })} \n                                />\n                                { submitted &&  !cliente.direccion && <small className=\"p-invalid\">Direccion es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Email</label>\n                                <TextField\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    className=\"w-full\"\n                                    value={ cliente.email }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                { submitted &&  !cliente.email && <small className=\"p-invalid\">Email es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Telefono</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"telefono\"\n                                    name=\"telefono\"\n                                    className=\"w-full\"\n                                    value={ cliente.telefono }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                             </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteClienteDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteClienteDialogFooter} onHide={hideDeleteClienteDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {cliente && <span>Desea eliminar este item: <b>{cliente.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cliente;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoAlquiler/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoAlquiler = () => {\n\n    let formTipoAlquiler = {\n        descripcion: \"\",\n        tasaAlquiler:\"\"\n    };\n\n    const [tipoAlquileres, setTipoAlquileres] = useState(null);\n    const [tipoAlquilerDialog, setTipoAlquilerDialog] = useState(false);\n    const [deleteTipoAlquilerDialog, setDeleteTipoAlquilerDialog] = useState(false);\n    const [tipoAlquiler, setTipoAlquiler] = useState(formTipoAlquiler);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoAlquileres(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoAlquiler(formTipoAlquiler);\n        setSubmitted(false);\n        setTipoAlquilerDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoAlquilerDialog(false);\n    }\n\n    const hideDeleteTipoAlquilerDialog = () => {\n        setDeleteTipoAlquilerDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoAlquiler.descripcion && tipoAlquiler.tasaAlquiler) {\n             if (tipoAlquiler.idTipoAlquiler) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoAlquiler);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoAlquiler);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editTipoAlquiler = (tipoAlquiler) => {\n        setTipoAlquiler({ ...tipoAlquiler });\n        setTipoAlquilerDialog(true);\n    }\n\n    const confirmDeleteTipoAlquiler = (tipoAlquiler) => {\n        setTipoAlquiler(tipoAlquiler);\n        setDeleteTipoAlquilerDialog(true);\n    }\n\n    const deleteTipoAlquiler = async () => {\n        let resp = await Service.deleteById(tipoAlquiler);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoAlquilerDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoAlquiler({\n            ...tipoAlquiler,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoAlquiler}\n            </>\n        );\n    }\n\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const tasaAlquilerBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tasa Alquiler</span>\n                {rowData.tasaAlquiler}%\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editTipoAlquiler(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteTipoAlquiler(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo Alquiler</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoAlquilerDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoAlquiler.idTipoAlquiler ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoAlquilerDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoAlquilerDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteTipoAlquiler} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoAlquileres}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoAlquileres\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoAlquileres found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoAlquiler\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column field=\"tasaAlquiler\" header=\"Tasa Alquiler\" sortable body={tasaAlquilerBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoAlquilerDialog} style={{ width: '450px' }} header={tipoAlquiler.idTipoAlquiler ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoAlquilerDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Descripción</label>\n                            <InputText \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoAlquiler.descripcion} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !tipoAlquiler.descripcion })} \n                            />\n                            { submitted &&  !tipoAlquiler.descripcion && <small className=\"p-invalid\">Descripcion es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Tasa Alquiler</label>\n                            <InputText\n                                type=\"number\"\n                                id=\"tasaAlquiler\" \n                                name=\"tasaAlquiler\"\n                                value={tipoAlquiler.tasaAlquiler} \n                                onChange={onInputChange} \n                                required \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoAlquilerDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoAlquilerDialogFooter} onHide={hideDeleteTipoAlquilerDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoAlquiler && <span>Desea eliminar este item: <b>{tipoAlquiler.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoAlquiler","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/factura/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/factura/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/factura/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/factura/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTipoPago(obj) {\n    let respuesta = await axios.post(URL + `/tipoPago/list`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport { Toast } from 'primereact/toast';\nimport * as Service from \"./Service\";\n\n\n\nconst Factura = (props) => {\n\n    const [submitted, setSubmitted] = useState(false);\n    const [submittedDetalle, setSubmittedDetalle] = useState(false);\n    const [producto, setProducto] = useState(\"\");\n    const toast = useRef(null);\n\n    useEffect(() => {\n        \n    }, []);\n    \n    useEffect(() => {\n        props.setFormDetalle({\n            ...props.formDetalle,\n            precio: producto.precio,\n            producto: producto.nombre\n        });\n        // eslint-disable-next-line\n    }, [producto]);\n\n    const addFactura = () => {\n        \n        if ( props.formFactura.idCliente && props.formFactura.idTipoPago && props.formFactura.idEmpleado && props.formFactura.fecha && props.formFactura.direccion) {\n            if (props.formFactura.detalle.length > 0) {\n                if (props.formFactura.idFactura) {\n                    \n                } else {\n                    saveFactura();\n                }\n            } else {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"Debe de incluir al menos un producto para la venta.\", life: 3000 });\n            }\n        }\n    }\n\n    const saveFactura = async () => {\n        let resp = await Service.save(props.formFactura);\n        if ( resp.valid ){\n            props.listFacturas();\n            back();\n            props.toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            props.toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n       \n        props.setFormFactura({\n            ...props.formFactura,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const onInputChangeDetalle = (e) => {\n        const { value, name } = e.target;\n        if ( name === 'cantidad') {\n            props.setFormDetalle({\n                ...props.formDetalle,\n                cantidad: value,\n                total: value * props.formDetalle.precio\n            });\n\n        } else {\n            props.setFormDetalle({\n                ...props.formDetalle,\n                [name]: value,\n            });\n        }\n        setSubmittedDetalle(true);\n    }\n\n    const idBody = (rowData, rowIndex) => {\n        return (<>{rowIndex.rowIndex + 1}</>)\n    }\n\n    const actionBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteDetalle(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const addDetalle = () => {\n        if ( props.formDetalle.idProducto && props.formDetalle.cantidad ) {\n\n            let aux = props.formFactura.detalle;\n            const mismoProducto = aux.filter( item => item.idProducto === props.formDetalle.idProducto);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo producto más de una vez.\", life: 3000 });\n            } else {\n                if ( props.formFactura.idFactura){\n                    \n                } else {\n                    aux.push(props.formDetalle);\n                    props.setFormFactura({\n                        ...props.formFactura,\n                        detalle: aux\n                    });\n    \n                    props.setFormDetalle(props.detalle);\n                    setSubmittedDetalle(false);\n                }\n                conteoTotal();\n            }\n        }\n    }\n\n    const deleteDetalle = (detalle, index) => {\n        if (props.formFactura.idFactura) {\n            \n        } else {\n            let aux = props.formFactura.detalle;\n            aux.splice(index, 1);\n            props.setFormFactura({\n                ...props.formFactura,\n                detalle: aux\n            });\n        }\n        conteoTotal();\n    }\n\n    const conteoTotal = () => {\n        let aux = props.formFactura.detalle;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.total;\n        });     \n        props.setFormFactura({\n            ...props.formFactura,\n            total: acumulado\n        }); \n    }\n\n    const clearDetalle = () => {\n        props.setFormDetalle(props.detalle);\n        setSubmittedDetalle(false);\n    }\n\n    const clearEncabezado = () => {\n        props.setFormFactura(props.factura);\n        setSubmitted(false);\n    }\n\n    const back = () => {\n        clearDetalle();\n        clearEncabezado();\n        props.setFlagFactura(false);\n    }\n\n\n    return (\n            <>\n            <Toast ref={toast} />\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-11\">\n                            <h3>Factura</h3>\n                        </div>\n                        <div className=\"col-12 md:col-1\">\n                            <Button label=\"Volver\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={back} />\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Cliente*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <Select \n                                    value={props.formFactura.idCliente} \n                                    className=\"w-full\"\n                                    id=\"idCliente\" \n                                    name=\"idCliente\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.clientes.map((item, index) => (\n                                        <MenuItem value={item.idCliente} key={index}>\n                                            {item.nombre +\" \"+ item.apellido }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idCliente && <small className=\"p-error\">Cliente  es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Tipo de pago*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                                <Select \n                                    value={props.formFactura.idTipoPago} \n                                    className=\"w-full\"\n                                    id=\"idTipoPago\" \n                                    name=\"idTipoPago\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.tipoPago.map((item, index) => (\n                                        <MenuItem value={item.idTipoPago} key={index}>\n                                            {item.nombre  }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idTipoPago && <small className=\"p-error\">Tipo de pago  es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <Select \n                                    value={props.formFactura.idEmpleado} \n                                    className=\"w-full\"\n                                    id=\"idEmpleado\" \n                                    name=\"idEmpleado\" \n                                    label=\"Cliente*\"\n                                    onChange={onInputChange}\n                                >\n                                    {props.empleados.map((item, index) => (\n                                        <MenuItem value={item.idEmpleado} key={index}>\n                                            {item.nombre +\" \"+ item.apellido }\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </div>\n                            { submitted && !props.formFactura.idEmpleado && <small className=\"p-error\">Empleado es requerido.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Fecha*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fecha\"\n                                    name=\"fecha\"\n                                    value={ props.formFactura.fecha }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.formFactura.fecha && <small className=\"p-error\">Fecha es requerida.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-8\">\n                            <label htmlFor=\"descripcion\">Dirección*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"direccion\"\n                                    name=\"direccion\"\n                                    value={ props.formFactura.direccion }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.formFactura.direccion && <small className=\"p-error\">Dirección es requerida.</small>}\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-8\">\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.formFactura.detalle} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column header=\"No.\" style={{ flexGrow: 1, flexBasis: '10px' }} body={idBody} frozen></Column>\n                        <Column field=\"producto\" header=\"Producto\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"cantidad\" header=\"Cantidad\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"total\" header=\"Total\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column body={actionBodyTemplate} header=\"Acción\" style={{ flexGrow: 1, flexBasis: '2px' }}></Column>\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-4\">\n                <div className=\"card\">\n                    <h5>Ingrese Producto</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Producto*</label>\n                            <Select \n                                value={props.formDetalle.idProducto} \n                                className=\"w-full\"\n                                id=\"idProducto\" \n                                name=\"idProducto\" \n                                onChange={onInputChangeDetalle}\n                            >\n                                {props.productos.map((item, index) => (\n                                    <MenuItem value={item.idProducto} key={index} onClick={()=>{setProducto(item)}}>\n                                        {item.nombre }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedDetalle && !props.formDetalle.idProducto && <small className=\"p-error\">Producto  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Precio</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precio\"\n                                name=\"precio\"\n                                value={ props.formDetalle.precio }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Cantidad</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"cantidad\"\n                                name=\"cantidad\"\n                                value={ props.formDetalle.cantidad }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                            {  submittedDetalle && !props.formDetalle.cantidad && <small className=\"p-error\">Cantidad  es requerido.</small>}\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Total</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"total\"\n                                name=\"total\"\n                                value={ props.formDetalle.total }\n                                onChange={onInputChangeDetalle}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addDetalle}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearDetalle} />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"total\"\n                                    name=\"total\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.formFactura.total }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <Button  label=\"REALIZAR VENTA\" className=\"p-button-success mr-16 mb-16\" onClick={addFactura}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            \n\n            \n            </>\n\n\n    )\n}\n\nexport default Factura;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/empleado/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByRolByArea(obj) {\n    let respuesta = await axios.post(URL + `/empleado/listByRolByArea`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/empleado/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/empleado/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/empleado/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByArea(obj) {\n    let respuesta = await axios.post(URL + `/empleado/listByArea`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listRol(obj) {\n    let respuesta = await axios.post(URL + `/rol/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listSede(obj) {\n    let respuesta = await axios.post(URL + `/sede/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listPlantas(obj) {\n    let respuesta = await axios.post(URL + `/empleado/plantas`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportFactura = (props) => {\n\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>FACTURA</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Cliente: {props.factura.cliente}</Text>\n                    <Text style={styles.body}>Dirección: {props.factura.direccion}</Text>\n                    <Text style={styles.body}>Tipo de Pago: {props.factura.tipoPago}</Text>\n                    <Text style={styles.body}>Fecha: {moment(props.fecha).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Empleado: {props.factura.empleado}</Text>\n                </View>\n\n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.factura.detalle}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Producto\n                            </TableCell>\n                            <TableCell>\n                                Precio\n                            </TableCell>\n                            <TableCell>\n                                Cantidad\n                            </TableCell>\n                            <TableCell>\n                                Total\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idDetalleVenta}/>\n                        <DataTableCell getContent={(r) => r.producto}/>\n                        <DataTableCell getContent={(r) => r.precio}/>\n                        <DataTableCell getContent={(r) => r.cantidad}/>\n                        <DataTableCell getContent={(r) => r.total}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total: {props.factura.total}\n                    </Text>\n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportFactura;","import React, {useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Toast } from 'primereact/toast';\nimport { InputText } from 'primereact/inputtext';\nimport Factura from './Factura';\nimport * as Service from \"./Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\nimport * as ServiceProducto from \"../producto/Service\";\nimport ReportFactura from './ReportFactura';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { Dialog } from 'primereact/dialog';\n\n\n\nconst Venta = (props) => {\n\n    const factura = {\n        idCliente: \"\",\n        idTipoPago: \"\",\n        idEmpleado: \"\",\n        fecha: \"\",\n        direccion: \"\",\n        total: \"\",\n        detalle: []\n    }\n\n    const detalle = {\n        idProducto: \"\",\n        producto: \"\",\n        precio:\"\",\n        cantidad: \"\",\n        total: \"\"\n    }\n    \n    const [flagFactura, setFlagFactura] = useState(false);\n    const [facturas, setFacturas] = useState([]);\n    const [clientes, setClientes] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n    const [tipoPago, setTipoPago] = useState([]);\n    const [productos, setProductos] = useState([]);\n    const [formFactura, setFormFactura] = useState(factura);\n    const [formDetalle, setFormDetalle] = useState(detalle);\n    \n    const [expandedRows, setExpandedRows] = useState(null);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n\n    const [facturaDialog, setFacturaDialog] = useState(false);\n    const [reporteFactura, setReporteFactura] = useState(\"\");\n\n    const [deleteFacturaDialog, setDeleteFacturaDialog] = useState(false);\n    const [facturaDelete, setFacturaDelete] = useState(\"\");\n\n    useEffect(() => {\n        listFacturas();\n        listClientes();\n        listEmpleados();\n        listTipoPago();\n        listProductos();\n    }, []); \n    \n\n    const listFacturas = async()  => {\n        let aux = {alquiler: 0}\n        let resp = await Service.list(aux);\n        if (resp.valid) {\n            setFacturas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listClientes = async()  => {\n        let aux = {idNegocio: 3};\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let aux = {idRol: 7, idAreaNegocio: 1};\n        let resp = await ServiceEmpleado.listByRolByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoPago = async()  => {\n        let resp = await Service.listTipoPago();\n        if (resp.valid) {\n            setTipoPago(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listProductos = async()  => {\n        let aux = {venta: 1}\n        let resp = await ServiceProducto.list(aux);\n        if (resp.valid) {\n            setProductos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n    \n\n\n    const rowExpansionTemplate = (data) => {\n\n        return (\n            <div className=\"orders-subtable\">\n                <h5>Detalle de Venta</h5>\n                <DataTable value={data.detalle} responsiveLayout=\"scroll\">\n                    <Column field=\"idDetalleVenta\" header=\"No.\" sortable></Column>\n                    <Column field=\"producto\" header=\"Producto\" sortable></Column>\n                    <Column field=\"precio\" header=\"Precio\" sortable></Column>\n                    <Column field=\"cantidad\" header=\"Cantidad\" sortable></Column>\n                    <Column field=\"total\" header=\"Total\" sortable></Column>\n                    {/* <Column headerStyle={{ width: '4rem' }} body={searchBodyTemplate}></Column> */}\n                </DataTable>\n            </div>\n        );\n    }\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Ventas</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR VENTA\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\"  onClick={()=> { setFlagFactura(true)}}  />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagVenta(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const actionBody = (rowData) => {\n        return(\n            <div className=\"actions\">\n                <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFacturaDialog(true);\n                        setReporteFactura(rowData);\n                    }}     \n                />\n                <Button \n                    icon=\"pi pi-trash\" \n                    className=\"p-button-rounded p-button-danger mt-2\" \n                    onClick={() => confirmDeleteFactura(rowData)} \n                />\n            </div>\n        )\n    }\n\n    const confirmDeleteFactura = (factura) => {\n        setFacturaDelete(factura);\n        setDeleteFacturaDialog(true);\n    }\n\n    const deletecategoria = async () => {\n        let resp = await Service.deleteById(facturaDelete);\n        if ( resp.valid ) {\n            listFacturas();\n            setDeleteFacturaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const hideDeleteFacturaDialog = () => {\n        setDeleteFacturaDialog(false);\n    }\n    \n    const deleteFacturaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteFacturaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletecategoria} />\n        </>\n    );\n\n   \n    const hideDialog = () => {\n        setFacturaDialog(false);\n    }\n    return (\n        <>\n            <Toast ref={toast} />\n            {!flagFactura ? (\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        \n                        <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                        <DataTable value={facturas} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)} responsiveLayout=\"scroll\"\n                            rowExpansionTemplate={rowExpansionTemplate} dataKey=\"idFactura\" globalFilter={globalFilter} header={header} className=\"datatable-responsive\">\n                            <Column expander style={{ width: '3em' }} />\n                            <Column field=\"idFactura\" header=\"No\" sortable />\n                            <Column field=\"fecha\" header=\"Fecha\" sortable />\n                            <Column field=\"cliente\" header=\"Cliente\" sortable />\n                            <Column field=\"total\" header=\"Total\" sortable />\n                            <Column field=\"accion\"  body={actionBody} />\n                        </DataTable>\n                    </div>\n                </div>\n            ):null}\n\n            {flagFactura ? (\n                <Factura \n                    setFlagFactura={setFlagFactura}\n                    clientes={clientes}\n                    empleados={empleados}\n                    tipoPago={tipoPago}\n                    productos={productos}\n                    factura={factura}\n                    detalle={detalle}\n                    formFactura={formFactura}\n                    setFormFactura={setFormFactura}\n                    formDetalle={formDetalle}\n                    setFormDetalle={setFormDetalle}\n                    toast={toast}\n                    listFacturas={listFacturas}\n                />\n            ):null}\n\n            <Dialog visible={deleteFacturaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteFacturaDialogFooter} onHide={hideDeleteFacturaDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea eliminar la factura No. <b>{facturaDelete.idFactura}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={facturaDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialog}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportFactura \n                        factura={reporteFactura}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n\n        </>\n    )\n}\n\nexport default Venta;\n","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/factura/listAlquiler`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/factura/saveAlquiler`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/factura/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/factura/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTipoPago(obj) {\n    let respuesta = await axios.post(URL + `/tipoPago/list`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportAlquiler = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>ALQUILER</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Producto: {props.factura.producto}</Text>\n                    <Text style={styles.body}>Cliente: {props.factura.nombreCliente}</Text>\n                    <Text style={styles.body}>Dirección: {props.factura.direccion}</Text>\n                    <Text style={styles.body}>Tipo de Pago: {props.factura.tipoPago}</Text>\n                    <Text style={styles.body}>Total a pagar: {props.factura.total}</Text>\n                    <Text style={styles.body}>Fecha: {moment(props.fechaProximaFacturacion).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Empleado: {props.factura.nombreEmpleado}</Text>\n                </View>\n\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportAlquiler;","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\nimport * as ServiceProducto from \"../producto/Service\";\nimport * as ServiceTipoAlquiler from \"../tipoAlquiler/Service\";\nimport moment from 'moment';\nimport ReportAlquiler from './ReportAlquiler';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nconst Alquiler = (props) => {\n  let formAlquiler = {\n    idCliente: \"\",\n    idTipoPago: \"\",\n    idEmpleado: \"\",\n    fecha: \"\",\n    direccion: \"\",\n    total: \"\",\n\n    idProducto:\"\",\n    idTipoAlquiler:\"\",\n    cantidad: 1,\n    totalDetalle:\"\",\n    fechaProxima: \"\",\n\n    precio: \"\"\n};\n\nconst [alquiler, setalquiler] = useState(formAlquiler);\nconst [alquileres, setAlquileres] = useState(null);\nconst [tipoAlquileres, setTipoAlquileres] = useState([]);\nconst [clientes, setClientes] = useState([]);\nconst [empleados, setEmpleados] = useState([]);\nconst [tipoPago, setTipoPago] = useState([]);\nconst [productos, setProductos] = useState([]);\nconst [alquilerDialog, setAlquilerDialog] = useState(false);\nconst [deleteAlquilerDialog, setDeleteAlquilerDialog] = useState(false);\nconst [submitted, setSubmitted] = useState(false);\nconst [globalFilter, setGlobalFilter] = useState(null);\nconst toast = useRef(null);\nconst dt = useRef(null);\n\nconst [producto, setProducto] = useState(\"\");\nconst [tipo, setTipo] = useState(\"\");\n\nconst [facturaDialog, setFacturaDialog] = useState(false);\nconst [reporteFactura, setReporteFactura] = useState(\"\");\n\nuseEffect(() => {\n    list();\n    listClientes();\n    listEmpleados();\n    listTipoPago();\n    listProductos();\n    listTipoAlquiler();\n}, []);\n\nuseEffect(() => {\n    setalquiler({\n        ...alquiler,\n        precio: producto.precio\n    });\n    // eslint-disable-next-line\n}, [producto]);\n\nuseEffect(() => {\n  \n    if (tipo.idTipoAlquiler) {\n\n        setalquiler({\n            ...alquiler,\n            total: (tipo.tasaAlquiler * producto.precio) / 100,\n            totalDetalle: (tipo.tasaAlquiler * producto.precio) / 100,\n            fechaProxima: \n                tipo.idTipoAlquiler === 1 ? moment( sumarDias(new Date(), 30)).format(\"YYYY-MM-DD\") :\n                tipo.idTipoAlquiler === 2 ? moment( sumarDias(new Date(), 7)).format(\"YYYY-MM-DD\") :\n                moment( sumarDias(new Date(), 1)).format(\"YYYY-MM-DD\")\n        });\n    }\n    // eslint-disable-next-line\n}, [tipo]);\n\n\n\nconst list = async()  => {\n    let aux = {alquiler: 1}\n    let resp = await Service.list(aux);\n    if (resp.valid) {\n        setAlquileres(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\nconst listClientes = async()  => {\n    let aux = {idNegocio: 3};\n    let resp = await ServiceCliente.listByNegocio(aux);\n    if (resp.valid) {\n        setClientes(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listEmpleados = async()  => {\n    let aux = {idRol: 7, idAreaNegocio: 1};\n    let resp = await ServiceEmpleado.listByRolByArea(aux);\n    if (resp.valid) {\n        setEmpleados(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoPago = async()  => {\n    let resp = await Service.listTipoPago();\n    if (resp.valid) {\n        setTipoPago(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listProductos = async()  => {\n    let aux = {venta: 0}\n    let resp = await ServiceProducto.list(aux);\n    if (resp.valid) {\n        setProductos(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoAlquiler = async()  => {\n    let resp = await ServiceTipoAlquiler.list();\n    if (resp.valid) {\n        setTipoAlquileres(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\n\n\nconst openNew = () => {\n    setalquiler(formAlquiler);\n    setSubmitted(false);\n    setAlquilerDialog(true);\n}\n\nconst hideDialog = () => {\n    setSubmitted(false);\n    setAlquilerDialog(false);\n}\n\nconst hideDeleteAlquilerDialog = () => {\n    setDeleteAlquilerDialog(false);\n}\n\nconst submit = () => {\n    if (alquiler.idCliente && alquiler.idTipoPago && alquiler.idEmpleado && alquiler.fecha && alquiler.direccion && alquiler.total && alquiler.idProducto && alquiler.idTipoAlquiler && alquiler.fechaProxima) {\n        save()\n    } \n}\n\nconst save = async () => {\n    let resp = await Service.save(alquiler);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\n\nconst confirmDeletealquiler = (alquiler) => {\n    setalquiler(alquiler);\n    setDeleteAlquilerDialog(true);\n}\n\nconst deletealquiler = async () => {\n    let resp = await Service.deleteById(alquiler);\n    if ( resp.valid ) {\n        list();\n        setDeleteAlquilerDialog(false);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n\n}\n\n\n\nconst onInputChange = (e) => {\n    const { value, name } = e.target;\n\n    if ( name ==='venta') {\n        setalquiler({\n            ...alquiler,\n            [name]: !value,\n        });\n    } else {\n        setalquiler({\n            ...alquiler,\n            [name]: value,\n        });\n    }\n   \n    setSubmitted(true);\n}\n\n\nconst rightToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"m2\">\n                <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagAlquiler(false)}} />\n            </div>\n        </React.Fragment>\n    )\n}\n\n\n\n\nconst actionBodyTemplate = (rowData) => {\n    return (\n        <div className=\"actions\">\n            <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletealquiler(rowData)} />\n            <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFacturaDialog(true);\n                        setReporteFactura(rowData);\n                    }}     \n                />\n        </div>\n    );\n}\n\nconst header = (\n    <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n        <h5 className=\"m-0\"> Alquileres</h5>\n        <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n            <i className=\"pi pi-search\" />\n            <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n        </span>\n    </div>\n);\n\nconst alquilerDialogFooter = (\n    <>\n        \n        <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n        <Button label={alquiler.idalquiler ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n    </>\n);\nconst deleteAlquilerDialogFooter = (\n    <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteAlquilerDialog} />\n        <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletealquiler} />\n    </>\n);\n\nfunction sumarDias(fecha, dias){\n    fecha.setDate(fecha.getDate() + dias);\n    return fecha;\n  }\n\n  const hideDialogReport = () => {\n    setFacturaDialog(false);\n}\n\nreturn (\n    \n    <div className=\"col-12\">\n        <div className=\"card\">\n            <Toast ref={toast} />\n            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n            <DataTable ref={dt} value={alquileres}\n                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} alquileres\"\n                globalFilter={globalFilter} emptyMessage=\"No alquileres found.\" header={header} responsiveLayout=\"scroll\">\n\n                <Column field=\"idFactura\" header=\"ID\" sortable ></Column>\n                <Column field=\"producto\" header=\"Producto\" sortable></Column>\n                <Column field=\"tipoPago\" header=\"Tipo de Pago\"sortable></Column>\n                <Column field=\"nombreCliente\" header=\"Cliente\"sortable></Column>\n                <Column field=\"fechaProximaFacturacion\" header=\"Proxima Facturacioón\"sortable></Column>\n                <Column body={actionBodyTemplate} ></Column>\n            </DataTable>\n\n            <Dialog visible={alquilerDialog} style={{ width: '1000px' }} header={alquiler.idalquiler ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={alquilerDialogFooter} onHide={hideDialog}>\n                \n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                    <label htmlFor=\"descripcion\">Cliente*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                            <Select \n                                value={alquiler.idCliente} \n                                className=\"w-full\"\n                                id=\"idCliente\" \n                                name=\"idCliente\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {clientes.map((item, index) => (\n                                    <MenuItem value={item.idCliente} key={index}>\n                                        {item.nombre +\" \"+ item.apellido }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idCliente && <small className=\"p-error\">Cliente  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Tipo de pago*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                            <Select \n                                value={alquiler.idTipoPago} \n                                className=\"w-full\"\n                                id=\"idTipoPago\" \n                                name=\"idTipoPago\" \n                                onChange={onInputChange}\n                            >\n                                {tipoPago.map((item, index) => (\n                                    <MenuItem value={item.idTipoPago} key={index}>\n                                        {item.nombre  }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idTipoPago && <small className=\"p-error\">Tipo de pago  es requerido.</small>}\n                        \n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Empleado*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                            <Select \n                                value={alquiler.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre +\" \"+ item.apellido }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n                        { submitted && !alquiler.idEmpleado && <small className=\"p-error\">Empleado es requerido.</small>}\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Fecha*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                            <TextField\n                                type=\"date\"\n                                id=\"fecha\"\n                                name=\"fecha\"\n                                value={ alquiler.fecha }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n                        { submitted && !alquiler.fecha && <small className=\"p-error\">Fecha es requerida.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Dirección*</label>\n                        <div className=\"p-inputgroup\">\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                            <TextField\n                                type=\"text\"\n                                id=\"direccion\"\n                                name=\"direccion\"\n                                value={alquiler.direccion }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n                        { submitted && !alquiler.direccion && <small className=\"p-error\">Dirección es requerida.</small>}\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"name\">Producto*</label>\n                        <Select \n                            value={alquiler.idProducto} \n                            className=\"w-full\"\n                            id=\"idProducto\" \n                            name=\"idProducto\" \n                            onChange={onInputChange}\n                        >\n                            {productos.map((item, index) => (\n                                <MenuItem value={item.idProducto} key={index} onClick={()=>{setProducto(item)}}>\n                                    {item.nombre }\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        {  submitted && !alquiler.idProducto && <small className=\"p-error\">Producto  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Precio</label>\n                        <TextField\n                            type=\"number\"\n                            id=\"precio\"\n                            name=\"precio\"\n                            value={ alquiler.precio}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                    </div>\n                </div>\n\n                <div className=\"formgrid grid\">\n                    <div className=\"field col\">\n                        <label htmlFor=\"name\">Tipo Alquiler*</label>\n                        <Select \n                            value={alquiler.idTipoAlquiler} \n                            className=\"w-full\"\n                            id=\"idTipoAlquiler\" \n                            name=\"idTipoAlquiler\" \n                            onChange={onInputChange}\n                        >\n                            {tipoAlquileres.map((item, index) => (\n                                <MenuItem value={item.idTipoAlquiler} key={index} onClick={()=>{setTipo(item)}}>\n                                    {item.descripcion }\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        {  submitted && !alquiler.idTipoAlquiler && <small className=\"p-error\">Tipo Alquiler  es requerido.</small>}\n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Total a pagar</label>\n                        <TextField\n                            type=\"number\"\n                            id=\"total\"\n                            name=\"total\"\n                            value={ alquiler.total}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                      \n                    </div>\n                    <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Fecha Proxima Facturación</label>\n                        <TextField\n                            type=\"date\"\n                            id=\"fechaProxima\"\n                            name=\"fechaProxima\"\n                            value={ alquiler.fechaProxima}\n                            onChange={onInputChange}\n                            variant=\"outlined\"\n                            fullWidth\n                            disabled\n                        />\n                    </div>\n                </div>\n\n              \n               \n\n                \n               \n            </Dialog>\n\n            <Dialog visible={deleteAlquilerDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteAlquilerDialogFooter} onHide={hideDeleteAlquilerDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea cancelar el alquiler No. <b>{alquiler.idFactura}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={facturaDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReport}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportAlquiler\n                        factura={reporteFactura}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n\n        </div>\n    </div>\n  \n)\n}\n\nexport default Alquiler;","import React, {useState, useEffect} from 'react';\nimport Venta from './venta/Venta';\nimport Alquiler from './alquiler/Alquiler';\nimport { Chart } from 'primereact/chart';\nimport * as ServiceGlobal from '../components/ServiceGlobal';\n\n\n\nconst PrincipalVentas = () => {\n    const [flagVenta, setFlagVenta] = useState(false);\n    const [flagAlquiler, setFlagAlquiler] = useState(false);\n\n    const [titulos, setTitulos] = useState([]);\n    const [total, setTotal] = useState([]);\n\n    const [titulosAlquiler, setTitulosAlquiler] = useState([]);\n    const [totalAlquiler, setTotalAlquiler] = useState([]);\n\n    const pieData = {\n        labels: titulos,\n        datasets: [\n            {\n                data: total,\n                backgroundColor: [\n                    \"#FF6384\",\n                    \"#36A2EB\",\n                    \"#FFCE56\",\n                    \"#C124F3\", \n                    \"#F3242D\",\n                    \"#F324CD\",\n                    \"#2424F3\",\n                    \"#24A8F3\",\n                    \"#F324D7\",\n                    \"#F37F24\"\n                ],\n            }\n        ]\n    };\n\n    const pieDataAlquiler = {\n        labels: titulosAlquiler,\n        datasets: [\n            {\n                data: totalAlquiler,\n                backgroundColor: [\n                    \"#F37F24\",\n                    \"#24A8F3\",\n                    \"#F3242D\",\n                    \"#2424F3\",\n                    \"#F324D7\",\n                    \"#FF6384\",\n                    \"#36A2EB\",\n                    \"#FFCE56\",\n                    \"#C124F3\", \n                    \n                    \n                ],\n            }\n        ]\n    };\n\n    useEffect(() => {\n        productosMasVendidos();\n        productosMasAlquilados();\n    }, []);\n    \n\n    const directVenta = () => {\n        setFlagVenta(true);\n    }\n\n    const directAlquiler = () => {\n        setFlagAlquiler(true);\n    }\n\n    const productosMasVendidos = async () => {\n        const resp = await ServiceGlobal.productosMasVendidos();\n        if (resp.valid) {\n            let titulos = [];\n            let totales = [];\n            resp.data.forEach( item => {\n                titulos.push(item.producto);\n                totales.push(item.total);\n            });\n            setTitulos(titulos);\n            setTotal(totales);\n        }\n    }\n\n    const productosMasAlquilados = async () => {\n        const resp = await ServiceGlobal.productosMasAlquilados();\n        if (resp.valid) {\n            let titulos = [];\n            let totales = [];\n            resp.data.forEach( item => {\n                titulos.push(item.producto);\n                totales.push(item.total);\n            });\n            setTitulosAlquiler(titulos);\n            setTotalAlquiler(totales);\n        }\n    }\n\n    return (\n        <div className=\"grid crud-demo\">\n            {\n                !flagVenta && !flagAlquiler ? (\n                    <>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card card-w-title\" onClick={directVenta}>\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/ventaProducto.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">VENTA</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={directAlquiler}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/alquiler.png\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">ALQUILER</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card flex flex-column align-items-center\">\n                            <h4>Productos Más Vendidos</h4>\n                            <Chart type=\"pie\" data={pieData} style={{ width: '50%' }} />\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-6\">\n                        <div className=\"card flex flex-column align-items-center\">\n                            <h4>Productos Más Alquilados</h4>\n                            <Chart type=\"pie\" data={pieDataAlquiler} style={{ width: '50%' }} />\n                        </div>\n                    </div>\n                    </>\n                        \n                ): null\n            }\n\n            {\n                flagVenta ? (\n                    <Venta \n                        setFlagVenta={setFlagVenta}\n                    />\n                ): null\n            }\n\n            {\n                flagAlquiler ? (\n                    <Alquiler\n                        setFlagAlquiler={setFlagAlquiler}\n                    />\n                ): null\n            }\n\n\n        </div>\n    )\n}\n\nexport default PrincipalVentas;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoVehiculo/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoVehiculo = () => {\n\n    let formTipoVehiculo = {\n        nombre: \"\",\n        descripcion: \"\",\n        ejes: \"\",\n        toneladas: \"\"\n    };\n\n    const [tipoVehiculos, setTipoVehiculos] = useState(null);\n    const [tipoVehiculoDialog, setTipoVehiculoDialog] = useState(false);\n    const [deleteTipoVehiculoDialog, setDeleteTipoVehiculoDialog] = useState(false);\n    const [tipoVehiculo, setTipoVehiculo] = useState(formTipoVehiculo);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoVehiculos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoVehiculo(formTipoVehiculo);\n        setSubmitted(false);\n        setTipoVehiculoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoVehiculoDialog(false);\n    }\n\n    const hideDeleteTipoVehiculoDialog = () => {\n        setDeleteTipoVehiculoDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoVehiculo.nombre) {\n             if (tipoVehiculo.idTipoVehiculo) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoVehiculo);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoVehiculo);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoVehiculo = (tipoVehiculo) => {\n        setTipoVehiculo({ ...tipoVehiculo });\n        setTipoVehiculoDialog(true);\n    }\n\n    const confirmDeletetipoVehiculo = (tipoVehiculo) => {\n        setTipoVehiculo(tipoVehiculo);\n        setDeleteTipoVehiculoDialog(true);\n    }\n\n    const deletetipoVehiculo = async () => {\n        let resp = await Service.deleteById(tipoVehiculo);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoVehiculoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoVehiculo({\n            ...tipoVehiculo,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoVehiculo}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const ejesBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Ejes</span>\n                {rowData.ejes}\n            </>\n        );\n    }\n\n    const toneladasBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Toneladas</span>\n                {rowData.toneladas}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoVehiculo(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoVehiculo(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Vehiculos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoVehiculoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoVehiculo.idTipoVehiculo ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoVehiculoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoVehiculoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoVehiculo} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoVehiculos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoVehiculos\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoVehiculos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoVehiculo\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"ejes\" header=\"Ejes\" sortable body={ejesBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"toneladas\" header=\"Toneladas\" sortable body={toneladasBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoVehiculoDialog} style={{ width: '450px' }} header={tipoVehiculo.idTipoVehiculo ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoVehiculoDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoVehiculo.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !tipoVehiculo.nombre })} \n                            />\n                            { submitted &&  !tipoVehiculo.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"ejes\">Ejes</label>\n                            <InputText \n                                id=\"ejes\" \n                                name=\"ejes\"\n                                type=\"number\"\n                                value={tipoVehiculo.ejes} \n                                onChange={onInputChange} \n                                required \n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"toneladas\">Toneladas</label>\n                            <InputText \n                                id=\"toneladas\" \n                                name=\"toneladas\"\n                                type=\"number\"\n                                value={tipoVehiculo.toneladas} \n                                onChange={onInputChange} \n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoVehiculo.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoVehiculoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoVehiculoDialogFooter} onHide={hideDeleteTipoVehiculoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoVehiculo && <span>Desea eliminar este item: <b>{tipoVehiculo.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoVehiculo","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/vehiculo/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoVehiculo from \"../tipoVehiculo/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst Vehiculo = () => {\n  let formVehiculo = {\n    idTipoVehiculo: \"\",\n    placa: \"\",\n    marca: \"\",\n    modelo: \"\",\n    color: \"\",\n    descripcion: \"\",\n};\n\nconst [vehiculos, setVehiculos] = useState(null);\nconst [tipoVehiculos, setTipoVehiculos] = useState([]);\nconst [vehiculoDialog, setVehiculoDialog] = useState(false);\nconst [deleteVehiculoDialog, setDeleteVehiculoDialog] = useState(false);\nconst [vehiculo, setVehiculo] = useState(formVehiculo);\nconst [submitted, setSubmitted] = useState(false);\nconst [globalFilter, setGlobalFilter] = useState(null);\nconst toast = useRef(null);\nconst dt = useRef(null);\n\nuseEffect(() => {\n    list();\n    listTipoVehiculos();\n}, []);\n\nconst list = async()  => {\n    let resp = await Service.list();\n    if (resp.valid) {\n        setVehiculos(resp.data);\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst listTipoVehiculos = async()  => {\n  let resp = await ServiceTipoVehiculo.list();\n  if (resp.valid) {\n      setTipoVehiculos(resp.data);\n  } else {\n      toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n  }\n}\n\n\nconst openNew = () => {\n    setVehiculo(formVehiculo);\n    setSubmitted(false);\n    setVehiculoDialog(true);\n}\n\nconst hideDialog = () => {\n    setSubmitted(false);\n    setVehiculoDialog(false);\n}\n\nconst hideDeleteVehiculoDialog = () => {\n    setDeleteVehiculoDialog(false);\n}\n\nconst submit = () => {\n    if (vehiculo.idTipoVehiculo && vehiculo.placa && vehiculo.marca && vehiculo.modelo && vehiculo.color) {\n         if (vehiculo.idVehiculo) {\n             edit();\n         } else {\n             save();\n         }\n    } \n}\n\nconst save = async () => {\n    let resp = await Service.save(vehiculo);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\nconst edit = async () => {\n    let resp = await Service.update(vehiculo);\n    if ( resp.valid ){\n        list();\n        hideDialog();\n        toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n    }\n}\n\n\n\nconst editVehiculo = (vehiculo) => {\n    setVehiculo({ ...vehiculo });\n    setVehiculoDialog(true);\n}\n\nconst confirmDeleteVehiculo = (vehiculo) => {\n    setVehiculo(vehiculo);\n    setDeleteVehiculoDialog(true);\n}\n\nconst deleteVehiculo = async () => {\n    let resp = await Service.deleteById(vehiculo);\n    if ( resp.valid ) {\n        list();\n        setDeleteVehiculoDialog(false);\n        toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n    } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n    }\n\n}\n\n\n\nconst onInputChange = (e) => {\n    const { value, name } = e.target;\n    if ( name ==='disponible') {\n      setVehiculo({\n        ...vehiculo,\n        [name]: !value,\n    });\n    } else {\n      setVehiculo({\n          ...vehiculo,\n          [name]: value,\n      });\n    }\n    setSubmitted(true);\n}\n\n\nconst rightToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"my-2\">\n                <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst leftToolbarTemplate = () => {\n    return (\n        <React.Fragment>\n            <div className=\"my-2\">\n                Cada vehiculo se encuentra monitoreado por GPS-inversiones\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst idBodyTemplate = (rowData) => {\n    return (\n        <>\n            <span className=\"p-column-title\">ID</span>\n            {rowData.idVehiculo}\n        </>\n    );\n}\n\nconst tipoVehiculoBodyTemplate = (rowData) => {\n    return (\n        <>\n            <span className=\"p-column-title\">Tipo Vehiculo</span>\n            {rowData.tipoVehiculo}\n        </>\n    );\n}\n\nconst placaBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Placa</span>\n          {rowData.placa}\n      </>\n  );\n}\n\nconst marcaBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Marca</span>\n          {rowData.marca}\n      </>\n  );\n}\n\nconst modeloBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Modelo</span>\n          {rowData.modelo}\n      </>\n  );\n}\n\nconst colorBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Color</span>\n          {rowData.color}\n      </>\n  );\n}\n\nconst disponibleBodyTemplate = (rowData) => {\n  return (\n      <>\n          <span className=\"p-column-title\">Disponible</span>\n          {rowData.disponible ? \"DISPONIBLE\" : \"NO DISPONIBLE\"}\n      </>\n  );\n}\n\n\n\nconst actionBodyTemplate = (rowData) => {\n    return (\n        <div className=\"actions\">\n            <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editVehiculo(rowData)} />\n            <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteVehiculo(rowData)} />\n        </div>\n    );\n}\n\nconst header = (\n    <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n        <h5 className=\"m-0\">Vehiculos</h5>\n        <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n            <i className=\"pi pi-search\" />\n            <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n        </span>\n    </div>\n);\n\nconst vehiculoDialogFooter = (\n    <>\n        <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n        <Button label={vehiculo.idVehiculo ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n    </>\n);\nconst deleteVehiculoDialogFooter = (\n    <>\n        <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteVehiculoDialog} />\n        <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteVehiculo} />\n    </>\n);\n\nreturn (\n    <div className=\"grid crud-demo\">\n        <div className=\"col-12\">\n            <div className=\"card\">\n                <Toast ref={toast} />\n                <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                <DataTable ref={dt} value={vehiculos}\n                    dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                    currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} vehiculos\"\n                    globalFilter={globalFilter} emptyMessage=\"No vehiculos found.\" header={header} responsiveLayout=\"scroll\">\n\n                    <Column field=\"idVehiculo\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                    <Column field=\"tipoVehiculo\" header=\"Tipo Vehiculo\" sortable body={tipoVehiculoBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                    <Column field=\"placa\" header=\"Placa\" body={placaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"marca\" header=\"Marca\" body={marcaBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"modelo\" header=\"Modelo\" body={modeloBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"color\" header=\"Color\" body={colorBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column field=\"disponible\" header=\"Disponibilidad\" body={disponibleBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                    <Column body={actionBodyTemplate}></Column>\n                </DataTable>\n\n                <Dialog visible={vehiculoDialog} style={{ width: '450px' }} header={vehiculo.idVehiculo ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={vehiculoDialogFooter} onHide={hideDialog}>\n                    \n                    <div className=\"formgrid grid\">\n                      <div className=\"field col\">\n                        <label htmlFor=\"descripcion\">Tipo Vehiculo*</label>\n                        <Select \n                            value={vehiculo.idTipoVehiculo} \n                            className=\"w-full\"\n                            id=\"idTipoVehiculo\" \n                            name=\"idTipoVehiculo\" \n                            onChange={onInputChange}>\n                            {tipoVehiculos.map((item, index) => (\n                                <MenuItem value={item.idTipoVehiculo} key={index}>\n                                    {item.nombre}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        { submitted &&  !vehiculo.idTipoVehiculo && <small className=\"p-invalid\">Tipo de Vehiculo es requerida.</small>}\n                      </div>\n                      <div className=\"field col\">\n                        <label htmlFor=\"nombre\">Placa*</label>\n                          <TextField \n                              id=\"placa\" \n                              name=\"placa\"\n                              value={vehiculo.placa} \n                              onChange={onInputChange} \n                              required \n                              className={classNames({ 'p-invalid': submitted && !vehiculo.placa })} \n                          />\n                          { submitted &&  !vehiculo.placa && <small className=\"p-invalid\">Placa es requerido.</small>}\n                      </div>\n                    </div>\n\n                    <div className=\"formgrid grid\">\n                      <div className=\"field col\">\n                        <label htmlFor=\"marca\">Marca*</label>\n                        <TextField \n                              id=\"marca\" \n                              name=\"marca\"\n                              value={vehiculo.marca} \n                              onChange={onInputChange} \n                              required \n                              fullWidth\n                              className={classNames({ 'p-invalid': submitted && !vehiculo.marca })} \n                        />\n                        { submitted &&  !vehiculo.marca && <small className=\"p-invalid\">Marca es requerido.</small>}\n                      </div>\n                      <div className=\"field col\">\n                        <label htmlFor=\"nombre\">Modelo*</label>\n                          <TextField \n                              id=\"modelo\" \n                              name=\"modelo\"\n                              type=\"number\"\n                              value={vehiculo.modelo} \n                              onChange={onInputChange} \n                              required \n                              autoFocus \n                              className={classNames({ 'p-invalid': submitted && !vehiculo.modelo })} \n                          />\n                          { submitted &&  !vehiculo.modelo && <small className=\"p-invalid\">Modelo es requerido.</small>}\n                      </div>\n                    </div>\n\n\n                    <div className=\"field\">\n                        <label htmlFor=\"color\">Color*</label>\n                        <TextField \n                              id=\"color\" \n                              name=\"color\"\n                              value={vehiculo.color} \n                              onChange={onInputChange} \n                              required \n                              autoFocus \n                              fullWidth\n                              className={classNames({ 'p-invalid': submitted && !vehiculo.color })} \n                        />\n                        { submitted &&  !vehiculo.color && <small className=\"p-invalid\">Color es requerido.</small>}\n                      \n                    </div>\n\n\n\n\n                    <div className=\"field\">\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                        <InputTextarea \n                            id=\"descripcion\" \n                            name=\"descripcion\"\n                            value={vehiculo.descripcion} \n                            onChange={onInputChange} \n                            required \n                            rows={3} \n                            cols={20} \n                        />\n                    </div>\n                </Dialog>\n\n                <Dialog visible={deleteVehiculoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteVehiculoDialogFooter} onHide={hideDeleteVehiculoDialog}>\n                    <div className=\"flex align-items-center justify-content-center\">\n                        <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                        {vehiculo && <span>Desea eliminar este item: <b>{vehiculo.nombre}</b>?</span>}\n                    </div>\n                </Dialog>\n\n            </div>\n        </div>\n    </div>\n)\n}\n\nexport default Vehiculo;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/viaje/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/viaje/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/viaje/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/viaje/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cargamento/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceCargamento from \"../cargamento/Service\";\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst Viaje = () => {\n    let formViaje = {\n        idCargamento: \"\",\n        idCliente: \"\",\n        origen:\"\",\n        destino:\"\",\n        fechaInicio:\"\",\n        fechaFin:\"\",\n        kilometros:\"\",\n        toneladas:\"\",\n        precio:\"\"\n    };\n\n    const [viajes, setViajes] = useState(null);\n    const [cargamentos, setCargamentos] = useState([]);\n    const [clientes, setClientes] = useState([]);\n    const [viajeDialog, setViajeDialog] = useState(false);\n    const [deleteViajeDialog, setDeleteViajeDialog] = useState(false);\n    const [viaje, setViaje] = useState(formViaje);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n        listCargamento();\n    }, []);\n\n    useEffect(() => {\n        if (viaje.idCargamento){\n            viaje.idCargamento === 1 ? listCliente(4) : listCliente(5)\n        }\n    }, [viaje.idCargamento]);\n    \n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setViajes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCargamento = async() => {\n        let resp = await ServiceCargamento.list();\n        if (resp.valid) {\n            setCargamentos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listCliente = async(id) => {\n        let aux = {idNegocio: id}\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setViaje(formViaje);\n        setSubmitted(false);\n        setViajeDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setViajeDialog(false);\n    }\n\n    const hideDeleteViajeDialog = () => {\n        setDeleteViajeDialog(false);\n    }\n\n    const submit = () => {\n        if (viaje.idCargamento && viaje.idCliente && viaje.origen && viaje.destino && viaje.kilometros && viaje.toneladas && viaje.precio ) {\n             if (viaje.idViaje) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(viaje);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(viaje);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editViaje = (viaje) => {\n        setViaje({ ...viaje });\n        setViajeDialog(true);\n    }\n\n    const confirmDeleteViaje = (viaje) => {\n        setViaje(viaje);\n        setDeleteViajeDialog(true);\n    }\n\n    const deleteViaje = async () => {\n        let resp = await Service.deleteById(viaje);\n        if ( resp.valid ) {\n            list();\n            setDeleteViajeDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setViaje({\n            ...viaje,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idViaje}\n            </>\n        );\n    }\n\n    const cargamentoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cargamento</span>\n                {rowData.cargamento}\n            </>\n        );\n    }\n\n\n    const clienteBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cliente</span>\n                {rowData.cliente}\n            </>\n        );\n    }\n\n    const trayectoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Trayecto</span>\n                <b>Origen: </b>{rowData.origen}\n                <br />\n                <b>Destino: </b>{rowData.destino}\n            </>\n        );\n    }\n\n    const fechaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Duración</span>\n                <b>Fecha Inicio: </b>{rowData.fechaInicio}\n                <br />\n                <b>Fecha Fin: </b>{rowData.fechaFin}\n            </>\n        );\n    }\n\n\n    const toneladasBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Toneladas</span>\n                {rowData.toneladas}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {rowData.precio}\n            </>\n        );\n    }\n\n    const estadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Estado</span>\n                {rowData.estado === 1 ? \"NO ASIGNADO\" : rowData.estado === 2 ? \"ASIGNADO\" : \"COMPLETADO\"}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                {\n                    rowData.estado === 1 ? (\n                        <>\n                        <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editViaje(rowData)} />\n                        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteViaje(rowData)} />\n                        </>\n                    ):null\n                }\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Viajes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const viajeDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={viaje.idViaje ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteViajeDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteViajeDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteViaje} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={viajes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} viajes\"\n                        globalFilter={globalFilter} emptyMessage=\"No viajes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idViaje\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"cargamento\" header=\"Cargamento\" sortable body={cargamentoBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"cliente\" header=\"Cliente\" body={clienteBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"trayecto\" header=\"Trayecto\" sortable body={trayectoBodyTemplate} headerStyle={{ width: '20%', minWidth: '10rem' }}></Column>\n                        <Column field=\"duracion\" header=\"Duración\" sortable body={fechaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"toneladas\" header=\"Toneladas\" sortable body={toneladasBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" sortable body={precioBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"estado\" header=\"Estado\" sortable body={estadoBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={viajeDialog} style={{ width: '450px' }} header={viaje.idViaje ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={viajeDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Cargamento*</label>\n                            <Select \n                                value={viaje.idCargamento} \n                                className=\"w-full\"\n                                id=\"idCargamento\" \n                                name=\"idCargamento\" \n                                onChange={onInputChange}\n                            >\n                                {cargamentos.map((item, index) => (\n                                    <MenuItem value={item.idCargamento} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !viaje.idCargamento && <small className=\"p-error\">Cargamento es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"quantity\">Cliente</label>\n                            <Select \n                                value={viaje.idCliente} \n                                className=\"w-full\"\n                                id=\"idCliente\" \n                                name=\"idCliente\" \n                                onChange={onInputChange}\n                            >\n                                {clientes.map((item, index) => (\n                                    <MenuItem value={item.idCliente} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !viaje.idCliente && <small className=\"p-error\">Cliente es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Origen*</label>\n                            <TextField \n                                id=\"origen\" \n                                name=\"origen\"\n                                value={viaje.origen} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.origen })} \n                            />\n                            { submitted &&  !viaje.origen && <small className=\"p-error\">Origen es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Destino*</label>\n                            <TextField \n                                id=\"destino\" \n                                name=\"destino\"\n                                value={viaje.destino} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.destino })} \n                            />\n                            { submitted &&  !viaje.destino && <small className=\"p-error\">Destino es requerido.</small>}\n                        </div>\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Fecha Inicio</label>\n                                <TextField \n                                    id=\"fechaInicio\" \n                                    name=\"fechaInicio\"\n                                    type=\"date\"\n                                    value={viaje.fechaInicio} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.fechaInicio })} \n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Fecha Fin</label>\n                                <TextField \n                                    id=\"fechaFin\" \n                                    name=\"fechaFin\"\n                                    type=\"date\"\n                                    value={viaje.fechaFin} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.fechaFin })} \n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Kilometros aprox</label>\n                                <TextField \n                                    id=\"kilometros\" \n                                    name=\"kilometros\"\n                                    type=\"number\"\n                                    value={viaje.kilometros} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.kilometros })} \n                                />\n                                { submitted &&  !viaje.kilometros && <small className=\"p-error\">Kilometros es requerido.</small>}\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"origen\">Toneladas</label>\n                                <TextField \n                                    id=\"toneladas\" \n                                    name=\"toneladas\"\n                                    type=\"numeber\"\n                                    value={viaje.toneladas} \n                                    onChange={onInputChange} \n                                    required \n                                    fullWidth\n                                    className={classNames({ 'p-error': submitted && !viaje.toneladas })} \n                                />\n                                { submitted &&  !viaje.toneladas && <small className=\"p-error\">Toneladas es requerido.</small>}\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"origen\">Precio</label>\n                            <TextField \n                                id=\"precio\" \n                                type=\"number\"\n                                name=\"precio\"\n                                value={viaje.precio} \n                                onChange={onInputChange} \n                                required \n                                fullWidth\n                                className={classNames({ 'p-error': submitted && !viaje.precio })} \n                            />\n                            { submitted &&  !viaje.precio && <small className=\"p-error\">Precio es requerido.</small>}\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteViajeDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteViajeDialogFooter} onHide={hideDeleteViajeDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {viaje && <span>Desea eliminar este item: <b>{viaje.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Viaje;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/cliente/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listTrasnporte(obj) {\n    let respuesta = await axios.post(URL + `/cliente/listCondicion`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/cliente/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/cliente/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/cliente/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\n\nconst ClienteTransporte = (props) => {\n  \n    let formCliente = {\n        idNegocio: \"\",\n        nombre: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        telefono: null\n    };\n\n    const negocios = [\n        {\n            idNegocio: 4,\n            nombre: \"TRANSPORTE DE MATERIA PRIMA\"\n        },\n        {\n            idNegocio: 5,\n            nombre: \"TRANSPORTE DE PRODUCTOS\"\n        }\n    ];\n\n    const [clientes, setClientes] = useState(null);\n    const [clienteDialog, setClienteDialog] = useState(false);\n    const [deleteClienteDialog, setDeleteClienteDialog] = useState(false);\n    const [cliente, setCliente] = useState(formCliente);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n      list();\n    }, []);\n    \n\n    const list = async()  => {\n        let aux = {idPrimero: 4, idSegundo: 5}\n        let resp = await Service.listTrasnporte(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setCliente(formCliente);\n        setSubmitted(false);\n        setClienteDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setClienteDialog(false);\n    }\n\n    const hideDeleteClienteDialog = () => {\n        setDeleteClienteDialog(false);\n    }\n\n    const submit = () => {\n        if (cliente.nombre  && cliente.nit && cliente.direccion && cliente.email && cliente.idNegocio) {\n             if (cliente.idCliente) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(cliente);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editCliente = (cliente) => {\n        setCliente({ ...cliente });\n        setClienteDialog(true);\n    }\n\n    const confirmDeleteCliente = (cliente) => {\n        setCliente(cliente);\n        setDeleteClienteDialog(true);\n    }\n\n    const deleteCliente = async () => {\n        let resp = await Service.deleteById(cliente);\n        if ( resp.valid ) {\n            list();\n            setDeleteClienteDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setCliente({\n            ...cliente,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idCliente}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre} \n            </>\n        );\n    }\n\n\n    const nitBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nit</span>\n                {rowData.dpi}\n            </>\n        );\n    }\n\n    const telefonoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Telefono</span>\n                {rowData.telefono}\n            </>\n        );\n    }\n\n    const emailBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Email</span>\n                {rowData.email}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editCliente(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteCliente(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Clientes</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const clienteDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={cliente.idCliente ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteClienteDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteClienteDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteCliente} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={clientes}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} clientes\"\n                        globalFilter={globalFilter} emptyMessage=\"No clientes found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idCliente\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"negocio\" header=\"Negocio\" sortable  headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nit\" header=\"Nit\" body={nitBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"telefono\" header=\"Telefono\" body={telefonoBodyTemplate} sortable headerStyle={{ width: '20%', minWidth: '8rem' }}></Column>\n                        <Column field=\"email\" header=\"Email\" body={emailBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={clienteDialog} style={{ width: '450px' }} header={cliente.idCliente ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={clienteDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Negocio*</label>\n                            <Select \n                                value={cliente.idNegocio} \n                                className=\"w-full\"\n                                id=\"idNegocio\" \n                                name=\"idNegocio\" \n                                onChange={onInputChange}>\n                                {negocios.map((item, index) => (\n                                    <MenuItem value={item.idNegocio} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !cliente.idNegocio && <small className=\"p-invalid\">Negocio es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre Empresa</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={cliente.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-invalid': submitted && !cliente.nombre })} \n                            />\n                            { submitted &&  !cliente.nombre && <small className=\"p-invalid\">Nombre es requerido.</small>}\n                        </div>\n                        \n                        <div className='field'>\n                            <label htmlFor=\"quantity\">NIT</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"nit\"\n                                name=\"nit\"\n                                value={ cliente.nit }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                                className=\"w-full\"\n                            />\n                            { submitted &&  !cliente.nit && <small className=\"p-invalid\">Nit es requerido.</small>}\n\n                        </div>\n\n                        <div className=\"field\">\n                                <label htmlFor=\"nombre\">Dirección</label>\n                                <InputText \n                                    id=\"direccion\" \n                                    name=\"direccion\"\n                                    value={cliente.direccion} \n                                    onChange={onInputChange} \n                                    required \n                                    className={classNames({ 'p-invalid': submitted && !cliente.direccion })} \n                                />\n                                { submitted &&  !cliente.direccion && <small className=\"p-invalid\">Direccion es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Email</label>\n                                <TextField\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    className=\"w-full\"\n                                    value={ cliente.email }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                                { submitted &&  !cliente.email && <small className=\"p-invalid\">Email es requerido.</small>}\n                            </div>\n                            <div className=\"field\">\n                                <label htmlFor=\"nombre\">Telefono</label>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"telefono\"\n                                    name=\"telefono\"\n                                    className=\"w-full\"\n                                    value={ cliente.telefono }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                             </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteClienteDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteClienteDialogFooter} onHide={hideDeleteClienteDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {cliente && <span>Desea eliminar este item: <b>{cliente.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClienteTransporte;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function empezarRuta(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/empezarRuta`, obj);\n\treturn respuesta.data;\n}\n\nexport async function terminarRuta(obj) {\n    let respuesta = await axios.post(URL + `/asignacion/terminarRuta`, obj);\n\treturn respuesta.data;\n}","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportAsignacion = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:55, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>REPORTE DE ASIGNACIONES</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Listado de asignaciones en sus diversas etapas</Text>\n                </View>\n                \n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.asignaciones}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Vehiculo\n                            </TableCell>\n                            <TableCell>\n                                Ruta\n                            </TableCell>\n                            <TableCell>\n                                Cliente\n                            </TableCell>\n                            <TableCell>\n                                Cargamento\n                            </TableCell>\n                            <TableCell>\n                                Piloto\n                            </TableCell>\n                            <TableCell>\n                                Estado\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idAsignacion}/>\n                        <DataTableCell getContent={(r) => r.placa}/>\n                        <DataTableCell getContent={(r) => r.destino}/>\n                        <DataTableCell getContent={(r) => r.cliente}/>\n                        <DataTableCell getContent={(r) => r.cargamento}/>\n                        <DataTableCell getContent={(r) => r.empleado}/>\n                        <DataTableCell getContent={(r) => r.estado === 1 ? \"EN ESPERA\": r.estado === 2 ? \"EN RUTA\" : \"FINALIZADO\"}/>\n                            \n                        </TableBody>\n                    </Table>\n     \n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportAsignacion;","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceViaje from \"../viaje/Service\";\nimport { MenuItem, Select } from '@mui/material';\nimport * as ServiceVehiculo from \"../vehiculo/Service\";\nimport * as ServiceEmpleado from \"../../user/empleado/Service\";\n\nimport ReportAsignacion from './ReportAsignacion';\nimport { PDFViewer } from '@react-pdf/renderer';\n\n\nconst Asignacion = () => {\n\n    let formAsignacion = {\n        idViaje: \"\",\n        idVehiculo: \"\",\n        idEmpleado: \"\"\n    };\n\n    const [asignaciones, setAsignaciones] = useState(null);\n    const [asignacionDialog, setAsignacionDialog] = useState(false);\n    const [deleteAsigncionDialog, setDeleteAsigncionDialog] = useState(false);\n    const [asignacion, setAsignacion] = useState(formAsignacion);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [viajes, setViajes] = useState([]);\n    const [vehiculos, setVehiculos] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n\n    const [viaje, setViaje] = useState(\"\");\n\n    const [asignacionReportDialog, setasignacionReportDialog] = useState(false);\n    const [empezarDialog, setEmpezarDialog] = useState(false);\n    const [terminarDialog, setTerminarDialog] = useState(false);\n\n    useEffect(() => {\n        list();\n        listViajes();\n    }, []);\n\n    useEffect(() => {\n       if (viaje) {\n           listVehiculos(viaje.toneladas);\n\n           if (viaje.idCargamento === 1) { \n               listEmpleados(2);\n            } else if (viaje.idCargamento === 2) {\n                listEmpleados(3);\n            }\n       }\n    }, [viaje]);\n    \n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setAsignaciones(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listViajes = async()  => {\n        let aux = {estado: 1}\n        let resp = await ServiceViaje.list(aux);\n        if (resp.valid) {\n            setViajes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listVehiculos = async(capacidad)  => {\n        let aux = {disponible: 1, toneladas: capacidad }\n        let resp = await ServiceVehiculo.list(aux);\n        if (resp.valid) {\n            setVehiculos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async(idArea)  => {\n        let aux = {\n            idRol: 8,\n            idAreaNegocio: idArea\n        }\n        let resp = await ServiceEmpleado.listByRolByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setAsignacion(formAsignacion);\n        setSubmitted(false);\n        setAsignacionDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setAsignacionDialog(false);\n    }\n\n    const hideDeleteAsigncionDialog = () => {\n        setDeleteAsigncionDialog(false);\n    }\n\n    const submit = () => {\n        if (asignacion.idVehiculo && asignacion.idEmpleado && asignacion.idViaje) {\n             if (asignacion.idAsignacion) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(asignacion);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(asignacion);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const confirmDeleteasignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setDeleteAsigncionDialog(true);\n    }\n\n    const confirmEmpezarAsignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setEmpezarDialog(true);\n    }\n\n    const confirmFinalizarAsignacion = (asignacion) => {\n        setAsignacion(asignacion);\n        setTerminarDialog(true);\n    }\n\n    \n\n    const deleteasignacion = async () => {\n        let resp = await Service.deleteById(asignacion);\n        if ( resp.valid ) {\n            list();\n            setDeleteAsigncionDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const empezarAsignacion = async () => {\n        let resp = await Service.empezarRuta(asignacion);\n        if ( resp.valid ) {\n            list();\n            setEmpezarDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Buen Viaje', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const terminarAsignacion = async () => {\n        let resp = await Service.terminarRuta(asignacion);\n        if ( resp.valid ) {\n            list();\n            setTerminarDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Ha finalizado el viaje con exito', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setAsignacion({\n            ...asignacion,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const hideEmpezarDialog = () => {\n        setEmpezarDialog(false);\n    }\n\n    const hideTerminarDialog = () => {\n        setTerminarDialog(false);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"REPORTE\" icon=\"pi pi-file-pdf\" className=\"p-button-info mr-2\" onClick={()=>{setasignacionReportDialog(true)}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const estadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Estado</span>\n                {rowData.estado === 1 ? \"EN ESPERA\" : rowData.estado === 2 ? \"EN RUTA\" : \"FINALIZADO\"}\n            </>\n        );\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                \n                {\n                    rowData.estado === 2 ? (\n                        <Button icon=\"pi pi-check-circle\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => confirmFinalizarAsignacion(rowData)} />\n                    ):null\n                }\n                {\n                    rowData.estado === 1 ? (\n                        <>\n                        <Button icon=\"pi pi-play\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => confirmEmpezarAsignacion(rowData)} />\n                        <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteasignacion(rowData)} />\n                        </>\n                    ):null\n                }\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Asignaciones</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const asignacionDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={asignacion.idAsignacion ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteAsigncionDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteAsigncionDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteasignacion} />\n        </>\n    );\n\n    const empezarRutaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideEmpezarDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={empezarAsignacion} />\n        </>\n    );\n\n    const terminarRutaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideTerminarDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={terminarAsignacion} />\n        </>\n    );\n\n    const hideDialogReporte = () => {\n        setasignacionReportDialog(false);\n    }\n\n\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={asignaciones}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} asignaciones\"\n                        globalFilter={globalFilter} emptyMessage=\"No asignaciones found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idAsignacion\" header=\"ID\" sortable></Column>\n                        <Column field=\"placa\" header=\"Placa Vehiculo\" sortable ></Column>\n                        <Column field=\"origen\" header=\"Origen\" ></Column>\n                        <Column field=\"destino\" header=\"Destino\" ></Column>\n                        <Column field=\"precio\" header=\"Precio\" ></Column>\n                        <Column field=\"cliente\" header=\"Cliente\" ></Column>\n                        <Column field=\"cargamento\" header=\"Tipo Cargamento\" ></Column>\n                        <Column field=\"empleado\" header=\"Piloto\" ></Column>\n                        <Column field=\"estado\" header=\"Estado\" body={estadoBodyTemplate} ></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={asignacionDialog} style={{ width: '700px' }} header={asignacion.idAsignacion ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={asignacionDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Viaje*</label>\n                            <Select \n                                value={asignacion.idViaje} \n                                className=\"w-full\"\n                                id=\"idViaje\" \n                                name=\"idViaje\" \n                                label=\"Cliente*\"\n                                onChange={onInputChange}\n                            >\n                                {viajes.map((item, index) => (\n                                    <MenuItem value={item.idViaje} key={index} onClick={()=>{setViaje(item)}}>\n                                        {item.origen +\" - \"+ item.destino + \" Cargamento: \" + item.cargamento}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idViaje && <small className=\"p-error\">Viaje es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Vehiculo*</label>\n                            <Select \n                                value={asignacion.idVehiculo} \n                                className=\"w-full\"\n                                id=\"idVehiculo\" \n                                name=\"idVehiculo\" \n                                onChange={onInputChange}\n                            >\n                                {vehiculos.map((item, index) => (\n                                    <MenuItem value={item.idVehiculo} key={index}>\n                                        {\"PLACA: \" + item.placa +\" - MARCA: \"+ item.marca + \" - MODELO: \" + item.modelo}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idVehiculo && <small className=\"p-error\">Vehiculo es requerido.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Piloto*</label>\n                            <Select \n                                value={asignacion.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChange}\n                            >\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre +\" \"+ item.apellido}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !asignacion.idEmpleado && <small className=\"p-error\">Piloto es requerido.</small>}\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteAsigncionDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteAsigncionDialogFooter} onHide={hideDeleteAsigncionDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {asignacion && <span>Desea eliminar este item: <b>{asignacion.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={asignacionReportDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReporte}>\n                        <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                            <ReportAsignacion \n                                asignaciones={asignaciones}\n                            />\n                        </PDFViewer>\n                    </Dialog>\n\n                    <Dialog visible={empezarDialog} style={{ width: '450px' }} modal className=\"p-fluid\" footer={empezarRutaDialogFooter} onHide={hideEmpezarDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {<span>Esta seguro de iniciar la Ruta?</span>}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={terminarDialog} style={{ width: '450px' }} modal className=\"p-fluid\" footer={terminarRutaDialogFooter} onHide={hideTerminarDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {<span>Esta seguro de finalizar la Ruta?</span>}\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Asignacion;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoObra/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoObra = () => {\n\n    let formTipoObra = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoObras, setTipoObras] = useState(null);\n    const [tipoObraDialog, setTipoObraDialog] = useState(false);\n    const [deletetipoTipoObraDialog, setDeletetipoTipoObraDialog] = useState(false);\n    const [tipoObra, setTipoObra] = useState(formTipoObra);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoObra(formTipoObra);\n        setSubmitted(false);\n        setTipoObraDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoObraDialog(false);\n    }\n\n    const hideDeletetipoTipoObraDialog = () => {\n        setDeletetipoTipoObraDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoObra.nombre) {\n             if (tipoObra.idTipoObra) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoObra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoObra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoObra = (tipoObra) => {\n        setTipoObra({ ...tipoObra });\n        setTipoObraDialog(true);\n    }\n\n    const confirmDeletetipoObra = (tipoObra) => {\n        setTipoObra(tipoObra);\n        setDeletetipoTipoObraDialog(true);\n    }\n\n    const deletetipoObra = async () => {\n        let resp = await Service.deleteById(tipoObra);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoTipoObraDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoObra({\n            ...tipoObra,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoObra}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoObra(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoObra(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de obras</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoObraDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoObra.idTipoObra ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoTipoObraDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoTipoObraDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoObra} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoObras}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoObras\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoObras found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoObra\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoObraDialog} style={{ width: '450px' }} header={tipoObra.idTipoObra ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoObraDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoObra.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoObra.nombre })} \n                            />\n                            { submitted &&  !tipoObra.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoObra.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoTipoObraDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoTipoObraDialogFooter} onHide={hideDeletetipoTipoObraDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoObra && <span>Desea eliminar este item: <b>{tipoObra.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoObra;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaterial/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMaterial = () => {\n\n    let formTipoMaterial = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMateriales, setTipoMateriales] = useState(null);\n    const [tipoMaterialDialog, setTipoMaterialDialog] = useState(false);\n    const [deletetipoTipoMaterialDialog, setDeletetipoTipoMaterialDialog] = useState(false);\n    const [tipoMaterial, setTipoMaterial] = useState(formTipoMaterial);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMaterial(formTipoMaterial);\n        setSubmitted(false);\n        setTipoMaterialDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMaterialDialog(false);\n    }\n\n    const hideDeletetipoTipoMaterialDialog = () => {\n        setDeletetipoTipoMaterialDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMaterial.nombre) {\n             if (tipoMaterial.idTipoMaterial) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMaterial);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMaterial);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMaterial = (tipoMaterial) => {\n        setTipoMaterial({ ...tipoMaterial });\n        setTipoMaterialDialog(true);\n    }\n\n    const confirmDeletetipoMaterial = (tipoMaterial) => {\n        setTipoMaterial(tipoMaterial);\n        setDeletetipoTipoMaterialDialog(true);\n    }\n\n    const deletetipoMaterial = async () => {\n        let resp = await Service.deleteById(tipoMaterial);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoTipoMaterialDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMaterial({\n            ...tipoMaterial,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMaterial}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMaterial(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMaterial(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Materiales</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMaterialDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMaterial.idTipoMaterial ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoTipoMaterialDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoTipoMaterialDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMaterial} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMateriales}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMateriales\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMateriales found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMaterial\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMaterialDialog} style={{ width: '450px' }} header={tipoMaterial.idTipoMaterial ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMaterialDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMaterial.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMaterial.nombre })} \n                            />\n                            { submitted &&  !tipoMaterial.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMaterial.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoTipoMaterialDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoTipoMaterialDialogFooter} onHide={hideDeletetipoTipoMaterialDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMaterial && <span>Desea eliminar este item: <b>{tipoMaterial.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMaterial;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/material/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/material/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/material/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/material/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoMaterial from \"../tipoMaterial/Service\";\nimport { MenuItem, Select } from '@mui/material';\n\nconst Material = () => {\n\n    let formMaterial = {\n        idTipoMaterial: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        precio: \"\"\n    };\n\n    const [materiales, setMateriales] = useState(null);\n    const [materialDialog, setMaterialDialog] = useState(false);\n    const [deleteMaterialDialog, setDeleteMaterialDialog] = useState(false);\n    const [material, setMaterial] = useState(formMaterial);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tipoMateriales, setTipoMateriales] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMateriales();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMateriales = async()  => {\n        let resp = await ServiceTipoMaterial.list();\n        if (resp.valid) {\n            setTipoMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setMaterial(formMaterial);\n        setSubmitted(false);\n        setMaterialDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMaterialDialog(false);\n    }\n\n    const hideDeleteMaterialDialog = () => {\n        setDeleteMaterialDialog(false);\n    }\n\n    const submit = () => {\n        if (material.nombre && material.idTipoMaterial && material.precio) {\n             if (material.idMaterial) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(material);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(material);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmaterial = (material) => {\n        setMaterial({ ...material });\n        setMaterialDialog(true);\n    }\n\n    const confirmDeletematerial = (material) => {\n        setMaterial(material);\n        setDeleteMaterialDialog(true);\n    }\n\n    const deletematerial = async () => {\n        let resp = await Service.deleteById(material);\n        if ( resp.valid ) {\n            list();\n            setDeleteMaterialDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMaterial({\n            ...material,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMaterial}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const tipoMaterialBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tipo Material</span>\n                {rowData.tipoMaterial}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const precioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Precio</span>\n                {rowData.precio}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmaterial(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletematerial(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Materiales</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const materialDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={material.idMaterial ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMaterialDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMaterialDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletematerial} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={materiales}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} materiales\"\n                        globalFilter={globalFilter} emptyMessage=\"No materiales found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMaterial\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"idTipoMaterial\" header=\"Tipo Material\" body={tipoMaterialBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" body={precioBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={materialDialog} style={{ width: '450px' }} header={material.idMaterial ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={materialDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Tipo Material*</label>\n                            <Select \n                                value={material.idTipoMaterial} \n                                className=\"w-full\"\n                                id=\"idTipoMaterial\" \n                                name=\"idTipoMaterial\" \n                                autoFocus \n                                onChange={onInputChange}>\n                                {tipoMateriales.map((item, index) => (\n                                    <MenuItem value={item.idTipoMaterial} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !material.idTipoMaterial && <small className=\"p-invalid\">Tipo Material es requerida.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={material.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !material.nombre })} \n                            />\n                            { submitted &&  !material.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Precio*</label>\n                            <InputText \n                                id=\"precio\" \n                                name=\"precio\"\n                                type=\"number\"\n                                value={material.precio} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !material.precio })} \n                            />\n                            { submitted &&  !material.precio && <small className=\"p-error\">Precio es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={material.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMaterialDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMaterialDialogFooter} onHide={hideDeleteMaterialDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {material && <span>Desea eliminar este item: <b>{material.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Material;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/obra/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/obra/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/obra/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/obra/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/fase/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/fase/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/fase/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/fase/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByObra(obj) {\n    let respuesta = await axios.post(URL + `/fase/listByObra`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from './Service';\nconst Detalle = (props) => {\n    const [submitted, setSubmitted] = useState(false);\n    const [submittedMaterial, setSubmittedMaterial] = useState(false);\n    const [submittedManoObra, setSubmittedManoObra] = useState(false);\n\n    const [material, setMaterial] = useState(\"\");\n    const [manoObra, setManoObra] = useState(\"\");\n\n    const toast = useRef(null);\n\n    useEffect(() => {\n        props.setDetalleMaterial({\n            ...props.detalleMaterial,\n            precio: material.precio,\n            material: material.nombre\n        });\n        // eslint-disable-next-line\n    }, [material]);\n\n    useEffect(() => {\n        props.setManoObra({\n            ...props.manoObra,\n            empleado: manoObra.nombre + \" \" + manoObra.apellido\n        });\n        // eslint-disable-next-line\n    }, [manoObra]);\n\n    const clearMaterial = () => {\n        props.setDetalleMaterial(props.formDetalleMaterial);\n        setSubmittedMaterial(false);\n    }\n\n    const clearManoObra = () => {\n        props.setManoObra(props.formManoObra);\n        setSubmittedMaterial(false);\n    }\n\n    const clearEncabezado = () => {\n        props.setFase(props.formFase);\n        setSubmitted(false);\n    }\n\n    const back = () => {\n        clearMaterial();\n        clearEncabezado();\n        clearManoObra();\n        props.setFlagDetalle(false);\n    }\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n       \n        props.setFase({\n            ...props.fase,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n    const onInputChangeMaterial = (e) => {\n        const { value, name } = e.target;\n        if ( name === 'cantidad') {\n            props.setDetalleMaterial({\n                ...props.detalleMaterial,\n                cantidad: value,\n                precioTotal: value * props.detalleMaterial.precio\n            });\n\n        } else {\n            props.setDetalleMaterial({\n                ...props.detalleMaterial,\n                [name]: value,\n            });\n        }\n        setSubmittedMaterial(true);\n    }\n\n    const onInputChangeManoObra = (e) => {\n        const { value, name } = e.target;\n        \n        if ( name === 'costo') {\n            props.setManoObra({\n                ...props.manoObra,\n                [name]: value * 1,\n            });\n        } else {\n            props.setManoObra({\n                ...props.manoObra,\n                [name]: value,\n            });\n        }\n        setSubmittedManoObra(true);\n    }\n\n    const actionMaterialBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteMaterial(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const actionManoObraBodyTemplate = (rowData, rowIndex) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={()=> {deleteManoObra(rowData, rowIndex.rowIndex)}} />\n            </div>\n        );\n    }\n\n    const addMaterial = () => {\n        if ( props.detalleMaterial.idMaterial && props.detalleMaterial.cantidad ) {\n\n            let aux = props.fase.materiales;\n            const mismoProducto = aux.filter( item => item.idMaterial === props.detalleMaterial.idMaterial);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo material más de una vez.\", life: 3000 });\n            } else {\n                    aux.push(props.detalleMaterial);\n                    props.setFase({\n                        ...props.fase,\n                        materiales: aux\n                    });\n    \n                    props.setDetalleMaterial(props.formDetalleMaterial);\n                    setSubmittedMaterial(false);\n                    conteoTotalMaterial();\n            }\n        }\n    }\n\n    const addManoObra = () => {\n        if ( props.manoObra.idEmpleado && props.manoObra.costo ) {\n\n            let aux = props.fase.manoObra;\n            const mismoProducto = aux.filter( item => item.idEmpleado === props.manoObra.idEmpleado);\n            \n            if (mismoProducto.length > 0 ) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"No se puede agregar un mismo empleado más de una vez.\", life: 3000 });\n            } else {\n                    aux.push(props.manoObra);\n                    props.setFase({\n                        ...props.fase,\n                        manoObra: aux\n                    });\n    \n                    props.setManoObra(props.formManoObra);\n                    setSubmittedManoObra(false);\n                    conteoTotalManoObra();\n            }\n        }\n    }\n\n    const deleteMaterial = (detalle, index) => {\n        let aux = props.fase.materiales;\n            aux.splice(index, 1);\n            props.setFase({\n                ...props.fase,\n                materiales: aux\n            });\n        conteoTotalMaterial();\n    }\n\n    const deleteManoObra = (detalle, index) => {\n        let aux = props.fase.manoObra;\n            aux.splice(index, 1);\n            props.setFase({\n                ...props.fase,\n                manoObra: aux\n            });\n        conteoTotalManoObra();\n    }\n\n    const conteoTotalMaterial = () => {\n        let aux = props.fase.materiales;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.precioTotal;\n        });     \n        props.setFase({\n            ...props.fase,\n            costoMaterial: acumulado,\n            costoTotal: acumulado + props.fase.costoManoObra\n        }); \n    }\n\n    const conteoTotalManoObra = () => {\n        let aux = props.fase.manoObra;  \n        let acumulado = 0;\n        aux.forEach(item => {\n            acumulado = acumulado + item.costo;\n        });     \n        props.setFase({\n            ...props.fase,\n            costoManoObra: acumulado,\n            costoTotal: acumulado + props.fase.costoMaterial \n        }); \n    }\n\n    const addFase = () => {\n        if ( props.fase.nombre && props.fase.fechaInicio && props.fase.fechaFin) {\n            if (props.fase.materiales.length > 0 && props.fase.manoObra.length > 0) {\n                save();\n            } else {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: \"Debe de incluir al menos un material y empleado en la fase.\", life: 3000 });\n            }\n        }\n    }\n\n    const save = async () => {\n        let resp = await Service.save(props.fase);\n        if ( resp.valid ){\n            props.list();\n            back();\n            props.toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            props.toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n    return (\n        <div className=\"grid crud-demo\">\n            <Toast ref={toast} />\n             <div className=\"col-12\">\n                <div className=\"card\">\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-11\">\n                            <h3>Detalle</h3>\n                        </div>\n                        <div className=\"col-12 md:col-1\">\n                            <Button label=\"Volver\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={back} />\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Nombre*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"nombre\"\n                                    name=\"nombre\"\n                                    value={ props.fase.nombre }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            { submitted && !props.fase.nombre && <small className=\"p-error\">Nombre es requerida.</small>}\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Fecha Inicio</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-credit-card\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaInicio\"\n                                    name=\"fechaInicio\"\n                                    value={ props.fase.fechaInicio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                               \n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaFin\"\n                                    name=\"fechaFin\"\n                                    value={ props.fase.fechaFin }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-8\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-flag\"></i></span>\n                                <TextField\n                                    type=\"text\"\n                                    id=\"descripcion\"\n                                    name=\"descripcion\"\n                                    value={ props.fase.descripcion }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <label htmlFor=\"descripcion\">Total</label>\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-calendar\"></i></span>\n                                <TextField\n                                    type=\"number\"\n                                    id=\"costoTotal\"\n                                    name=\"costoTotal\"\n                                    value={ props.fase.costoTotal }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                            </div>\n                        </div>\n\n\n                        \n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-6\">\n                <div className=\"card\">\n                    <h5>Ingrese Material</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Material*</label>\n                            <Select \n                                value={props.detalleMaterial.idMaterial} \n                                className=\"w-full\"\n                                id=\"idMaterial\" \n                                name=\"idMaterial\" \n                                onChange={onInputChangeMaterial}\n                            >\n                                {props.materiales.map((item, index) => (\n                                    <MenuItem value={item.idMaterial} key={index} onClick={()=>{setMaterial(item)}}>\n                                        {item.nombre }\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedMaterial && !props.detalleMaterial.idMaterial && <small className=\"p-error\">Producto  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Precio</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precio\"\n                                name=\"precio\"\n                                value={ props.detalleMaterial.precio }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Cantidad</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"cantidad\"\n                                name=\"cantidad\"\n                                value={ props.detalleMaterial.cantidad }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                            {  submittedMaterial && !props.detalleMaterial.cantidad && <small className=\"p-error\">Cantidad  es requerido.</small>}\n                        </div>\n                    \n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Total</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"precioTotal\"\n                                name=\"precioTotal\"\n                                value={ props.detalleMaterial.precioTotal }\n                                onChange={onInputChangeMaterial}\n                                variant=\"outlined\"\n                                fullWidth\n                                disabled\n                            />\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addMaterial}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearMaterial} />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.fase.materiales} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column field=\"material\" header=\"Material\" style={{ flexGrow: 1, flexBasis: '125px' }}></Column>\n                        <Column field=\"precio\" header=\"Precio\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"cantidad\" header=\"Cantidad\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"precioTotal\" header=\"Total\" style={{ flexGrow: 1, flexBasis: '125px' }}></Column>\n                        <Column body={actionMaterialBodyTemplate} style={{ flexGrow: 1, flexBasis: '100px' }} ></Column>\n                    </DataTable>\n                </div>\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"costoMaterial\"\n                                    name=\"costoMaterial\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.fase.costoMaterial }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-6\">\n                <div className=\"card\">\n                    <h5>Ingrese Empleado</h5>\n                    <div className=\"grid p-fluid\">\n\n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Empleado*</label>\n                            <Select \n                                value={props.manoObra.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChangeManoObra}\n                            >\n                                {props.empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index} onClick={()=>{setManoObra(item)}}>\n                                        {item.nombre +\" \" + item.apellido}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            {  submittedManoObra && !props.manoObra.idEmpleado && <small className=\"p-error\">Empleado  es requerido.</small>}\n                        </div>\n                    \n                        <div className=\"col-12 md:col-6\">\n                            <label htmlFor=\"name\">Costo*</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"costo\"\n                                name=\"costo\"\n                                value={ props.manoObra.costo }\n                                onChange={onInputChangeManoObra}\n                                variant=\"outlined\"\n                                fullWidth\n                            />\n                             {  submittedManoObra && !props.manoObra.costo && <small className=\"p-error\">Costo  es requerido.</small>}\n                        </div>\n                    \n                                    \n\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Agregar\" className=\"p-button-outlined mr-2 mb-2\" onClick={addManoObra}/>\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <Button label=\"Cancelar\" className=\"p-button-outlined p-button-danger mr-2 mb-2\" onClick={clearManoObra} />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"card\" >\n                    <h5>Detalle</h5>\n                    <DataTable value={props.fase.manoObra} scrollable scrollHeight=\"350px\"  scrollDirection=\"both\" className=\"mt-3\">\n                        <Column field=\"empleado\" header=\"Empleado\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column field=\"costo\" header=\"Costo\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\n                        <Column body={actionManoObraBodyTemplate} header=\"Acción\" style={{ flexGrow: 1, flexBasis: '2px' }}></Column>\n                    </DataTable>\n                </div>\n                <div className='card'>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <InputText\n                                    type=\"number\"\n                                    id=\"costoManoObra\"\n                                    name=\"costoManoObra\"\n                                    placeholder=\"TOTAL\"\n                                    value={ props.fase.costoManoObra }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    disabled\n                                />\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-dollar\"></i></span>\n                            </div>\n                        </div>\n                       \n                    </div>\n                </div>\n\n            </div>\n\n            <div className='col-10'></div>\n            <div className='col-2'>\n                <div className='card'>\n                    <div className=\"p-inputgroup\">\n                        <Button  label=\"CREAR FASE\" className=\"p-button-success mr-16 mb-16\" onClick={addFase}/>\n                    </div>   \n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Detalle","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport moment from 'moment';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    bodyTitulo: {\n        fontSize: 13, \n        marginTop:10\n    },\n});\n\nconst ReportFase = (props) => {\n   \n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:35, alignItems: \"center\" , formSize: 18}}>\n                    <Text style={{color: \"#3388af\"}}>FASE</Text>\n                </View>    \n\n                <View style={styles.section}>\n                    <Text style={styles.body}>Nombre: {props.fase.nombre}</Text>\n                    <Text style={styles.body}>Fecha Inicio: {moment(props.fechaInicio).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Fecha Fin: {moment(props.fechaFin).format(\"DD/MM/YYYY\")}</Text>\n                    <Text style={styles.body}>Descripción: {props.fase.descripcion}</Text>\n                    <Text style={styles.body}>Costo Total: {props.fase.costoTotal}</Text>\n                </View>\n\n                <View style={styles.section}>\n                    <Text style={styles.bodyTitulo}>DETALLE DE MATERIALES</Text>\n                    <Table\n                        data={props.fase.materiales}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Material\n                            </TableCell>\n                            <TableCell>\n                                Precio\n                            </TableCell>\n                            <TableCell>\n                                Cantidad\n                            </TableCell>\n                            <TableCell>\n                                Total\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idMaterial}/>\n                        <DataTableCell getContent={(r) => r.material}/>\n                        <DataTableCell getContent={(r) => r.precioMaterial}/>\n                        <DataTableCell getContent={(r) => r.cantidad}/>\n                        <DataTableCell getContent={(r) => r.precioTotal}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total Material: {props.fase.costoMaterial}\n                    </Text>\n\n                    <Text style={styles.bodyTitulo}>DETALLE DE MANO DE OBRA</Text>\n                    <Table\n                        data={props.fase.manoObra}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Empleado\n                            </TableCell>\n                            <TableCell>\n                                Costo\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idManoObra}/>\n                        <DataTableCell getContent={(r) => r.nombreEmpleado + \" \" + r.apellidoEmpleado}/>\n                        <DataTableCell getContent={(r) => r.costo}/>\n                            \n                        </TableBody>\n                    </Table>\n                    \n                    <Text style={{\n                        color: \"black\",\n                        fontStyle: \"italic\",\n                        fontSize: \"12px\",\n                        marginTop: 15\n                        }}>Total Mano Obra: {props.fase.costoManoObra}\n                    </Text>\n\n                </View> \n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportFase;","import React, { useState, useEffect, useRef} from 'react'\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport Detalle from \"./Detalle\";\nimport * as ServiceMaterial from \"../../material/Service\";\nimport * as ServiceEmpleado from \"../../../user/empleado/Service\";\nimport ReportFase from './ReportFase';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { Dialog } from 'primereact/dialog';\n\n\nconst Fase = (props) => {\n    let formFase = {\n        idObra: props.obra.idObra,\n        nombre: \"\",\n        descripcion: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\",\n        costoMaterial: \"\",\n        costoManoObra: \"\",\n        costoTotal: \"\",\n        materiales: [],\n        manoObra: []\n    };\n\n    let formDetalleMaterial = {\n        idMaterial: \"\",\n        descripcion: \"\",\n        cantidad: \"\",\n        unidad: \"\",\n        precioTotal: \"\",\n        precio: \"\"\n    }\n\n    let formManoObra = {\n        idEmpleado: \"\",\n        empleado: \"\",\n        costo: \"\"\n    }\n\n    const [fases, setFases] = useState(null);\n    const [fase, setFase] = useState(formFase);\n    const [detalleMaterial, setDetalleMaterial] = useState(formDetalleMaterial);\n    const [manoObra, setManoObra] = useState(formManoObra);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [flagDetalle, setFlagDetalle] = useState(false);\n\n    const [empleados, setEmpleados] = useState([]);\n    const [materiales, setMateriales] = useState([]);\n\n    const [faseDialog, setFaseDialog] = useState(false);\n    const [deleteFaseDialog, setDeleteFaseDialog] = useState(false);\n  \n    useEffect(() => {\n        list();\n        listMateriales();\n        listEmpleados();\n        // eslint-disable-next-line\n    }, []);\n\n    const list = async()  => {\n        const aux = { idObra: props.obra.idObra}\n        let resp = await Service.listByObra(aux);\n        if (resp.valid) {\n            setFases(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMateriales = async()  => {\n        let resp = await ServiceMaterial.list();\n        if (resp.valid) {\n            setMateriales(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let aux = { idAreaNegocio: 4};\n        let resp = await ServiceEmpleado.listByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setFase(formFase);\n        setFlagDetalle(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"VOLVER\" icon=\"pi pi-arrow-left\" className=\"p-button-text\" onClick={()=>{ props.setFlagObra(false);}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button \n                    icon=\"pi pi-file-pdf\" \n                    className=\"p-button-rounded p-button-info mr-2\" \n                    onClick={()=>{\n                        setFaseDialog(true);\n                        setFase(rowData);\n                    }}     \n                />\n                <Button \n                    icon=\"pi pi-trash\" \n                    className=\"p-button-rounded p-button-danger mt-2\" \n                    onClick={() => confirmDeleteFase(rowData)} \n                />\n            </div>\n        );\n    }\n\n    const confirmDeleteFase = (fase) => {\n        setFase(fase);\n        setDeleteFaseDialog(true);\n    }\n\n    const hideDeleteFaseDialog = () => {\n        setDeleteFaseDialog(false);\n    }\n\n    const deleteFase = async () => {\n        let resp = await Service.deleteById(fase);\n        if ( resp.valid ) {\n            list();\n            setDeleteFaseDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n    const deleteFaseDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteFaseDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteFase} />\n        </>\n    );\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Fases</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const hideDialog = () => {\n        setFaseDialog(false);\n    }\n\n    return (\n        <>\n        {\n            !flagDetalle ?(\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n        \n                            <DataTable ref={dt} value={fases}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} fases\"\n                                globalFilter={globalFilter} emptyMessage=\"No fases found.\" header={header} responsiveLayout=\"scroll\">\n        \n                                <Column field=\"idFase\" header=\"ID\" sortable ></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable ></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" ></Column>\n                                <Column field=\"fechaInicio\" header=\"Fecha Inicio\" ></Column>\n                                <Column field=\"fechaFin\" header=\"Fecha Fin\" ></Column>\n                                <Column field=\"costoTotal\" header=\"Costo Total\" ></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n        \n                           \n        \n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n\n        {\n            flagDetalle ? (\n                <Detalle \n                    setFlagDetalle={setFlagDetalle}\n                    formFase={formFase}\n                    formDetalleMaterial={formDetalleMaterial}\n                    formManoObra={formManoObra}\n                    setFase={setFase}\n                    setDetalleMaterial={setDetalleMaterial}\n                    setManoObra={setManoObra}\n                    fase={fase}\n                    detalleMaterial={detalleMaterial}\n                    manoObra={manoObra}\n\n                    empleados={empleados}\n                    materiales={materiales}\n\n                    toast={toast}\n                    list={list}\n                />\n            ):null\n        }\n\n            <Dialog visible={deleteFaseDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteFaseDialogFooter} onHide={hideDeleteFaseDialog}>\n                <div className=\"flex align-items-center justify-content-center\">\n                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                    { <span>Desea eliminar la fase No. <b>{fase.idFase}</b>?</span>}\n                </div>\n            </Dialog>\n\n            <Dialog visible={faseDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialog}>\n                <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                    <ReportFase \n                        fase={fase}\n                    />\n                </PDFViewer>\n\n            </Dialog>\n        </>\n    )\n}\n\nexport default Fase;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport * as ServiceTipoObra from \"../tipoObra/Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as ServiceCliente from \"../../user/clientes/Service\";\nimport Fase from \"./fase/Fase\";\n\nconst Obra = () => {\n\n    let formObra = {\n        idTipoObra: \"\",\n        idCliente: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        costo: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\"\n    };\n\n    const [obras, setObras] = useState(null);\n    const [obraDialog, setObraDialog] = useState(false);\n    const [deleteObraDialog, setDeleteObraDialog] = useState(false);\n    const [obra, setObra] = useState(formObra);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tipoObras, setTipoObras] = useState([]);\n    const [clientes, setClientes] = useState([]);\n\n    const [flagObra, setFlagObra] = useState(false);\n    useEffect(() => {\n        list();\n        listTipoObras();\n        listClientes();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoObras = async()  => {\n        let resp = await ServiceTipoObra.list();\n        if (resp.valid) {\n            setTipoObras(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listClientes = async()  => {\n        let aux = {idNegocio: 6};\n        let resp = await ServiceCliente.listByNegocio(aux);\n        if (resp.valid) {\n            setClientes(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setObra(formObra);\n        setSubmitted(false);\n        setObraDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setObraDialog(false);\n    }\n\n    const hideDeleteObraDialog = () => {\n        setDeleteObraDialog(false);\n    }\n\n    const submit = () => {\n        if (obra.nombre && obra.idTipoObra && obra.costo && obra.idCliente) {\n             if (obra.idObra) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(obra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(obra);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editobra = (obra) => {\n        setObra({ ...obra });\n        setObraDialog(true);\n    }\n\n    const faseObra = (obra) => {\n        setObra({ ...obra });\n        setFlagObra(true);\n    }\n\n    const confirmDeleteobra = (obra) => {\n        setObra(obra);\n        setDeleteObraDialog(true);\n    }\n\n    const deleteobra = async () => {\n        let resp = await Service.deleteById(obra);\n        if ( resp.valid ) {\n            list();\n            setDeleteObraDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setObra({\n            ...obra,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idObra}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const clienteBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Cliente</span>\n                {rowData.cliente}\n            </>\n        );\n    }\n\n    const tipoObraBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Tipo obra</span>\n                {rowData.tipoObra}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const costoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Costo</span>\n                {rowData.costo}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editobra(rowData)} />\n                <Button icon=\"pi pi-sitemap\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => faseObra(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteobra(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Obras</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const obraDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={obra.idObra ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteObraDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteObraDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteobra} />\n        </>\n    );\n\n    return (\n        <>\n        {\n            !flagObra ? (\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                            <DataTable ref={dt} value={obras}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} obras\"\n                                globalFilter={globalFilter} emptyMessage=\"No obras found.\" header={header} responsiveLayout=\"scroll\">\n\n                                <Column field=\"idObra\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                                <Column field=\"cliente\" header=\"Cliente\" body={clienteBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"tipoObra\" header=\"Tipo Obra\" body={tipoObraBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column field=\"costo\" header=\"Costo\" body={costoBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n\n                            <Dialog visible={obraDialog} style={{ width: '1200px' }} header={obra.idObra ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={obraDialogFooter} onHide={hideDialog}>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Tipo obra*</label>\n                                        <Select \n                                            value={obra.idTipoObra} \n                                            className=\"w-full\"\n                                            id=\"idTipoObra\" \n                                            name=\"idTipoObra\" \n                                            autoFocus \n                                            onChange={onInputChange}>\n                                            {tipoObras.map((item, index) => (\n                                                <MenuItem value={item.idTipoObra} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !obra.idTipoObra && <small className=\"p-error\">Tipo obra es requerida.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Cliente*</label>\n                                        <Select \n                                            value={obra.idCliente} \n                                            className=\"w-full\"\n                                            id=\"idCliente\" \n                                            name=\"idCliente\" \n                                            autoFocus \n                                            onChange={onInputChange}>\n                                            {clientes.map((item, index) => (\n                                                <MenuItem value={item.idCliente} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !obra.idCliente && <small className=\"p-error\">Cliente es requerida.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre*</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={obra.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !obra.nombre })} \n                                        />\n                                        { submitted &&  !obra.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Costo</label>\n                                        <InputText \n                                            id=\"costo\" \n                                            name=\"costo\"\n                                            type=\"number\"\n                                            value={obra.costo} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !obra.costo })} \n                                        />\n                                        { submitted &&  !obra.costo && <small className=\"p-error\">costo es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">Fecha Inicio</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaInicio\"\n                                            name=\"fechaInicio\"\n                                            value={ obra.fechaInicio }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !obra.fechaInicio && <small className=\"p-error\">Fecha Inicio es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">Fecha Fin</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaFin\"\n                                            name=\"fechaFin\"\n                                            value={ obra.fechaFin }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !obra.fechaFin && <small className=\"p-error\">Fecha Fin es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label htmlFor=\"descripcion\">Descripción</label>\n                                    <InputTextarea \n                                        id=\"descripcion\" \n                                        name=\"descripcion\"\n                                        value={obra.descripcion} \n                                        onChange={onInputChange} \n                                        required \n                                        rows={3} \n                                        cols={20} \n                                    />\n                                </div>\n\n                            </Dialog>\n\n                            <Dialog visible={deleteObraDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteObraDialogFooter} onHide={hideDeleteObraDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {obra && <span>Desea eliminar este item: <b>{obra.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n\n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n        \n        {\n            flagObra ? (\n                <Fase \n                    obra={obra}\n                    setFlagObra={setFlagObra}\n                />\n            ):null\n        }\n\n        </>\n    )\n}\n\nexport default Obra;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMateriaPrima/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMateriaPrima = () => {\n\n    let formTipoMateriaPrima = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMateriaPrimas, setTipoMateriaPrimas] = useState(null);\n    const [tipoMateriaPrimaDialog, setTipoMateriaPrimaDialog] = useState(false);\n    const [deletetipoMateriaPrimaDialog, setDeletetipoMateriaPrimaDialog] = useState(false);\n    const [tipoMateriaPrima, setTipoMateriaPrima] = useState(formTipoMateriaPrima);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMateriaPrima(formTipoMateriaPrima);\n        setSubmitted(false);\n        setTipoMateriaPrimaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMateriaPrimaDialog(false);\n    }\n\n    const hideDeletetipoMateriaPrimaDialog = () => {\n        setDeletetipoMateriaPrimaDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMateriaPrima.nombre) {\n             if (tipoMateriaPrima.idTipoMateriaPrima) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMateriaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMateriaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMateriaPrima = (tipoMateriaPrima) => {\n        setTipoMateriaPrima({ ...tipoMateriaPrima });\n        setTipoMateriaPrimaDialog(true);\n    }\n\n    const confirmDeletetipoMateriaPrima = (tipoMateriaPrima) => {\n        setTipoMateriaPrima(tipoMateriaPrima);\n        setDeletetipoMateriaPrimaDialog(true);\n    }\n\n    const deletetipoMateriaPrima = async () => {\n        let resp = await Service.deleteById(tipoMateriaPrima);\n        if ( resp.valid ) {\n            list();\n            setDeletetipoMateriaPrimaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMateriaPrima({\n            ...tipoMateriaPrima,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMateriaPrima}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMateriaPrima(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMateriaPrima(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipos de Materia Prima</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMateriaPrima.idTipoMateriaPrima ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deletetipoMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeletetipoMateriaPrimaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMateriaPrima} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMateriaPrimas}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMateriaPrimas\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMateriaPrimas found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMateriaPrima\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMateriaPrimaDialog} style={{ width: '450px' }} header={tipoMateriaPrima.idTipoMateriaPrima ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMateriaPrimaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMateriaPrima.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMateriaPrima.nombre })} \n                            />\n                            { submitted &&  !tipoMateriaPrima.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMateriaPrima.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deletetipoMateriaPrimaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deletetipoMateriaPrimaDialogFooter} onHide={hideDeletetipoMateriaPrimaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMateriaPrima && <span>Desea eliminar este item: <b>{tipoMateriaPrima.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMateriaPrima;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/tipoMaquinaria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\n\n\nconst TipoMaquinaria = () => {\n\n    let formTipoMaquinaria = {\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [tipoMaquinarias, setTipoMaquinarias] = useState(null);\n    const [tipoMaquinariaDialog, setTipoMaquinariaDialog] = useState(false);\n    const [deleteTipoMaquinariaDialog, setDeleteTipoMaquinariaDialog] = useState(false);\n    const [tipoMaquinaria, setTipoMaquinaria] = useState(formTipoMaquinaria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n  \n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setTipoMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setTipoMaquinaria(formTipoMaquinaria);\n        setSubmitted(false);\n        setTipoMaquinariaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setTipoMaquinariaDialog(false);\n    }\n\n    const hideDeleteTipoMaquinariaDialog = () => {\n        setDeleteTipoMaquinariaDialog(false);\n    }\n\n    const submit = () => {\n        if (tipoMaquinaria.nombre) {\n             if (tipoMaquinaria.idTipoMaquinaria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(tipoMaquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(tipoMaquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const edittipoMaquinaria = (tipoMaquinaria) => {\n        setTipoMaquinaria({ ...tipoMaquinaria });\n        setTipoMaquinariaDialog(true);\n    }\n\n    const confirmDeletetipoMaquinaria = (tipoMaquinaria) => {\n        setTipoMaquinaria(tipoMaquinaria);\n        setDeleteTipoMaquinariaDialog(true);\n    }\n\n    const deletetipoMaquinaria = async () => {\n        let resp = await Service.deleteById(tipoMaquinaria);\n        if ( resp.valid ) {\n            list();\n            setDeleteTipoMaquinariaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setTipoMaquinaria({\n            ...tipoMaquinaria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idTipoMaquinaria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => edittipoMaquinaria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletetipoMaquinaria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Tipo de Maquinarias</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const tipoMaquinariaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={tipoMaquinaria.idTipoMaquinaria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteTipoMaquinariaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteTipoMaquinariaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletetipoMaquinaria} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={tipoMaquinarias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} tipoMaquinarias\"\n                        globalFilter={globalFilter} emptyMessage=\"No tipoMaquinarias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idTipoMaquinaria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '35%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '35%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={tipoMaquinariaDialog} style={{ width: '450px' }} header={tipoMaquinaria.idTipoMaquinaria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={tipoMaquinariaDialogFooter} onHide={hideDialog}>\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={tipoMaquinaria.nombre} \n                                onChange={onInputChange} \n                                required \n                                autoFocus \n                                className={classNames({ 'p-error': submitted && !tipoMaquinaria.nombre })} \n                            />\n                            { submitted &&  !tipoMaquinaria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={tipoMaquinaria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteTipoMaquinariaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteTipoMaquinariaDialogFooter} onHide={hideDeleteTipoMaquinariaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {tipoMaquinaria && <span>Desea eliminar este item: <b>{tipoMaquinaria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TipoMaquinaria;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/materiaPrima/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as ServiceTipoMateriaPrima from '../tipoMateriaPrima/Service';\n\n\nconst MateriaPrima = () => {\n\n    let formMateriaPrima = {\n        idTipoMateriaPrima: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n        fechaIngreso: \"\",\n        stock:\"\"\n    };\n\n    const [materiaPrimas, setMateriaPrimas] = useState(null);\n    const [materiaPrimaDialog, setMateriaPrimaDialog] = useState(false);\n    const [deleteMateriaPrimaDialog, setDeleteMateriaPrimaDialog] = useState(false);\n    const [materiaPrima, setMateriaPrima] = useState(formMateriaPrima);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tiposMateriasPrimas, setTiposMateriasPrimas] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMateriaPrima();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMateriaPrima = async () => {\n        let resp = await ServiceTipoMateriaPrima.list();\n        if (resp.valid) {\n            setTiposMateriasPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setMateriaPrima(formMateriaPrima);\n        setSubmitted(false);\n        setMateriaPrimaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMateriaPrimaDialog(false);\n    }\n\n    const hideDeleteMateriaPrimaDialog = () => {\n        setDeleteMateriaPrimaDialog(false);\n    }\n\n    const submit = () => {\n        if (materiaPrima.nombre) {\n             if (materiaPrima.idMateriaPrima) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(materiaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(materiaPrima);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmateriaPrima = (materiaPrima) => {\n        setMateriaPrima({ ...materiaPrima });\n        setMateriaPrimaDialog(true);\n    }\n\n    const confirmDeletemateriaPrima = (materiaPrima) => {\n        setMateriaPrima(materiaPrima);\n        setDeleteMateriaPrimaDialog(true);\n    }\n\n    const deletemateriaPrima = async () => {\n        let resp = await Service.deleteById(materiaPrima);\n        if ( resp.valid ) {\n            list();\n            setDeleteMateriaPrimaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMateriaPrima({\n            ...materiaPrima,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMateriaPrima}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmateriaPrima(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletemateriaPrima(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Materias Primas</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const materiaPrimaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={materiaPrima.idMateriaPrima ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMateriaPrimaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMateriaPrimaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletemateriaPrima} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={materiaPrimas}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} materiaPrimas\"\n                        globalFilter={globalFilter} emptyMessage=\"No materiaPrimas found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMateriaPrima\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"tipoMateriaPrima\" header=\"Tipo Materia Prima\" sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaIngreso\" header=\"Fecha Ingreso\" sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={materiaPrimaDialog} style={{ width: '450px' }} header={materiaPrima.idMateriaPrima ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={materiaPrimaDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Tipo Materia Prima*</label>\n                            <Select \n                                value={materiaPrima.idTipoMateriaPrima} \n                                className=\"w-full\"\n                                id=\"idTipoMateriaPrima\" \n                                name=\"idTipoMateriaPrima\" \n                                onChange={onInputChange}\n                                autoFocus \n                            >\n                                {tiposMateriasPrimas.map((item, index) => (\n                                    <MenuItem value={item.idTipoMateriaPrima} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={materiaPrima.nombre} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-error': submitted && !materiaPrima.nombre })} \n                            />\n                            { submitted &&  !materiaPrima.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={materiaPrima.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Fecha Ingreso</label>\n                            <TextField\n                                type=\"date\"\n                                id=\"fechaIngreso\"\n                                name=\"fechaIngreso\"\n                                value={ materiaPrima.fechaIngreso }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Existencia</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"stock\"\n                                name=\"stock\"\n                                value={ materiaPrima.stock }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMateriaPrimaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMateriaPrimaDialogFooter} onHide={hideDeleteMateriaPrimaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {materiaPrima && <span>Desea eliminar este item: <b>{materiaPrima.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MateriaPrima;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/maquinaria/delete`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select } from '@mui/material';\nimport * as ServiceTipoMaquinaria from '../tipoMaquinaria/Service';\n\n\nconst Maquinaria = () => {\n\n    let formMaquinaria = {\n        idTipoMaquinaria: \"\",\n        nombre: \"\",\n        descripcion: \"\",\n    };\n\n    const [maquinarias, setMaquinarias] = useState(null);\n    const [maquinariaDialog, setMaquinariaDialog] = useState(false);\n    const [deleteMaquinariaDialog, setDeleteMaquinariaDialog] = useState(false);\n    const [maquinaria, setMaquinaria] = useState(formMaquinaria);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [tiposMaquinarias, setTiposMaquinarias] = useState([]);\n  \n    useEffect(() => {\n        list();\n        listTipoMaquinaria();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listTipoMaquinaria = async () => {\n        let resp = await ServiceTipoMaquinaria.list();\n        if (resp.valid) {\n            setTiposMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setMaquinaria(formMaquinaria);\n        setSubmitted(false);\n        setMaquinariaDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setMaquinariaDialog(false);\n    }\n\n    const hideDeleteMaquinariaDialog = () => {\n        setDeleteMaquinariaDialog(false);\n    }\n\n    const submit = () => {\n        if (maquinaria.nombre) {\n             if (maquinaria.idMaquinaria) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(maquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(maquinaria);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editmaquinaria = (maquinaria) => {\n        setMaquinaria({ ...maquinaria });\n        setMaquinariaDialog(true);\n    }\n\n    const confirmDeletemaquinaria = (maquinaria) => {\n        setMaquinaria(maquinaria);\n        setDeleteMaquinariaDialog(true);\n    }\n\n    const deletemaquinaria = async () => {\n        let resp = await Service.deleteById(maquinaria);\n        if ( resp.valid ) {\n            list();\n            setDeleteMaquinariaDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setMaquinaria({\n            ...maquinaria,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idMaquinaria}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editmaquinaria(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletemaquinaria(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Maquinarias</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const maquinariaDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={maquinaria.idMaquinaria ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteMaquinariaDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteMaquinariaDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletemaquinaria} />\n        </>\n    );\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    Cada vehiculo se encuentra monitoreado por GPS-inversiones\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={maquinarias}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} maquinarias\"\n                        globalFilter={globalFilter} emptyMessage=\"No maquinarias found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idMaquinaria\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                        <Column field=\"tipoMaquinaria\" header=\"Tipo maquinaria\" sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={maquinariaDialog} style={{ width: '450px' }} header={maquinaria.idMaquinaria ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={maquinariaDialogFooter} onHide={hideDialog}>\n                        \n                        <div className=\"field\">\n                            <label htmlFor=\"price\">Tipo Maquinaria*</label>\n                            <Select \n                                value={maquinaria.idTipoMaquinaria} \n                                className=\"w-full\"\n                                id=\"idTipoMaquinaria\" \n                                name=\"idTipoMaquinaria\" \n                                onChange={onInputChange}\n                                autoFocus \n                            >\n                                {tiposMaquinarias.map((item, index) => (\n                                    <MenuItem value={item.idTipoMaquinaria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"nombre\">Nombre*</label>\n                            <InputText \n                                id=\"nombre\" \n                                name=\"nombre\"\n                                value={maquinaria.nombre} \n                                onChange={onInputChange} \n                                required \n                                className={classNames({ 'p-error': submitted && !maquinaria.nombre })} \n                            />\n                            { submitted &&  !maquinaria.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Descripción</label>\n                            <InputTextarea \n                                id=\"descripcion\" \n                                name=\"descripcion\"\n                                value={maquinaria.descripcion} \n                                onChange={onInputChange} \n                                required \n                                rows={3} \n                                cols={20} \n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteMaquinariaDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteMaquinariaDialogFooter} onHide={hideDeleteMaquinariaDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {maquinaria && <span>Desea eliminar este item: <b>{maquinaria.nombre}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Maquinaria;","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/proceso/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/proceso/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/proceso/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/proceso/delete`, obj);\n\treturn respuesta.data;\n}","import axios from 'axios';\n\n//// URL ROOT\nconst URL = process.env.REACT_APP_BACKEND;\n\nexport async function list(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/list`, obj);\n\treturn respuesta.data;\n}\n\nexport async function save(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/save`, obj);\n\treturn respuesta.data;\n}\n\nexport async function update(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/update`, obj);\n\treturn respuesta.data;\n}\n\nexport async function deleteById(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/delete`, obj);\n\treturn respuesta.data;\n}\n\nexport async function listByObra(obj) {\n    let respuesta = await axios.post(URL + `/detalleProceso/listByObra`, obj);\n\treturn respuesta.data;\n}","import React, { useState, useEffect, useRef} from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport * as Service from \"./Service\";\nimport * as ServiceMateriaPrima from \"../../materiaPrima/Service\";\nimport * as ServiceMaquinaria from \"../../maquinaria/Service\";\nimport * as ServiceEmpleado from \"../../../user/empleado/Service\";\n\nconst DetalleProceso = (props) => {\n    \n\n    let formDetalleProceso = {\n        idProceso: props.proceso.idProceso,\n        idMateriaPrima: \"\",\n        idMaquinaria: \"\",\n        idEmpleado: \"\",\n        descripcion: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\",\n        costo:\"\",\n    };\n\n    const [detalleProcesos, setDetalleProcesos] = useState(null);\n    const [materiaPrimas, setMateriaPrimas] = useState([]);\n    const [maquinarias, setMaquinarias] = useState([]);\n    const [empleados, setEmpleados] = useState([]);\n    const [detalleProcesoDialog, setDetalleProcesoDialog] = useState(false);\n    const [deleteDetalleProcesoDialog, setDeleteDetalleProcesoDialog] = useState(false);\n    const [detalleProceso, setDetalleProceso] = useState(formDetalleProceso);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n  \n    useEffect(() => {\n        list();\n        listMateriasPrimas();\n        listMaquinarias();\n        listEmpleados();\n        // eslint-disable-next-line\n    }, []);\n\n    const list = async()  => {\n        let aux = {idProceso:props.proceso.idProceso }\n        let resp = await Service.list(aux);\n        if (resp.valid) {\n            setDetalleProcesos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMateriasPrimas = async()  => {\n        let resp = await ServiceMateriaPrima.list();\n        if (resp.valid) {\n            setMateriaPrimas(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listMaquinarias = async()  => {\n        let resp = await ServiceMaquinaria.list();\n        if (resp.valid) {\n            setMaquinarias(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const listEmpleados = async()  => {\n        let resp = await ServiceEmpleado.listPlantas();\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setDetalleProceso(formDetalleProceso);\n        setSubmitted(false);\n        setDetalleProcesoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setDetalleProcesoDialog(false);\n    }\n\n    const hideDeleteDetalleProcesoDialog = () => {\n        setDeleteDetalleProcesoDialog(false);\n    }\n\n    const submit = () => {\n        if (detalleProceso.idMaquinaria &&  detalleProceso.idMateriaPrima) {\n             if (detalleProceso.idDetalleProceso) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(detalleProceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(detalleProceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editdetalleProceso = (detalleProceso) => {\n        setDetalleProceso({ ...detalleProceso });\n        setDetalleProcesoDialog(true);\n    }\n\n    const confirmDeletedetalleProceso = (detalleProceso) => {\n        setDetalleProceso(detalleProceso);\n        setDeleteDetalleProcesoDialog(true);\n    }\n\n    const deletedetalleProceso = async () => {\n        let resp = await Service.deleteById(detalleProceso);\n        if ( resp.valid ) {\n            list();\n            setDeleteDetalleProcesoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n\n        if ( name ==='venta') {\n            setDetalleProceso({\n                ...detalleProceso,\n                [name]: !value,\n            });\n        } else {\n            setDetalleProceso({\n                ...detalleProceso,\n                [name]: value,\n            });\n        }\n       \n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { props.setFlagProceso(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idDetalleProceso}\n            </>\n        );\n    }\n\n    const materiaPrimaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Materia Prima</span>\n                {rowData.materiaPrima}\n            </>\n        );\n    }\n\n    const maquinariaBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Maquinaria</span>\n                {rowData.maquinaria}\n            </>\n        );\n    }\n\n    const empleadoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Empleado</span>\n                {rowData.empleado}\n            </>\n        );\n    }\n\n    const fechaInicioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Inicio</span>\n                {rowData.fechaInicio}\n            </>\n        );\n    }\n\n    const fechaFinBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Fin</span>\n                {rowData.fechaFin}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editdetalleProceso(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeletedetalleProceso(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\"> Detalle</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const detalleProcesoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={detalleProceso.idDetalleProceso ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteDetalleProcesoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteDetalleProcesoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deletedetalleProceso} />\n        </>\n    );\n\n    \n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable ref={dt} value={detalleProcesos}\n                        dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} detalleProcesos\"\n                        globalFilter={globalFilter} emptyMessage=\"No detalleProcesos found.\" header={header} responsiveLayout=\"scroll\">\n\n                        <Column field=\"idDetalleProceso\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '10%', minWidth: '10rem' }}></Column>\n                        <Column field=\"nombre\" header=\"Nombre\" sortable body={materiaPrimaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"categoria\" header=\"Categoria\" sortable body={maquinariaBodyTemplate} headerStyle={{ width: '15%', minWidth: '10rem' }}></Column>\n                        <Column field=\"descripcion\" header=\"Descripción\" body={empleadoBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaInicio\" header=\"Fecha Inicio\" body={fechaInicioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column field=\"fechaFin\" header=\"Fecha Fin\" body={fechaFinBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                        <Column body={actionBodyTemplate}></Column>\n                    </DataTable>\n\n                    <Dialog visible={detalleProcesoDialog} style={{ width: '600px' }} header={detalleProceso.idDetalleProceso ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={detalleProcesoDialogFooter} onHide={hideDialog}>\n                     \n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Materia Prima*</label>\n                            <Select \n                                value={detalleProceso.idMateriaPrima} \n                                className=\"w-full\"\n                                id=\"idMateriaPrima\" \n                                name=\"idMateriaPrima\" \n                                onChange={onInputChange}>\n                                {materiaPrimas.map((item, index) => (\n                                    <MenuItem value={item.idMateriaPrima} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idMateriaPrima && <small className=\"p-invalid\">Materia Prima es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Maquinaria*</label>\n                            <Select \n                                value={detalleProceso.idMaquinaria} \n                                className=\"w-full\"\n                                id=\"idMaquinaria\" \n                                name=\"idMaquinaria\" \n                                onChange={onInputChange}>\n                                {maquinarias.map((item, index) => (\n                                    <MenuItem value={item.idMaquinaria} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idMaquinaria && <small className=\"p-invalid\">Maquinaria es requerida.</small>}\n                        </div>\n\n                        <div className=\"field\">\n                            <label htmlFor=\"descripcion\">Empleado*</label>\n                            <Select \n                                value={detalleProceso.idEmpleado} \n                                className=\"w-full\"\n                                id=\"idEmpleado\" \n                                name=\"idEmpleado\" \n                                onChange={onInputChange}>\n                                {empleados.map((item, index) => (\n                                    <MenuItem value={item.idEmpleado} key={index}>\n                                        {item.nombre}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            { submitted &&  !detalleProceso.idEmpleado && <small className=\"p-invalid\">Empleado es requerido.</small>}\n                        </div>\n\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Fecha Inicio</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaInicio\"\n                                    name=\"fechaInicio\"\n                                    value={ detalleProceso.fechaInicio }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Fecha Fin</label>\n                                <TextField\n                                    type=\"date\"\n                                    id=\"fechaFin\"\n                                    name=\"fechaFin\"\n                                    value={ detalleProceso.fechaFin }\n                                    onChange={onInputChange}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    required\n                                />\n                            </div>\n                        </div>\n\n                        <div className='field'>\n                            <label htmlFor=\"price\">Costo</label>\n                            <TextField\n                                type=\"number\"\n                                id=\"costo\"\n                                name=\"costo\"\n                                value={ detalleProceso.costo }\n                                onChange={onInputChange}\n                                variant=\"outlined\"\n                                fullWidth\n                                required\n                            />\n                        </div>\n\n                    </Dialog>\n\n                    <Dialog visible={deleteDetalleProcesoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteDetalleProcesoDialogFooter} onHide={hideDeleteDetalleProcesoDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            { <span>Desea eliminar el detalle. <b>{detalleProceso.idDetalleProceso}</b>?</span>}\n                        </div>\n                    </Dialog>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DetalleProceso;","import React from 'react';\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\nimport {Table, TableHeader,TableCell, TableBody, DataTableCell} from \"@david.kucsai/react-pdf-table\";\n\n// Create styles\nconst styles = StyleSheet.create({\n    section: {\n        marginLeft: 10,\n        padding: 10,\n    },\n    body: {\n        fontSize: 11, \n        marginTop:5\n    },\n    table: {\n\n    }\n});\n\nconst ReportProceso = (props) => {\n    return (\n        <>\n        <Document>\n            <Page size=\"A4\" \n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"left\",\n                    alignItems: \"left\",\n                    backgroundColor: \"#E4E4E4\",\n                }}\n            >\n                <View style={{marginTop:55, alignItems: \"center\"}}>\n                    <Text style={{color: \"#3388af\"}}>REPORTE DE OPERACIONES</Text>\n                </View>    \n                <View style={styles.section}>\n                    <Text style={styles.body}>Listado de procesos que se encuentren activos </Text>\n                </View>\n                \n                <View style={styles.section}>\n                   \n                    <Table\n                        data={props.procesos}\n                    >\n                        <TableHeader textAlign={\"center\"}>\n                            <TableCell weighting={0.3}>\n                                No.\n                            </TableCell >\n                            <TableCell>\n                                Nombre\n                            </TableCell>\n                            <TableCell>\n                                Fecha Inicio\n                            </TableCell>\n                            <TableCell>\n                                Fecha Fin\n                            </TableCell>\n                            <TableCell>\n                                Descripcion\n                            </TableCell>\n                            <TableCell>\n                                Costo\n                            </TableCell>\n                        </TableHeader>\n                        <TableBody>\n                        \n                        \n                        <DataTableCell weighting={0.3} getContent={(r) => r.idProceso}/>\n                        <DataTableCell getContent={(r) => r.nombre}/>\n                        <DataTableCell getContent={(r) => r.fechaInicio}/>\n                        <DataTableCell getContent={(r) => r.fechaFin}/>\n                        <DataTableCell getContent={(r) => r.descripcion}/>\n                        <DataTableCell getContent={(r) => \"Q. \" + r.costo}/>\n                            \n                        </TableBody>\n                    </Table>\n     \n                </View>\n                \n            </Page>\n        </Document>\n     \n        </>\n    )\n}\n\nexport default ReportProceso;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport {  TextField } from '@mui/material';\nimport DetalleProceso from \"./detalle/DetalleProceso\";\nimport ReportProceso from './ReportProceso';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nconst Proceso = () => {\n\n    let formProceso = {\n        nombre: \"\",\n        descripcion: \"\",\n        costo: \"\",\n        fechaInicio: \"\",\n        fechaFin: \"\"\n    };\n\n    const [procesos, setProcesos] = useState(null);\n    const [procesoDialog, setProcesoDialog] = useState(false);\n    const [deleteProcesoDialog, setDeleteProcesoDialog] = useState(false);\n    const [proceso, setProceso] = useState(formProceso);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n\n    const [flagproceso, setFlagProceso] = useState(false);\n\n    const [asignacionReportDialog, setasignacionReportDialog] = useState(false);\n\n    useEffect(() => {\n        list();\n    }, []);\n\n    const list = async()  => {\n        let resp = await Service.list();\n        if (resp.valid) {\n            setProcesos(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const openNew = () => {\n        setProceso(formProceso);\n        setSubmitted(false);\n        setProcesoDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProcesoDialog(false);\n    }\n\n    const hideDeleteProcesoDialog = () => {\n        setDeleteProcesoDialog(false);\n    }\n\n    const submit = () => {\n        if (proceso.nombre ) {\n             if (proceso.idProceso) {\n                 edit();\n             } else {\n                 save();\n             }\n        } \n    }\n\n    const save = async () => {\n        let resp = await Service.save(proceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(proceso);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editproceso = (proceso) => {\n        setProceso({ ...proceso });\n        setProcesoDialog(true);\n    }\n\n    const Detalleproceso = (proceso) => {\n        setProceso({ ...proceso });\n        setFlagProceso(true);\n    }\n\n    const confirmDeleteproceso = (proceso) => {\n        setProceso(proceso);\n        setDeleteProcesoDialog(true);\n    }\n\n    const deleteproceso = async () => {\n        let resp = await Service.deleteById(proceso);\n        if ( resp.valid ) {\n            list();\n            setDeleteProcesoDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setProceso({\n            ...proceso,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                 <Button label=\"REPORTE\" icon=\"pi pi-file-pdf\" className=\"p-button-info mr-2\" onClick={()=>{setasignacionReportDialog(true)}} />\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    const idBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">ID</span>\n                {rowData.idProceso}\n            </>\n        );\n    }\n\n    const nombreBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Nombre</span>\n                {rowData.nombre}\n            </>\n        );\n    }\n\n    const fechaInicioBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Inicio</span>\n                {rowData.fechaInicio}\n            </>\n        );\n    }\n\n    const fechaFinBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Fecha Fin</span>\n                {rowData.fechaFin}\n            </>\n        );\n    }\n\n    const descripcionBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Descripcion</span>\n                {rowData.descripcion}\n            </>\n        );\n    }\n\n    const costoBodyTemplate = (rowData) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Costo</span>\n                {rowData.costo}\n            </>\n        );\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editproceso(rowData)} />\n                <Button icon=\"pi pi-sitemap\" className=\"p-button-rounded p-button-success mr-2\" onClick={() => Detalleproceso(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteproceso(rowData)} />\n            </div>\n        );\n    }\n\n    const hideDialogReporte = () => {\n        setasignacionReportDialog(false);\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Procesos Activos</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const procesoDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={proceso.idProceso ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteProcesoDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteProcesoDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteproceso} />\n        </>\n    );\n\n    return (\n        <>\n        {\n            !flagproceso ? (\n                <div className=\"grid crud-demo\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n\n                            <DataTable ref={dt} value={procesos}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} procesos\"\n                                globalFilter={globalFilter} emptyMessage=\"No procesos found.\" header={header} responsiveLayout=\"scroll\">\n\n                                <Column field=\"idProceso\" header=\"ID\" sortable body={idBodyTemplate} headerStyle={{ width: '5%', minWidth: '10rem' }}></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable body={nombreBodyTemplate} headerStyle={{ width: '25%', minWidth: '10rem' }}></Column>\n                                <Column field=\"fechaInicio\" header=\"Fecha Inicio\" body={fechaInicioBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"fechaFin\" header=\"Fecha Fin\" body={fechaFinBodyTemplate} sortable headerStyle={{ width: '15%', minWidth: '8rem' }}></Column>\n                                <Column field=\"descripcion\" header=\"Descripción\" body={descripcionBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column field=\"costo\" header=\"Costo\" body={costoBodyTemplate} sortable headerStyle={{ width: '25%', minWidth: '8rem' }}></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n\n                            <Dialog visible={procesoDialog} style={{ width: '1200px' }} header={proceso.idProceso ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={procesoDialogFooter} onHide={hideDialog}>\n                               \n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre*</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={proceso.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !proceso.nombre })} \n                                        />\n                                        { submitted &&  !proceso.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Costo</label>\n                                        <InputText \n                                            id=\"costo\" \n                                            name=\"costo\"\n                                            type=\"number\"\n                                            value={proceso.costo} \n                                            onChange={onInputChange} \n                                            required \n                                            \n                                            className={classNames({ 'p-error': submitted && !proceso.costo })} \n                                        />\n                                        { submitted &&  !proceso.costo && <small className=\"p-error\">Costo es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">Fecha Inicio</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaInicio\"\n                                            name=\"fechaInicio\"\n                                            value={ proceso.fechaInicio }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !proceso.fechaInicio && <small className=\"p-error\">Fecha Inicio es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">Fecha Fin</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaFin\"\n                                            name=\"fechaFin\"\n                                            value={ proceso.fechaFin }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !proceso.fechaFin && <small className=\"p-error\">Fecha Fin es requerido.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label htmlFor=\"descripcion\">Descripción</label>\n                                    <InputTextarea \n                                        id=\"descripcion\" \n                                        name=\"descripcion\"\n                                        value={proceso.descripcion} \n                                        onChange={onInputChange} \n                                        required \n                                        rows={3} \n                                        cols={20} \n                                    />\n                                </div>\n\n                            </Dialog>\n\n                            <Dialog visible={deleteProcesoDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteProcesoDialogFooter} onHide={hideDeleteProcesoDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {proceso && <span>Desea eliminar este item: <b>{proceso.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n\n                        </div>\n                    </div>\n                </div>\n            ):null\n        }\n        \n        {\n            flagproceso ? (\n                <DetalleProceso \n                    proceso={proceso}\n                    setFlagProceso={setFlagProceso}\n                />\n            ):null\n        }\n\n        <Dialog visible={asignacionReportDialog} style={{ width: '1500px' }} modal className=\"p-fluid\"  onHide={hideDialogReporte}>\n            <PDFViewer style={{width:\"100%\", height: \"90vh\"}}>\n                <ReportProceso \n                    procesos={procesos}\n                />\n            </PDFViewer>\n        </Dialog>\n\n        </>\n    )\n}\n\nexport default Proceso;","import React, { useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { Toolbar } from 'primereact/toolbar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport * as Service from \"./Service\";\nimport { MenuItem, Select, TextField } from '@mui/material';\nconst bcrypt = require(\"bcryptjs\");\nconst  Empleado = () => {\n\n    const [flagCrud, setFlagCrud] = useState(false);\n    const [idArea, setIdArea] = useState(\"\");\n\n    let formEmpleado = {\n        idAreaNegocio: idArea,\n        idRol: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        dpi: \"\",\n        nit: \"\",\n        direccion: \"\",\n        email: \"\",\n        fechaNacimiento: \"\",\n        telefono: null,\n        fechaIngreso:\"\",\n        sueldo: \"\",\n        idSede: \"\",\n        password: \"\"\n    };\n\n    const [empleados, setEmpleados] = useState(null);\n    const [empleadosDialog, setEmpleadosDialog] = useState(false);\n    const [deleteEmpleadosDialog, setDeleteEmpleadosDialog] = useState(false);\n    const [empleado, setEmpleado] = useState(formEmpleado);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState(null);\n    const toast = useRef(null);\n    const dt = useRef(null);\n    const [listRol, setListRol] = useState([]);\n    const [listSede, setListSede] = useState([]);\n    const [empresa, setEmpresa] = useState(\"\");\n  \n    useEffect(() => {\n        if (idArea) {\n            list();\n            getListRol();\n            getListSede();\n        }\n      // eslint-disable-next-line\n    }, [idArea]);\n    \n\n    const list = async()  => {\n        let aux = {idAreaNegocio: idArea};\n        let resp = await Service.listByArea(aux);\n        if (resp.valid) {\n            setEmpleados(resp.data);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const getListRol = async()  => {\n        let aux = [];\n        let resp = await Service.listRol();\n        if (resp.valid) {\n\n            if (idArea === 1)  aux = resp.data.filter(item => item.idRol === 3 || item.idRol === 7);\n            if (idArea === 2 || idArea === 3)  aux = resp.data.filter(item => item.idRol === 4 || item.idRol === 8);\n            if (idArea === 4)  aux = resp.data.filter(item => item.idRol === 10 || item.idRol === 11);\n            if (idArea === 5 || idArea === 6)  aux = resp.data.filter(item => item.idRol === 5 || item.idRol === 9);\n            setListRol(aux);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const getListSede = async()  => {\n        let aux = [];\n        let resp = await Service.listSede();\n        if (resp.valid) {\n            if (idArea === 2 || idArea === 3 || idArea === 4)  aux = resp.data.filter(item => item.idSede === 8);\n            if (idArea === 1)  aux = resp.data.filter(item => item.idSede === 5 || item.idSede === 4 || item.idSede === 3 || item.idSede === 8);\n            if (idArea === 5)  aux = resp.data.filter(item => item.idSede === 1 || item.idSede === 2 || item.idSede === 3 || item.idSede === 4);\n            if (idArea === 6)  aux = resp.data.filter(item => item.idSede === 5 || item.idSede === 6 || item.idSede === 7);\n            setListSede(aux);\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n    const openNew = () => {\n        setEmpleado(formEmpleado);\n        setSubmitted(false);\n        setEmpleadosDialog(true);\n    }\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setEmpleadosDialog(false);\n    }\n\n    const hideDeleteEmpleadosDialog = () => {\n        setDeleteEmpleadosDialog(false);\n    }\n\n    const submit = () => {\n        \n        if (empleado.nombre && empleado.apellido && empleado.dpi && empleado.nit && empleado.direccion && empleado.email) {\n             if (empleado.idEmpleado) {\n                 edit();\n             } else {\n                criptPassword();\n             }\n        } \n    }\n\n    const criptPassword = async () => {\n       \n        let pasw = \"\";\n        empleado.password = bcrypt.hash(pasw, 10, function (err, data){\n            if (data) {\n                empleado.password = data\n                save(empleado);   \n            }\n        })\n           \n    }\n\n    const save = async (empleado) => {\n           \n        let resp = await Service.save(empleado);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Agregado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n    const edit = async () => {\n        let resp = await Service.update(empleado);\n        if ( resp.valid ){\n            list();\n            hideDialog();\n            toast.current.show({ severity: 'success', summary: 'Exitoso!', detail: 'Actualizado Correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error!', detail: resp.msg, life: 3000 });\n        }\n    }\n\n\n\n    const editempleado = (empleado) => {\n        setEmpleado({ ...empleado });\n        setEmpleadosDialog(true);\n    }\n\n    const confirmDeleteempleado = (empleado) => {\n        setEmpleado(empleado);\n        setDeleteEmpleadosDialog(true);\n    }\n\n    const deleteempleado = async () => {\n        let resp = await Service.deleteById(empleado);\n        if ( resp.valid ) {\n            list();\n            setDeleteEmpleadosDialog(false);\n            toast.current.show({ severity: 'success', summary: 'Successful', detail: 'Eliminado correctamente', life: 3000 });\n        } else {\n            toast.current.show({ severity: 'error', summary: 'Error', detail: resp.msg, life: 3000 });\n        }\n\n    }\n\n\n\n    const onInputChange = (e) => {\n        const { value, name } = e.target;\n        setEmpleado({\n            ...empleado,\n            [name]: value,\n        });\n        setSubmitted(true);\n    }\n\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"AGREGAR\" icon=\"pi pi-plus\" className=\"p-button-success mr-2\" onClick={openNew} />\n                    <Button label=\"VOLVER\" icon=\"pi pi-plus\" className=\"p-button-warning mr-2\" onClick={()=> { setFlagCrud(false)}} />\n                </div>\n            </React.Fragment>\n        )\n    }\n\n\n\n    const actionBodyTemplate = (rowData) => {\n        return (\n            <div className=\"actions\">\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-warning mr-2\" onClick={() => editempleado(rowData)} />\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger mt-2\" onClick={() => confirmDeleteempleado(rowData)} />\n            </div>\n        );\n    }\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">{empresa} - Empleados</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const empleadosDialogFooter = (\n        <>\n            <Button label=\"CANCELAR\" icon=\"pi pi-times\" className=\"p-button-rounded p-button-danger p-button-text\" onClick={hideDialog} />\n            <Button label={empleado.idEmpleado ? \"EDITAR\" : \"GUARDAR\"} icon=\"pi pi-check\" className=\"p-button-rounded p-button-info p-button-text\" onClick={submit} />\n        </>\n    );\n    const deleteEmpleadosDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" className=\"p-button-text\" onClick={hideDeleteEmpleadosDialog} />\n            <Button label=\"SI\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={deleteempleado} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n\n            {\n                !flagCrud ? (\n                    <>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\" onClick={() => {setFlagCrud(true); setIdArea(1); setEmpresa(\"VENTAS\")    } } >\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/ventaProducto.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">VENTAS</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(2); setEmpresa(\"TRANSPORTE DE MATERIA PRIMA\")  }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/transporte1.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">TRANSPORTE DE MATERIA PRIMA</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(3); setEmpresa(\"TRANSPORTE DE PRODUCTOS\") }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/transporte2.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">TRANSPORTE DE PRODUCTOS</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\"onClick={() => {setFlagCrud(true); setIdArea(4); setEmpresa(\"CONSTRUCCIÓN\") }}>\n                            <div className=\"text-center\">\n                                <img height=\"400\" alt='' src=\"assets/demo/images/construccion.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">CONSTRUCCIÓN</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(5); setEmpresa(\"PLANTAS DE EXTRACCIÓN\")}}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/planta1.webp\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">PLANTAS DE EXTRACCIÓN</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 md:col-4\">\n                        <div className=\"card card-w-title\">\n                            <div className=\"text-center\" onClick={() => {setFlagCrud(true); setIdArea(6); setEmpresa(\"PLANTAS DE PROCESO\"); }}>\n                                <img height=\"400\" alt='' src=\"assets/demo/images/planta2.jpeg\" className=\"w-9 shadow-2 my-3 mx-0\" />\n                                <div className=\"text-2xl font-bold\">PLANTAS DE PROCESO</div>\n                            </div>\n                        </div>\n                    </div>\n                    </>\n                ): null\n            }\n            \n\n            {\n                flagCrud ? (\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            <Toast ref={toast} />\n                            <Toolbar className=\"mb-4\" right={rightToolbarTemplate}></Toolbar>\n        \n                            <DataTable ref={dt} value={empleados}\n                                dataKey=\"id\" paginator rows={10} rowsPerPageOptions={[5, 10, 25]} className=\"datatable-responsive\"\n                                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                                currentPageReportTemplate=\"Mostrando {first} de {last} de {totalRecords} empleados\"\n                                globalFilter={globalFilter} emptyMessage=\"No empleados found.\" header={header} responsiveLayout=\"scroll\">\n        \n                                <Column field=\"idEmpleado\" header=\"ID\" sortable ></Column>\n                                <Column field=\"nombre\" header=\"Nombre\" sortable></Column>\n                                <Column field=\"nit\" header=\"Nit\" sortable></Column>\n                                <Column field=\"telefono\" header=\"Telefono\"  sortable></Column>\n                                <Column field=\"email\" header=\"Email\"  sortable ></Column>\n                                <Column field=\"rol\" header=\"Rol\"  sortable ></Column>\n                                <Column field=\"areaNegocio\" header=\"Area\"  sortable ></Column>\n                                <Column body={actionBodyTemplate}></Column>\n                            </DataTable>\n        \n                            <Dialog visible={empleadosDialog} style={{ width: '1000px' }} header={empleado.idEmpleado ? \"EDITAR\" : \"NUEVO\"} modal className=\"p-fluid\" footer={empleadosDialogFooter} onHide={hideDialog}>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Nombre</label>\n                                        <InputText \n                                            id=\"nombre\" \n                                            name=\"nombre\"\n                                            value={empleado.nombre} \n                                            onChange={onInputChange} \n                                            required \n                                            autoFocus \n                                            className={classNames({ 'p-error': submitted && !empleado.nombre })} \n                                        />\n                                        { submitted &&  !empleado.nombre && <small className=\"p-error\">Nombre es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"apellido\">Apellido</label>\n                                        <InputText \n                                            id=\"apellido\" \n                                            name=\"apellido\"\n                                            value={empleado.apellido} \n                                            onChange={onInputChange} \n                                            required \n                                            className={classNames({ 'p-error': submitted && !empleado.apellido })} \n                                        />\n                                        { submitted &&  !empleado.apellido && <small className=\"p-error\">Apellido es requerido.</small>}\n                                \n                                    </div>\n                                </div>\n        \n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"price\">DPI</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"dpi\"\n                                            name=\"dpi\"\n                                            value={ empleado.dpi }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !empleado.dpi && <small className=\"p-error\">DPI es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"quantity\">NIT</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"nit\"\n                                            name=\"nit\"\n                                            value={ empleado.nit }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                            className=\"w-full\"\n                                        />\n                                        { submitted &&  !empleado.nit && <small className=\"p-error\">Nit es requerido.</small>}\n                                    </div>\n                                </div>\n        \n                                <div className=\"field\">\n                                    <label htmlFor=\"nombre\">Dirección</label>\n                                    <InputText \n                                        id=\"direccion\" \n                                        name=\"direccion\"\n                                        value={empleado.direccion} \n                                        onChange={onInputChange} \n                                        required \n                                        className={classNames({ 'p-error': submitted && !empleado.direccion })} \n                                    />\n                                    { submitted &&  !empleado.direccion && <small className=\"p-error\">Direccion es requerido.</small>}\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Email</label>\n                                        <TextField\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            className=\"w-full\"\n                                            value={ empleado.email }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                        { submitted &&  !empleado.email && <small className=\"p-error\">Email es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Fecha Nacimiento</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaNacimiento\"\n                                            name=\"fechaNacimiento\"\n                                            className=\"w-full\"\n                                            value={ empleado.fechaNacimiento }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Telefono</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"telefono\"\n                                            name=\"telefono\"\n                                            className=\"w-full\"\n                                            value={ empleado.telefono }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Fecha Ingreso</label>\n                                        <TextField\n                                            type=\"date\"\n                                            id=\"fechaIngreso\"\n                                            name=\"fechaIngreso\"\n                                            className=\"w-full\"\n                                            value={ empleado.fechaIngreso }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Rol*</label>\n                                        <Select \n                                            value={empleado.idRol} \n                                            className=\"w-full\"\n                                            id=\"idRol\" \n                                            name=\"idRol\" \n                                            onChange={onInputChange}\n                                        >\n                                            {listRol.map((item, index) => (\n                                                <MenuItem value={item.idRol} key={index}>\n                                                    {item.nombre}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !empleado.idRol && <small className=\"p-error\">Rol es requerido.</small>}\n                                    </div>\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"descripcion\">Sede*</label>\n                                        <Select \n                                            value={empleado.idSede} \n                                            className=\"w-full\"\n                                            id=\"idSede\" \n                                            name=\"idSede\" \n                                            onChange={onInputChange}\n                                        >\n                                            {listSede.map((item, index) => (\n                                                <MenuItem value={item.idSede} key={index}>\n                                                    {item.departamento}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                        { submitted &&  !empleado.idSede && <small className=\"p-error\">Sede es requerida.</small>}\n                                    </div>\n                                </div>\n                                <div className=\"formgrid grid\">\n                                    <div className=\"field col\">\n                                        <label htmlFor=\"nombre\">Sueldo</label>\n                                        <TextField\n                                            type=\"number\"\n                                            id=\"sueldo\"\n                                            name=\"sueldo\"\n                                            className=\"w-full\"\n                                            value={ empleado.sueldo }\n                                            onChange={onInputChange}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                            required\n                                        />\n                                    </div>\n                                    <div className=\"field col\">\n                                        {\n                                            empleado.idEmpleado ? null : (\n                                                <>\n                                                <label htmlFor=\"nombre\">Password</label>\n                                                <TextField\n                                                    type=\"password\"\n                                                    id=\"password\"\n                                                    name=\"password\"\n                                                    className=\"w-full\"\n                                                    value={ empleado.password }\n                                                    onChange={onInputChange}\n                                                    variant=\"outlined\"\n                                                    fullWidth\n                                                    required\n                                                />\n                                                 { submitted &&  !empleado.password && <small className=\"p-error\">Password es requerida.</small>}\n                                                </>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </Dialog>\n        \n                            <Dialog visible={deleteEmpleadosDialog} style={{ width: '450px' }} header=\"Confirmación\" modal footer={deleteEmpleadosDialogFooter} onHide={hideDeleteEmpleadosDialog}>\n                                <div className=\"flex align-items-center justify-content-center\">\n                                    <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                                    {empleado && <span>Desea eliminar este item: <b>{empleado.nombre}</b>?</span>}\n                                </div>\n                            </Dialog>\n        \n                        </div>\n                    </div>\n\n                ): null\n            }\n           \n        </div>\n    )\n}\n\nexport default Empleado;","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { Route, useLocation } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { AppTopbar } from './AppTopbar';\nimport { AppFooter } from './AppFooter';\nimport { AppMenu } from './AppMenu';\nimport { AppConfig } from './AppConfig';\n\nimport Dashboard from './components/Dashboard';\n\n\nimport PrimeReact from 'primereact/api';\nimport { Tooltip } from 'primereact/tooltip';\n\nimport 'primereact/resources/primereact.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\nimport 'prismjs/themes/prism-coy.css';\nimport './assets/demo/flags/flags.css';\nimport './assets/demo/Demos.scss';\nimport './assets/layout/layout.scss';\nimport './App.scss';\n\nimport Categoria from './ventas/categoria/Categoria';\nimport Producto from './ventas/producto/Producto';\nimport Cliente from './user/clientes/Cliente';\nimport TipoAlquiler from './ventas/tipoAlquiler/TipoAlquiler';\nimport PrincipalVentas from './ventas/PrincipalVentas';\n\n\nimport TipoVehiculo from './transportes/tipoVehiculo/TipoVehiculo';\nimport Vehiculo from './transportes/vehiculo/Vehiculo';\nimport Viaje from './transportes/viaje/Viaje';\nimport ClienteTransporte from './transportes/clientes/Cliente'; \nimport Asignacion from './transportes/asignacion/Asignacion';\n\nimport TipoObra from './construccion/tipoObra/TipoObra';\nimport TipoMaterial from './construccion/tipoMaterial/TipoMaterial';\nimport Material from './construccion/material/Material';\nimport Obra from './construccion/obra/Obra';\n\nimport TipoMateriaPrima from './plantas/tipoMateriaPrima/TipoMateriaPrima';\nimport TipoMaquinaria from './plantas/tipoMaquinaria/TipoMaquinaria';\nimport MateriaPrima from './plantas/materiaPrima/MateriaPrima';\nimport Maquinaria from './plantas/maquinaria/Maquinaria';\nimport Proceso from './plantas/proceso/Proceso';\n\nimport Empleado from './user/empleado/Empleado';\n\nconst App = (props) => {\n    const [layoutMode, setLayoutMode] = useState('static');\n    const [layoutColorMode, setLayoutColorMode] = useState('light')\n    const [inputStyle, setInputStyle] = useState('outlined');\n    const [ripple, setRipple] = useState(true);\n    const [staticMenuInactive, setStaticMenuInactive] = useState(false);\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\n    const [mobileMenuActive, setMobileMenuActive] = useState(false);\n    const [mobileTopbarMenuActive, setMobileTopbarMenuActive] = useState(false);\n    const copyTooltipRef = useRef();\n    const location = useLocation();\n\n    PrimeReact.ripple = true;\n\n    let menuClick = false;\n    let mobileTopbarMenuClick = false;\n\n\n    useEffect(() => {\n        if (mobileMenuActive) {\n            addClass(document.body, \"body-overflow-hidden\");\n        } else {\n            removeClass(document.body, \"body-overflow-hidden\");\n        }\n    }, [mobileMenuActive]);\n\n    useEffect(() => {\n        copyTooltipRef && copyTooltipRef.current && copyTooltipRef.current.updateTargetEvents();\n    }, [location]);\n\n    const onInputStyleChange = (inputStyle) => {\n        setInputStyle(inputStyle);\n    }\n\n    const onRipple = (e) => {\n        PrimeReact.ripple = e.value;\n        setRipple(e.value)\n    }\n\n    const onLayoutModeChange = (mode) => {\n        setLayoutMode(mode)\n    }\n\n    const onColorModeChange = (mode) => {\n        setLayoutColorMode(mode)\n    }\n\n    const onWrapperClick = (event) => {\n        if (!menuClick) {\n            setOverlayMenuActive(false);\n            setMobileMenuActive(false);\n        }\n\n        if (!mobileTopbarMenuClick) {\n            setMobileTopbarMenuActive(false);\n        }\n\n        mobileTopbarMenuClick = false;\n        menuClick = false;\n    }\n\n    const onToggleMenuClick = (event) => {\n        menuClick = true;\n\n        if (isDesktop()) {\n            if (layoutMode === 'overlay') {\n                if (mobileMenuActive === true) {\n                    setOverlayMenuActive(true);\n                }\n\n                setOverlayMenuActive((prevState) => !prevState);\n                setMobileMenuActive(false);\n            }\n            else if (layoutMode === 'static') {\n                setStaticMenuInactive((prevState) => !prevState);\n            }\n        }\n        else {\n            setMobileMenuActive((prevState) => !prevState);\n        }\n\n        event.preventDefault();\n    }\n\n    const onSidebarClick = () => {\n        menuClick = true;\n    }\n\n    const onMobileTopbarMenuClick = (event) => {\n        mobileTopbarMenuClick = true;\n\n        setMobileTopbarMenuActive((prevState) => !prevState);\n        event.preventDefault();\n    }\n\n    const onMobileSubTopbarMenuClick = (event) => {\n        mobileTopbarMenuClick = true;\n\n        event.preventDefault();\n    }\n\n    const onMenuItemClick = (event) => {\n        if (!event.item.items) {\n            setOverlayMenuActive(false);\n            setMobileMenuActive(false);\n        }\n    }\n    const isDesktop = () => {\n        return window.innerWidth >= 992;\n    }\n\n    const menu = [\n        {\n            label: 'Inicio',\n            items: [{\n                label: 'Principal', icon: 'pi pi-fw pi-home', to: '/', },\n                {label: 'Empleados', icon: 'pi pi-fw pi-users', to: '/empleado'},\n            ]\n        },\n        {\n            label: 'MODULOS', icon: 'pi pi-fw pi-search',\n            items: [\n                {\n                    label: 'VENTAS', icon: 'pi pi-fw pi-shopping-cart',\n                    items: [\n                        {label: 'Principal', icon: 'pi pi-fw pi-tags', to: '/principalVenta'},\n                        {label: 'Categorias', icon: 'pi pi-fw pi-sitemap' , to: '/categoria' },\n                        {label: 'Productos', icon: 'pi pi-fw pi-table', to: '/producto'},\n                        {label: 'Tipo Alquiler', icon: 'pi pi-fw pi-th-large', to: '/tipoAlquiler'},\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/cliente/ventas'},\n                    ]\n                },\n                {\n                    label: 'TRASNPORTE', icon: 'pi pi-fw pi-car',\n                    items: [\n                        {label: 'Asignaciones', icon: 'pi pi-fw pi-tag', to: '/asignacion'},\n                        {label: 'Viajes', icon: 'pi pi-fw pi-send', to: '/viaje'},\n                        {label: 'Vehiculo', icon: 'pi pi-fw pi-car', to: '/vehiculo'},\n                        {label: 'Tipo Vehiculo', icon: 'pi pi-fw pi-clone', to: '/tipoVehiculo'},\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/clienteTransporte'}\n                    ]\n                },\n                {\n                    label: 'CONSTRUCCION', icon: 'pi pi-fw pi-building',\n                    items: [\n                        {label: 'Clientes', icon: 'pi pi-fw pi-users', to: '/cliente/construccion'},\n                        {label: 'Obras', icon: 'pi pi-fw pi-building', to: '/obra'},\n                        {label: 'Materiales', icon: 'pi pi-fw pi-briefcase', to: '/material'},\n                        {label: 'Tipo Obras', icon: 'pi pi-fw pi-box', to: '/tipoObra'},\n                        {label: 'Tipo Materiales', icon: 'pi pi-fw pi-sitemap', to: '/tipoMaterial'},\n                    ]\n                },\n                \n                {\n                    label: 'PLANTAS', icon: 'pi pi-fw pi-th-large',\n                    items: [\n                        {label: 'Procesos', icon: 'pi pi-fw pi-box', to: '/proceso'},\n                        {label: 'Materias Primas', icon: 'pi pi-fw pi-building', to: '/materiaPrima'},\n                        {label: 'Tipo Materia Prima', icon: 'pi pi-fw pi-bookmark', to: '/tipoMateriaPrima'},\n                        {label: 'Maquinaria', icon: 'pi pi-fw pi-car', to: '/maquinaria'},\n                        {label: 'Tipo Maquinaria', icon: 'pi pi-fw pi-car', to: '/tipoMaquinaria'},\n                    ]\n                },\n            ]\n        },\n    ];\n\n    const addClass = (element, className) => {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    }\n\n    const removeClass = (element, className) => {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n\n    const wrapperClass = classNames('layout-wrapper', {\n        'layout-overlay': layoutMode === 'overlay',\n        'layout-static': layoutMode === 'static',\n        'layout-static-sidebar-inactive': staticMenuInactive && layoutMode === 'static',\n        'layout-overlay-sidebar-active': overlayMenuActive && layoutMode === 'overlay',\n        'layout-mobile-sidebar-active': mobileMenuActive,\n        'p-input-filled': inputStyle === 'filled',\n        'p-ripple-disabled': ripple === false,\n        'layout-theme-light': layoutColorMode === 'light'\n    });\n\n    return (\n        <div className={wrapperClass} onClick={onWrapperClick}>\n            <Tooltip ref={copyTooltipRef} target=\".block-action-copy\" position=\"bottom\" content=\"Copied to clipboard\" event=\"focus\" />\n\n            <AppTopbar onToggleMenuClick={onToggleMenuClick} layoutColorMode={layoutColorMode}\n                mobileTopbarMenuActive={mobileTopbarMenuActive} onMobileTopbarMenuClick={onMobileTopbarMenuClick} onMobileSubTopbarMenuClick={onMobileSubTopbarMenuClick} setAutenticado={props.setAutenticado}  />\n\n            <div className=\"layout-sidebar\" onClick={onSidebarClick}>\n                <AppMenu model={menu} onMenuItemClick={onMenuItemClick} layoutColorMode={layoutColorMode} />\n            </div>\n\n            <div className=\"layout-main-container\">\n                <div className=\"layout-main\">\n                    <Route path=\"/\"  exact render={() => <Dashboard colorMode={layoutColorMode} location={location} />} />\n\n\n\n                    <Route path=\"/cliente/ventas\"  render={() => <Cliente idNegocio={3} />}/>\n                    <Route path=\"/cliente/construccion\"  render={() => <Cliente idNegocio={6} />}/>\n                    <Route path=\"/categoria\" component={Categoria} />\n                    <Route path=\"/producto\" component={Producto} />\n                    <Route path=\"/tipoAlquiler\" component={TipoAlquiler} />\n                    <Route path=\"/principalVenta\" component={PrincipalVentas} />\n\n                    <Route path=\"/tipoVehiculo\" component={TipoVehiculo}/>\n                    <Route path=\"/vehiculo\" component={Vehiculo}/>\n                    <Route path=\"/viaje\" component={Viaje}/>\n                    <Route path=\"/clienteTransporte\" component={ClienteTransporte}/>\n                    <Route path=\"/asignacion\" component={Asignacion}/>\n\n                    <Route path=\"/tipoObra\" component={TipoObra}/>\n                    <Route path=\"/tipoMaterial\" component={TipoMaterial}/>\n                    <Route path=\"/material\" component={Material}/>\n                    <Route path=\"/obra\" component={Obra}/>\n\n\n                    <Route path=\"/tipoMaquinaria\" component={TipoMaquinaria}/>\n                    <Route path=\"/tipoMateriaPrima\" component={TipoMateriaPrima}/>\n                    <Route path=\"/materiaPrima\" component={MateriaPrima}/>\n                    <Route path=\"/maquinaria\" component={Maquinaria}/>\n                    <Route path=\"/proceso\" component={Proceso}/>\n\n\n                    <Route path=\"/empleado\" component={Empleado}/>\n\n                </div>\n\n                <AppFooter layoutColorMode={layoutColorMode} />\n            </div>\n\n            <AppConfig rippleEffect={ripple} onRippleEffect={onRipple} inputStyle={inputStyle} onInputStyleChange={onInputStyleChange}\n                layoutMode={layoutMode} onLayoutModeChange={onLayoutModeChange} layoutColorMode={layoutColorMode} onColorModeChange={onColorModeChange}  />\n\n            <CSSTransition classNames=\"layout-mask\" timeout={{ enter: 200, exit: 200 }} in={mobileMenuActive} unmountOnExit>\n                <div className=\"layout-mask p-component-overlay\"></div>\n            </CSSTransition>\n\n        </div>\n    );\n\n}\n\nexport default App;\n","import \"./Styles/login.css\";\nimport React, {useState, useRef} from 'react';\nimport Img from './img/result.svg';\nimport { TextField } from '@mui/material';\nimport { Toast } from 'primereact/toast';\n\n\nconst Login = (props) => {\n  const toast = useRef(null);\n  const [loginForm, setLoginForm] = useState({\n    user: \"\",\n    pass: \"\"\n  });\n\n  const handleLogin = () => {\n    if ( loginForm.user && loginForm.pass) {\n      if (loginForm.user === 'lucio@gmail.com' && loginForm.pass === '1234') {\n        props.setAutenticado(true)\n      } else {\n        toast.current.show({ severity: 'error', summary: 'Error', detail: \"Credenciales incorrectas\", life: 3000 });\n      }\n      \n    } else {\n      toast.current.show({ severity: 'info', summary: 'Error', detail: \"Ingrese las credenciales\", life: 3000 });\n    }\n  }\n\n  const onInputChange = (e) => {\n    const { value, name } = e.target;\n    setLoginForm({\n        ...loginForm,\n        [name]: value,\n    });\n}\n\n\n    return (\n    <div className=\"body\">\n      <Toast ref={toast} />\n        <div className=\"left-login\">\n          <img src={Img} alt=\"Pessoas olhando gráficos\" className=\"chart\" />\n  \n        </div>\n  \n        <div className=\"right-login\">\n          <div className=\"card\">\n           \n            <h1>LOGIN</h1>\n              <div className=\"card\">\n                <div className=\"field\">\n                     <label htmlFor=\"price\">Usuario</label>\n                    <TextField\n                        type=\"email\"\n                        id=\"user\"\n                        name=\"user\"\n                        value={ loginForm.user }\n                        onChange={onInputChange}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                </div>\n  \n  \n                <div className=\"field\">\n                    <label htmlFor=\"price\">Password</label>\n                    <TextField\n                        type=\"password\"\n                        id=\"pass\"\n                        name=\"pass\"\n                        value={ loginForm.pass }\n                        onChange={onInputChange}\n                        variant=\"outlined\"\n                        fullWidth\n                        required\n                    />\n                </div>\n  \n                <button \n                    className=\"button\" \n                    type=\"submit\"\n                    onClick={handleLogin }\n                >\n                  INGRESAR\n                </button>\n              </div>\n          </div>\n          \n        </div>\n      </div>\n    )\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport App from './App';\nimport Login from './login/Login';\n\n\n\n\nconst Principal = () => {\n\n    const [autenticado, setAutenticado] = useState(false);\n\n    return (\n        <>\n        {\n            autenticado ? (\n                <App\n                    setAutenticado={setAutenticado}\n                />\n            ): (\n                <Login\n                    setAutenticado={setAutenticado}\n                />\n            )\n        }\n       \n        </>\n    )\n}\n\nexport default Principal;","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport ScrollToTop from './ScrollToTop';\nimport Principal from './Principal';\n\nReactDOM.render(\n    <HashRouter>\n        <ScrollToTop>\n            <Principal></Principal>\n        </ScrollToTop>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}